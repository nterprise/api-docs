{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://docs.nterprise.com/schemas/niagara/niagara.json",
  "type": "object",
  "description": "A reference for all niagara entities",
  "properties": {
    "closeSteps": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/allCloseSteps.json",
      "type": "object",
      "properties": {
        "close_step": {
          "anyOf": [
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/failStep.json",
              "type": "object",
              "description": "How to mark a step as failed",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "example": "fail",
                  "x-examples": [
                    "fail"
                  ]
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/stepCloseCommon.json",
                  "type": "object",
                  "x-ui-hide": true,
                  "required": [
                    "step",
                    "type"
                  ],
                  "properties": {
                    "step": {
                      "type": "string",
                      "description": "Step to mark as complete",
                      "pattern": "^[a-z][a-z-]+[a-z]$",
                      "example": "complete",
                      "x-examples": [
                        "complete"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "close",
                        "fail"
                      ],
                      "default": "close",
                      "description": "Type of close function for step",
                      "example": "close",
                      "x-examples": [
                        "close"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/machine/aceIos.json",
              "type": "object",
              "description": "Complete an ACE-IOS step",
              "properties": {
                "options": {
                  "type": "object",
                  "required": [
                    "application",
                    "configuration"
                  ],
                  "properties": {
                    "restore_device": {
                      "type": "boolean",
                      "description": "Restore device to factory defaults"
                    },
                    "automated_enrollment": {
                      "type": "boolean",
                      "description": "Automatically enroll the device to MDM"
                    },
                    "fields": {
                      "type": "array",
                      "description": "Field values to set",
                      "items": {
                        "type": "object",
                        "required": [
                          "value",
                          "label"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value to set on 'entity_path'. Note: this MUST always be passed as a string. The input filter is responsible for transforming the value to the correct data type",
                            "example": "AX-7784899",
                            "x-examples": [
                              "AX-7784899"
                            ]
                          },
                          "entity_field": {
                            "type": "string",
                            "description": "JSON Path to the field on the entity. If the path does not start with '$' then the entity on the context is assumed. Otherwise the data will be set on the context path",
                            "example": "$.input_filter[?(@.key = 'asset-tag')]",
                            "x-examples": [
                              "$.input_filter[?(@.key = 'asset-tag')]"
                            ]
                          }
                        }
                      }
                    },
                    "installed_apps": {
                      "type": "array",
                      "description": "A list of applications installed on the device.",
                      "items": {
                        "type": "string",
                        "format": "uri",
                        "example": "com.apple.itunes",
                        "x-examples": [
                          "com.apple.itunes"
                        ]
                      }
                    },
                    "battery_charge": {
                      "type": "integer",
                      "description": "The current battery charge",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/stepCloseCommon.json",
                  "type": "object",
                  "x-ui-hide": true,
                  "required": [
                    "step",
                    "type"
                  ],
                  "properties": {
                    "step": {
                      "type": "string",
                      "description": "Step to mark as complete",
                      "pattern": "^[a-z][a-z-]+[a-z]$",
                      "example": "complete",
                      "x-examples": [
                        "complete"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "close",
                        "fail"
                      ],
                      "default": "close",
                      "description": "Type of close function for step",
                      "example": "close",
                      "x-examples": [
                        "close"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/user/followPDFInstructions.json",
              "type": "object",
              "description": "Complete the follow-pdf-instructions-step",
              "required": [
                "attachment_id",
                "step"
              ],
              "properties": {
                "attachment_id": {
                  "type": "string",
                  "description": "UUID for the attachment",
                  "format": "uuid"
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/stepCloseCommon.json",
                  "type": "object",
                  "x-ui-hide": true,
                  "required": [
                    "step",
                    "type"
                  ],
                  "properties": {
                    "step": {
                      "type": "string",
                      "description": "Step to mark as complete",
                      "pattern": "^[a-z][a-z-]+[a-z]$",
                      "example": "complete",
                      "x-examples": [
                        "complete"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "close",
                        "fail"
                      ],
                      "default": "close",
                      "description": "Type of close function for step",
                      "example": "close",
                      "x-examples": [
                        "close"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/user/manualDataEntry.json",
              "type": "object",
              "description": "Close ",
              "required": [
                "fields",
                "step"
              ],
              "properties": {
                "fields": {
                  "type": "array",
                  "description": "Configuration for each field",
                  "items": {
                    "type": "object",
                    "required": [
                      "value",
                      "label"
                    ],
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "Value to set on 'entity_path'. Note: this MUST always be passed as a string. The input filter is responsible for transforming the value to the correct data type"
                      },
                      "entity_field": {
                        "type": "string",
                        "description": "JSON Path to the field on the entity. If the path does not start with '$' then the entity on the context is assumed. Otherwise the data will be set on the context path"
                      }
                    }
                  }
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/stepCloseCommon.json",
                  "type": "object",
                  "x-ui-hide": true,
                  "required": [
                    "step",
                    "type"
                  ],
                  "properties": {
                    "step": {
                      "type": "string",
                      "description": "Step to mark as complete",
                      "pattern": "^[a-z][a-z-]+[a-z]$",
                      "example": "complete",
                      "x-examples": [
                        "complete"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "close",
                        "fail"
                      ],
                      "default": "close",
                      "description": "Type of close function for step",
                      "example": "close",
                      "x-examples": [
                        "close"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/user/taskList.json",
              "type": "object",
              "description": "Close the task-list step",
              "required": [
                "fields",
                "step"
              ],
              "properties": {
                "items": {
                  "type": "array",
                  "description": "Configuration for each task list item",
                  "items": {
                    "type": "object",
                    "required": [
                      "value",
                      "slug"
                    ],
                    "properties": {
                      "value": {
                        "type": "string",
                        "enum": [
                          "ok",
                          "na",
                          "bad"
                        ],
                        "description": "Selects which item the user has selected"
                      },
                      "slug": {
                        "type": "string",
                        "description": "Slug for the item (Auto-generated from the label)",
                        "readOnly": true,
                        "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                      }
                    }
                  }
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/stepCloseCommon.json",
                  "type": "object",
                  "x-ui-hide": true,
                  "required": [
                    "step",
                    "type"
                  ],
                  "properties": {
                    "step": {
                      "type": "string",
                      "description": "Step to mark as complete",
                      "pattern": "^[a-z][a-z-]+[a-z]$",
                      "example": "complete",
                      "x-examples": [
                        "complete"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "close",
                        "fail"
                      ],
                      "default": "close",
                      "description": "Type of close function for step",
                      "example": "close",
                      "x-examples": [
                        "close"
                      ]
                    }
                  }
                }
              ]
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/close/stepCloseCommon.json",
              "type": "object",
              "x-ui-hide": true,
              "required": [
                "step",
                "type"
              ],
              "properties": {
                "step": {
                  "type": "string",
                  "description": "Step to mark as complete",
                  "pattern": "^[a-z][a-z-]+[a-z]$",
                  "example": "complete",
                  "x-examples": [
                    "complete"
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "close",
                    "fail"
                  ],
                  "default": "close",
                  "description": "Type of close function for step",
                  "example": "close",
                  "x-examples": [
                    "close"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "batch": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/batch.json",
      "type": "object",
      "description": "Defines the properties for a work order batch",
      "additionalProperties": false,
      "required": [
        "queue",
        "entity_id",
        "entity_type",
        "created",
        "updated"
      ],
      "properties": {
        "batch_id": {
          "description": "The identifier for the batch",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "BAT"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "queue": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/queue.json",
          "type": "object",
          "description": "Defines the properties for a location queue",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "location"
          ],
          "properties": {
            "queue_id": {
              "type": "string",
              "description": "The identifier for the queue",
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "QUE"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "location": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
              "type": "object",
              "description": "Defines the properties for a part unit",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "location_type",
                "address"
              ],
              "properties": {
                "location_id": {
                  "description": "The identifier for the location",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "LOC"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "location_type": {
                  "type": "string",
                  "description": "The type of location",
                  "enum": [
                    "warehouse",
                    "facility",
                    "other"
                  ]
                },
                "formatted_address": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Address formatted for the where region the location exists in"
                },
                "address": {
                  "type": "object",
                  "required": [
                    "country",
                    "administrative_area",
                    "locality",
                    "postal_code",
                    "thoroughfare"
                  ],
                  "description": "xNAL address for the location ",
                  "properties": {
                    "country": {
                      "type": "string",
                      "description": "Three Letter ISO country code",
                      "enum": [
                        "ABW",
                        "AFG",
                        "AGO",
                        "AIA",
                        "ALA",
                        "ALB",
                        "AND",
                        "ARE",
                        "ARG",
                        "ARM",
                        "ASM",
                        "ATA",
                        "ATF",
                        "ATG",
                        "AUS",
                        "AUT",
                        "AZE",
                        "BDI",
                        "BEL",
                        "BEN",
                        "BES",
                        "BFA",
                        "BGD",
                        "BGR",
                        "BHR",
                        "BHS",
                        "BIH",
                        "BLM",
                        "BLR",
                        "BLZ",
                        "BMU",
                        "BOL",
                        "BRA",
                        "BRB",
                        "BRN",
                        "BTN",
                        "BVT",
                        "BWA",
                        "CAF",
                        "CAN",
                        "CCK",
                        "CHE",
                        "CHL",
                        "CHN",
                        "CIV",
                        "CMR",
                        "COD",
                        "COG",
                        "COK",
                        "COL",
                        "COM",
                        "CPV",
                        "CRI",
                        "CUB",
                        "CUW",
                        "CXR",
                        "CYM",
                        "CYP",
                        "CZE",
                        "DEU",
                        "DJI",
                        "DMA",
                        "DNK",
                        "DOM",
                        "DZA",
                        "ECU",
                        "EGY",
                        "ERI",
                        "ESH",
                        "ESP",
                        "EST",
                        "ETH",
                        "FIN",
                        "FJI",
                        "FLK",
                        "FRA",
                        "FRO",
                        "FSM",
                        "GAB",
                        "GBR",
                        "GEO",
                        "GGY",
                        "GHA",
                        "GIB",
                        "GIN",
                        "GLP",
                        "GMB",
                        "GNB",
                        "GNQ",
                        "GRC",
                        "GRD",
                        "GRL",
                        "GTM",
                        "GUF",
                        "GUM",
                        "GUY",
                        "HKG",
                        "HMD",
                        "HND",
                        "HRV",
                        "HTI",
                        "HUN",
                        "IDN",
                        "IMN",
                        "IND",
                        "IOT",
                        "IRL",
                        "IRN",
                        "IRQ",
                        "ISL",
                        "ISR",
                        "ITA",
                        "JAM",
                        "JEY",
                        "JOR",
                        "JPN",
                        "KAZ",
                        "KEN",
                        "KGZ",
                        "KHM",
                        "KIR",
                        "KNA",
                        "KOR",
                        "KWT",
                        "LAO",
                        "LBN",
                        "LBR",
                        "LBY",
                        "LCA",
                        "LIE",
                        "LKA",
                        "LSO",
                        "LTU",
                        "LUX",
                        "LVA",
                        "MAC",
                        "MAF",
                        "MAR",
                        "MCO",
                        "MDA",
                        "MDG",
                        "MDV",
                        "MEX",
                        "MHL",
                        "MKD",
                        "MLI",
                        "MLT",
                        "MMR",
                        "MNE",
                        "MNG",
                        "MNP",
                        "MOZ",
                        "MRT",
                        "MSR",
                        "MTQ",
                        "MUS",
                        "MWI",
                        "MYS",
                        "MYT",
                        "NAM",
                        "NCL",
                        "NER",
                        "NFK",
                        "NGA",
                        "NIC",
                        "NIU",
                        "NLD",
                        "NOR",
                        "NPL",
                        "NRU",
                        "NZL",
                        "OMN",
                        "PAK",
                        "PAN",
                        "PCN",
                        "PER",
                        "PHL",
                        "PLW",
                        "PNG",
                        "POL",
                        "PRI",
                        "PRK",
                        "PRT",
                        "PRY",
                        "PSE",
                        "PYF",
                        "QAT",
                        "REU",
                        "ROU",
                        "RUS",
                        "RWA",
                        "SAU",
                        "SDN",
                        "SEN",
                        "SGP",
                        "SGS",
                        "SHN",
                        "SJM",
                        "SLB",
                        "SLE",
                        "SLV",
                        "SMR",
                        "SOM",
                        "SPM",
                        "SRB",
                        "SSD",
                        "STP",
                        "SUR",
                        "SVK",
                        "SVN",
                        "SWE",
                        "SWZ",
                        "SXM",
                        "SYC",
                        "SYR",
                        "TCA",
                        "TCD",
                        "TGO",
                        "THA",
                        "TJK",
                        "TKL",
                        "TKM",
                        "TLS",
                        "TON",
                        "TTO",
                        "TUN",
                        "TUR",
                        "TUV",
                        "TWN",
                        "TZA",
                        "UGA",
                        "UKR",
                        "UMI",
                        "URY",
                        "USA",
                        "UZB",
                        "VAT",
                        "VCT",
                        "VEN",
                        "VGB",
                        "VIR",
                        "VNM",
                        "VUT",
                        "WLF",
                        "WSM",
                        "YEM",
                        "ZAF",
                        "ZMB",
                        "ZWE"
                      ]
                    },
                    "administrative_area": {
                      "type": "string",
                      "description": "State / Province / Region"
                    },
                    "sub_administrative_area": {
                      "type": "string",
                      "description": "County / District"
                    },
                    "locality": {
                      "type": "string",
                      "description": "City / Town"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "Postal Code / Zip Code"
                    },
                    "thoroughfare": {
                      "type": "string",
                      "description": "Street Address"
                    },
                    "premise": {
                      "type": "string",
                      "description": "Apartment / Suite / Box number etc"
                    },
                    "sub_premise": {
                      "type": "string",
                      "description": "Floor # / Room # / Building label etc"
                    }
                  }
                }
              }
            },
            "priority": {
              "type": "integer",
              "description": "Priority level for queue",
              "minimum": 0
            },
            "total_work_orders": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/cycle.json",
              "type": "object",
              "readOnly": true,
              "additionalProperties": false,
              "properties": {
                "pending": {
                  "type": "integer",
                  "description": "The number of cycles pending",
                  "readOnly": true
                },
                "in_progress": {
                  "type": "integer",
                  "description": "The number of cycles in progress",
                  "readOnly": true
                },
                "verifying": {
                  "type": "integer",
                  "description": "The number of cycles verifying",
                  "readOnly": true
                },
                "complete": {
                  "type": "integer",
                  "description": "The number of cycles complete",
                  "readOnly": true
                },
                "blocked": {
                  "type": "integer",
                  "description": "The number of cycles blocked",
                  "readOnly": true
                },
                "cancelled": {
                  "type": "integer",
                  "description": "The number of cycles cancelled",
                  "readOnly": true
                }
              }
            },
            "total_batches": {
              "type": "integer",
              "description": "Number of batches assigned to the queue",
              "readOnly": true
            }
          }
        },
        "priority": {
          "type": "integer",
          "description": "Priority order for the batch",
          "minimum": 0
        },
        "number_cycles": {
          "type": "integer",
          "description": "The number of cycles for this batch",
          "minimum": 1
        },
        "cycles": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/cycle.json",
          "type": "object",
          "readOnly": true,
          "additionalProperties": false,
          "properties": {
            "pending": {
              "type": "integer",
              "description": "The number of cycles pending",
              "readOnly": true
            },
            "in_progress": {
              "type": "integer",
              "description": "The number of cycles in progress",
              "readOnly": true
            },
            "verifying": {
              "type": "integer",
              "description": "The number of cycles verifying",
              "readOnly": true
            },
            "complete": {
              "type": "integer",
              "description": "The number of cycles complete",
              "readOnly": true
            },
            "blocked": {
              "type": "integer",
              "description": "The number of cycles blocked",
              "readOnly": true
            },
            "cancelled": {
              "type": "integer",
              "description": "The number of cycles cancelled",
              "readOnly": true
            }
          }
        },
        "work_order": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/workOrder.json",
          "type": "object",
          "description": "Defines the properties for a unit",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "part",
            "work_order_type"
          ],
          "properties": {
            "work_order_id": {
              "type": "string",
              "description": "The identifier for the unit",
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "WOR"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "start_date": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time",
              "description": "Start date"
            },
            "end_date": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time",
              "description": "End date"
            },
            "description": {
              "type": "string",
              "description": "Detailed description for the work order"
            },
            "work_order_type": {
              "type": "string",
              "description": "Type of work order",
              "enum": [
                "device"
              ]
            },
            "due_date": {
              "type": "string",
              "format": "date-time",
              "description": "End date"
            },
            "current_status": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
              "type": "object",
              "description": "Defines the properties for a status",
              "additionalProperties": false,
              "required": [
                "status",
                "category"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "description": "A Custom label for the status",
                  "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                },
                "category": {
                  "type": "string",
                  "description": "The classifier for the statues",
                  "enum": [
                    "PENDING",
                    "IN_PROGRESS",
                    "VERIFYING",
                    "COMPLETE",
                    "CANCELLED",
                    "BLOCKED"
                  ]
                }
              }
            },
            "project": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/project.json",
              "type": "object",
              "description": "Defines the properties for a project",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "customer",
                "program",
                "allowed_statuses"
              ],
              "properties": {
                "project_id": {
                  "type": "string",
                  "description": "Unique identifier",
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "PRJ"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "customer": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                  "type": "object",
                  "description": "Customer",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "allowed_statuses"
                  ],
                  "properties": {
                    "customer_id": {
                      "description": "Customer identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "CUS"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "external_platform": {
                      "type": "object",
                      "description": "External Identifiers for the customer",
                      "deprecated": true,
                      "patternProperties": {
                        "^[A-Za-z][A-Za-z0-9_]*$": {
                          "type": "string"
                        }
                      }
                    },
                    "allowed_statuses": {
                      "type": "array",
                      "description": "List of allowed statuses",
                      "uniqueItems": true,
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                        "type": "object",
                        "description": "Defines the properties for a status",
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "category"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "A Custom label for the status",
                            "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                          },
                          "category": {
                            "type": "string",
                            "description": "The classifier for the statues",
                            "enum": [
                              "PENDING",
                              "IN_PROGRESS",
                              "VERIFYING",
                              "COMPLETE",
                              "CANCELLED",
                              "BLOCKED"
                            ]
                          }
                        }
                      }
                    },
                    "total_programs": {
                      "type": "number",
                      "description": "Total programs under the customer"
                    },
                    "total_projects": {
                      "type": "number",
                      "description": "Total projects under the customer"
                    }
                  }
                },
                "program": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/program.json",
                  "type": "object",
                  "description": "Defines the properties for a program",
                  "additionalProperties": false,
                  "required": [
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "customer",
                    "allowed_statuses"
                  ],
                  "properties": {
                    "program_id": {
                      "description": "Unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "PGM"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "start_date": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "Start date"
                    },
                    "end_date": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "End date"
                    },
                    "customer": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                      "type": "object",
                      "description": "Customer",
                      "additionalProperties": false,
                      "required": [
                        "label",
                        "entity_id",
                        "entity_type",
                        "created",
                        "updated",
                        "allowed_statuses"
                      ],
                      "properties": {
                        "customer_id": {
                          "description": "Customer identifier",
                          "type": "string",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_id": {
                          "x-no-api-doc": true,
                          "type": "string",
                          "description": "Customer identifier",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_type": {
                          "x-no-api-doc": true,
                          "const": "CUS"
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the entity"
                        },
                        "slug": {
                          "type": "string",
                          "description": "Slug for the entity (Auto-generated from the label)",
                          "readOnly": true,
                          "deprecated": true,
                          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                        },
                        "created": {
                          "description": "Date the entity was created",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "updated": {
                          "description": "Last date the entity was updated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "external_platform": {
                          "type": "object",
                          "description": "External Identifiers for the customer",
                          "deprecated": true,
                          "patternProperties": {
                            "^[A-Za-z][A-Za-z0-9_]*$": {
                              "type": "string"
                            }
                          }
                        },
                        "allowed_statuses": {
                          "type": "array",
                          "description": "List of allowed statuses",
                          "uniqueItems": true,
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                            "type": "object",
                            "description": "Defines the properties for a status",
                            "additionalProperties": false,
                            "required": [
                              "status",
                              "category"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "A Custom label for the status",
                                "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                              },
                              "category": {
                                "type": "string",
                                "description": "The classifier for the statues",
                                "enum": [
                                  "PENDING",
                                  "IN_PROGRESS",
                                  "VERIFYING",
                                  "COMPLETE",
                                  "CANCELLED",
                                  "BLOCKED"
                                ]
                              }
                            }
                          }
                        },
                        "total_programs": {
                          "type": "number",
                          "description": "Total programs under the customer"
                        },
                        "total_projects": {
                          "type": "number",
                          "description": "Total projects under the customer"
                        }
                      }
                    },
                    "allowed_statuses": {
                      "type": "array",
                      "description": "List of allowed statuses",
                      "uniqueItems": true,
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                        "type": "object",
                        "description": "Defines the properties for a status",
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "category"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "A Custom label for the status",
                            "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                          },
                          "category": {
                            "type": "string",
                            "description": "The classifier for the statues",
                            "enum": [
                              "PENDING",
                              "IN_PROGRESS",
                              "VERIFYING",
                              "COMPLETE",
                              "CANCELLED",
                              "BLOCKED"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/dateRange.json",
                      "type": "object",
                      "description": "Active date range for an entity",
                      "properties": {
                        "start_date": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "format": "date-time",
                          "description": "Start date"
                        },
                        "end_date": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "format": "date-time",
                          "description": "End date"
                        }
                      }
                    }
                  ]
                },
                "allowed_statuses": {
                  "type": "array",
                  "description": "List of allowed statuses",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                    "type": "object",
                    "description": "Defines the properties for a status",
                    "additionalProperties": false,
                    "required": [
                      "status",
                      "category"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "A Custom label for the status",
                        "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                      },
                      "category": {
                        "type": "string",
                        "description": "The classifier for the statues",
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "VERIFYING",
                          "COMPLETE",
                          "CANCELLED",
                          "BLOCKED"
                        ]
                      }
                    }
                  }
                },
                "start_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Start date"
                },
                "end_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "End date"
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/entityCommon.json",
                  "type": "object",
                  "description": "Common Properties to all entities",
                  "required": [
                    "label"
                  ],
                  "properties": {
                    "entity_id": {
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "work_flows": {
              "type": "array",
              "description": "Cycles of work flows needed to complete the work order",
              "items": {
                "type": "object",
                "required": [
                  "cycles_needed",
                  "work_flow"
                ],
                "properties": {
                  "cycles_needed": {
                    "type": "integer",
                    "description": "The number of cycles needed",
                    "minimum": 1
                  },
                  "work_flow": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow.json",
                    "type": "object",
                    "description": "Workflow",
                    "additionalProperties": false,
                    "required": [
                      "label",
                      "entity_id",
                      "entity_type",
                      "created",
                      "updated",
                      "steps",
                      "starts_at",
                      "applies_to",
                      "schema_version"
                    ],
                    "properties": {
                      "workflow_id": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z-_]+$"
                      },
                      "entity_id": {
                        "x-no-api-doc": true,
                        "type": "string",
                        "description": "Customer identifier",
                        "readOnly": true,
                        "pattern": "^[0-9a-zA-Z-_]+$"
                      },
                      "entity_type": {
                        "x-no-api-doc": true,
                        "const": "WKF"
                      },
                      "label": {
                        "type": "string",
                        "description": "Label for the entity"
                      },
                      "slug": {
                        "type": "string",
                        "description": "Slug for the entity (Auto-generated from the label)",
                        "readOnly": true,
                        "deprecated": true,
                        "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                      },
                      "created": {
                        "description": "Date the entity was created",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "updated": {
                        "description": "Last date the entity was updated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "schema_version": {
                        "type": "string",
                        "description": "Version of the workflow schema used",
                        "enum": [
                          "1.0"
                        ]
                      },
                      "workflow_version": {
                        "type": "integer",
                        "description": "Version number for the work flows (the number of times it has been changed",
                        "readOnly": true
                      },
                      "applies_to": {
                        "type": "string",
                        "description": "The entity type this work flow applies too",
                        "enum": [
                          "unit",
                          "part",
                          "program",
                          "project",
                          "customer",
                          "contact"
                        ]
                      },
                      "starts_at": {
                        "type": "string",
                        "description": "Starting step"
                      },
                      "steps": {
                        "type": "object",
                        "description": "Steps for the workflow",
                        "uniqueItems": true,
                        "additionalProperties": true,
                        "patternProperties": {
                          "^[A-Za-z][A-Za-z0-9_]*$": {
                            "anyOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/function/allocateUnitsToProject.json",
                                "type": "object",
                                "description": "Require the user confirm an action. This is normally used when Niagara cannot automatically detect that a task or action has been performed.",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the entity"
                                  },
                                  "options": {
                                    "type": "object",
                                    "required": [
                                      "function",
                                      "payload"
                                    ],
                                    "properties": {
                                      "function": {
                                        "type": "string",
                                        "enum": [
                                          "allocate-units-to-project"
                                        ]
                                      },
                                      "payload": {
                                        "type": "object",
                                        "required": [
                                          "part_id",
                                          "project_id",
                                          "qty"
                                        ],
                                        "properties": {
                                          "part_id": {
                                            "type": "string",
                                            "description": "Part ID of the to assign"
                                          },
                                          "program_id": {
                                            "type": "string",
                                            "description": "Program ID of the to assign"
                                          },
                                          "qty": {
                                            "type": "number",
                                            "minimum": 1,
                                            "description": "Number of units to assign to the project"
                                          },
                                          "allow_scarcity": {
                                            "type": "boolean",
                                            "description": "Allow the workflow to continue even if there are not enough units"
                                          },
                                          "force": {
                                            "type": "boolean",
                                            "description": "Assign the units even if the project already has units allocated"
                                          },
                                          "status": {
                                            "type": "string",
                                            "description": "Only assign units which are in this status"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/followPDFInstructions.json",
                                "type": "object",
                                "description": "Display a link or modal to a user which contains instructions from a PDF",
                                "required": [
                                  "label",
                                  "payload"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "options": {
                                    "type": "object",
                                    "required": [
                                      "component",
                                      "payload"
                                    ],
                                    "properties": {
                                      "component": {
                                        "enum": [
                                          "follow-pds-instructions"
                                        ]
                                      },
                                      "payload": {
                                        "type": "object",
                                        "required": [
                                          "attachment_id"
                                        ],
                                        "properties": {
                                          "attachment_id": {
                                            "type": "string",
                                            "description": "UUID for the attachment",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                                    "type": "object",
                                    "description": "A step which requires a user to complete",
                                    "required": [
                                      "type",
                                      "options"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of workflow step",
                                        "enum": [
                                          "load",
                                          "choice",
                                          "function",
                                          "machine",
                                          "pass",
                                          "fail",
                                          "success",
                                          "user",
                                          "wait"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "required": [
                                          "component",
                                          "payload"
                                        ],
                                        "properties": {
                                          "component": {
                                            "type": "string",
                                            "description": "Name of the function to invoke"
                                          },
                                          "payload": {
                                            "type": "object"
                                          }
                                        }
                                      }
                                    },
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "label",
                                          "goto"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "Type of workflow step",
                                            "enum": [
                                              "load",
                                              "choice",
                                              "function",
                                              "machine",
                                              "pass",
                                              "fail",
                                              "success",
                                              "user",
                                              "wait"
                                            ]
                                          },
                                          "label": {
                                            "type": "string",
                                            "description": "Label for the step"
                                          },
                                          "goto": {
                                            "type": "string",
                                            "description": "Step to move to",
                                            "pattern": "^[a-z][a-z-]+[a-z]$"
                                          },
                                          "goto-fail": {
                                            "type": "string",
                                            "description": "Step to transition too if this step cannot be completed",
                                            "pattern": "^[a-z][a-z-]+[a-z]$"
                                          },
                                          "onComplete": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                            "type": "object",
                                            "required": [
                                              "retry",
                                              "finally"
                                            ],
                                            "properties": {
                                              "actions": {
                                                "type": "array",
                                                "description": "Actions to take on failure",
                                                "maxItems": 10,
                                                "items": {
                                                  "type": "object"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/manualDataEntry.json",
                                "type": "object",
                                "description": "Ask the user to manually enter (or confirm) data for an entity",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "options": {
                                    "type": "object",
                                    "required": [
                                      "component",
                                      "payload"
                                    ],
                                    "properties": {
                                      "component": {
                                        "enum": [
                                          "manual-data-entry"
                                        ]
                                      },
                                      "payload": {
                                        "type": "object",
                                        "required": [
                                          "fields"
                                        ],
                                        "properties": {
                                          "fields": {
                                            "type": "array",
                                            "description": "Configuration for each field",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "input_type",
                                                "label",
                                                "required",
                                                "entity_field"
                                              ],
                                              "properties": {
                                                "input_type": {
                                                  "type": "string",
                                                  "description": "The type of input field to display",
                                                  "enum": [
                                                    "textbox",
                                                    "input"
                                                  ]
                                                },
                                                "label": {
                                                  "type": "string",
                                                  "description": "Label to display for the field"
                                                },
                                                "required": {
                                                  "type": "boolean",
                                                  "description": "Display the field as required input. Note: this is a helper function. It singles that the user is required to input data at this step. If the field is required on the entity, the user will be presented with a validation message"
                                                },
                                                "entity_field": {
                                                  "type": "string",
                                                  "description": "JSON Path to the field on the entity. If the path does not start with '$' then the entity on the context is assumed. Otherwise the data will be set on the context path"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                                    "type": "object",
                                    "description": "A step which requires a user to complete",
                                    "required": [
                                      "type",
                                      "options"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of workflow step",
                                        "enum": [
                                          "load",
                                          "choice",
                                          "function",
                                          "machine",
                                          "pass",
                                          "fail",
                                          "success",
                                          "user",
                                          "wait"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "required": [
                                          "component",
                                          "payload"
                                        ],
                                        "properties": {
                                          "component": {
                                            "type": "string",
                                            "description": "Name of the function to invoke"
                                          },
                                          "payload": {
                                            "type": "object"
                                          }
                                        }
                                      }
                                    },
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "label",
                                          "goto"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "Type of workflow step",
                                            "enum": [
                                              "load",
                                              "choice",
                                              "function",
                                              "machine",
                                              "pass",
                                              "fail",
                                              "success",
                                              "user",
                                              "wait"
                                            ]
                                          },
                                          "label": {
                                            "type": "string",
                                            "description": "Label for the step"
                                          },
                                          "goto": {
                                            "type": "string",
                                            "description": "Step to move to",
                                            "pattern": "^[a-z][a-z-]+[a-z]$"
                                          },
                                          "goto-fail": {
                                            "type": "string",
                                            "description": "Step to transition too if this step cannot be completed",
                                            "pattern": "^[a-z][a-z-]+[a-z]$"
                                          },
                                          "onComplete": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                            "type": "object",
                                            "required": [
                                              "retry",
                                              "finally"
                                            ],
                                            "properties": {
                                              "actions": {
                                                "type": "array",
                                                "description": "Actions to take on failure",
                                                "maxItems": 10,
                                                "items": {
                                                  "type": "object"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/taskList.json",
                                "type": "object",
                                "description": "Ask the user to follow a list and check off boxes",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "options": {
                                    "type": "object",
                                    "required": [
                                      "component",
                                      "payload"
                                    ],
                                    "properties": {
                                      "component": {
                                        "enum": [
                                          "task-list"
                                        ]
                                      },
                                      "payload": {
                                        "type": "object",
                                        "required": [
                                          "items"
                                        ],
                                        "properties": {
                                          "is_qc": {
                                            "type": "boolean",
                                            "description": "Flags this list as a QC task list. This means that a different user can close the task to one previously on the context"
                                          },
                                          "items": {
                                            "type": "array",
                                            "description": "Configuration for each task list item",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "label",
                                                "help",
                                                "evaluated",
                                                "na_option"
                                              ],
                                              "properties": {
                                                "label": {
                                                  "type": "string",
                                                  "description": "Label to display for the field"
                                                },
                                                "slug": {
                                                  "type": "string",
                                                  "description": "Slug for the item (Auto-generated from the label)",
                                                  "readOnly": true,
                                                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                                                },
                                                "help": {
                                                  "type": "string",
                                                  "description": "Message describing what is needed to be checked"
                                                },
                                                "evaluated": {
                                                  "type": "boolean",
                                                  "description": "When set to true, this will fail the step if the value for the item is false or N/A"
                                                },
                                                "na_field": {
                                                  "type": "boolean",
                                                  "description": "Allow the user to select the N/A option when checking off the list"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                                    "type": "object",
                                    "description": "A step which requires a user to complete",
                                    "required": [
                                      "type",
                                      "options"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of workflow step",
                                        "enum": [
                                          "load",
                                          "choice",
                                          "function",
                                          "machine",
                                          "pass",
                                          "fail",
                                          "success",
                                          "user",
                                          "wait"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "required": [
                                          "component",
                                          "payload"
                                        ],
                                        "properties": {
                                          "component": {
                                            "type": "string",
                                            "description": "Name of the function to invoke"
                                          },
                                          "payload": {
                                            "type": "object"
                                          }
                                        }
                                      }
                                    },
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "label",
                                          "goto"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "Type of workflow step",
                                            "enum": [
                                              "load",
                                              "choice",
                                              "function",
                                              "machine",
                                              "pass",
                                              "fail",
                                              "success",
                                              "user",
                                              "wait"
                                            ]
                                          },
                                          "label": {
                                            "type": "string",
                                            "description": "Label for the step"
                                          },
                                          "goto": {
                                            "type": "string",
                                            "description": "Step to move to",
                                            "pattern": "^[a-z][a-z-]+[a-z]$"
                                          },
                                          "goto-fail": {
                                            "type": "string",
                                            "description": "Step to transition too if this step cannot be completed",
                                            "pattern": "^[a-z][a-z-]+[a-z]$"
                                          },
                                          "onComplete": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                            "type": "object",
                                            "required": [
                                              "retry",
                                              "finally"
                                            ],
                                            "properties": {
                                              "actions": {
                                                "type": "array",
                                                "description": "Actions to take on failure",
                                                "maxItems": 10,
                                                "items": {
                                                  "type": "object"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/machine/aceIos.json",
                                "type": "object",
                                "description": "Run the ACE-IOS application to provision iOS devices or ",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "machine"
                                    ]
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "options": {
                                    "type": "object",
                                    "required": [
                                      "application",
                                      "configuration"
                                    ],
                                    "properties": {
                                      "configuration": {
                                        "type": "object",
                                        "description": "ACE Configuration options",
                                        "properties": {
                                          "pairing_cert": {
                                            "type": "string",
                                            "description": "Contents of a *.crt file exported from Apple Configurator or MDM",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          },
                                          "pairing_key": {
                                            "type": "string",
                                            "description": "Contents of a *.der file exported from Apple Configurator or MDM",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                          },
                                          "restore_device": {
                                            "type": "boolean",
                                            "description": "Restore device to factory defaults"
                                          },
                                          "automated_enrollment": {
                                            "type": "boolean",
                                            "description": "Automatically enroll the device to MDM"
                                          },
                                          "mdm": {
                                            "type": "object",
                                            "description": "The settings for the Customers MDM",
                                            "properties": {
                                              "vendor": {
                                                "type": "string",
                                                "description": "MDM vendor. Currently, supported values are AirWatch, JAMF, and Meraki.",
                                                "enum": [
                                                  "AirWatch",
                                                  "JAMF",
                                                  "Meraki"
                                                ]
                                              },
                                              "console_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "Base URL for HTTP requests"
                                              },
                                              "user": {
                                                "type": "string",
                                                "description": "MDM User name"
                                              },
                                              "password": {
                                                "type": "string",
                                                "description": "MDM password"
                                              },
                                              "tenant_code": {
                                                "type": "string",
                                                "description": "MDM authentication key"
                                              },
                                              "set_asset_tag": {
                                                "type": "string",
                                                "description": "Sets the devices Asset tag based on a field from the unit"
                                              }
                                            }
                                          },
                                          "field_mappings": {
                                            "type": "array",
                                            "description": "List of fields to map to the device",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "from": {
                                                  "type": "string",
                                                  "description": "The field reported from ACE",
                                                  "enum": [
                                                    "serial_number",
                                                    "name",
                                                    "ecid",
                                                    "udid",
                                                    "configurator_serial",
                                                    "ios",
                                                    "model",
                                                    "storage",
                                                    "wifi_mac",
                                                    "bt_mac",
                                                    "ethernet_mac",
                                                    "thundersync_serial",
                                                    "iccid",
                                                    "iccid2",
                                                    "imei",
                                                    "imei2",
                                                    "missed_profiles",
                                                    "missed_apps",
                                                    "icon_list_regex",
                                                    "icon_layout",
                                                    "bat_capacity"
                                                  ]
                                                },
                                                "to": {
                                                  "type": "string",
                                                  "description": "Field to set on the entity"
                                                }
                                              }
                                            }
                                          },
                                          "wait_for_apps": {
                                            "type": "array",
                                            "description": "A list of applications needed to be installed on the device. This will cause the extension to poll the device for installed applications. Once all the applications have been installed, this step can be completed",
                                            "items": {
                                              "type": "string",
                                              "format": "uri"
                                            }
                                          },
                                          "wait_for_battery_charge": {
                                            "type": "integer",
                                            "description": "The required battery percentage needed before this step can move on",
                                            "minimum": 0,
                                            "maximum": 100
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepChoice.json",
                                "type": "object",
                                "description": "A Step choice",
                                "maxProperties": 2,
                                "minProperties": 2,
                                "required": [
                                  "decision"
                                ],
                                "properties": {
                                  "decision": {
                                    "type": "array",
                                    "description": "Context variable to check",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "variable": {
                                          "type": "string",
                                          "description": "Variable or value"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "description": "Operator to perform",
                                          "enum": [
                                            "greater_than_equals",
                                            "less_than_equals",
                                            "greater_than",
                                            "less_than",
                                            "equals",
                                            "not_equals"
                                          ]
                                        },
                                        "operand": {
                                          "type": "string",
                                          "description": "operand to compare with"
                                        }
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepNext.json",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "label",
                                      "goto"
                                    ],
                                    "properties": {
                                      "goto": {
                                        "type": "string",
                                        "description": "Step to move to",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "goto-fail": {
                                        "type": "string",
                                        "description": "Step to transition too if this step cannot be completed",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "context": {
                                        "type": "array",
                                        "description": "Values to set on the context",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "value"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "description": "The context key to set"
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value to set"
                                            },
                                            "lock": {
                                              "type": "boolean",
                                              "description": "Prevents other steps from writing this value"
                                            },
                                            "ignore": {
                                              "type": "boolean",
                                              "description": "When trying to set a locked key, do not fail"
                                            }
                                          }
                                        }
                                      },
                                      "onStart": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "actions": {
                                            "type": "array",
                                            "description": "Actions to take on failure",
                                            "maxItems": 10,
                                            "items": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      },
                                      "onError": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "retry": {
                                            "type": "integer",
                                            "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                            "minimum": 0,
                                            "maximum": 10,
                                            "default": 0
                                          },
                                          "finally": {
                                            "type": "object",
                                            "description": "What to do after all retries",
                                            "properties": {
                                              "actions": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                "type": "object",
                                                "required": [
                                                  "retry",
                                                  "finally"
                                                ],
                                                "properties": {
                                                  "actions": {
                                                    "type": "array",
                                                    "description": "Actions to take on failure",
                                                    "maxItems": 10,
                                                    "items": {
                                                      "type": "object"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "onTimeout": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "retry": {
                                            "type": "integer",
                                            "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                            "minimum": 0,
                                            "maximum": 10,
                                            "default": 0
                                          },
                                          "finally": {
                                            "type": "object",
                                            "description": "What to do after all retries",
                                            "properties": {
                                              "actions": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                "type": "object",
                                                "required": [
                                                  "retry",
                                                  "finally"
                                                ],
                                                "properties": {
                                                  "actions": {
                                                    "type": "array",
                                                    "description": "Actions to take on failure",
                                                    "maxItems": 10,
                                                    "items": {
                                                      "type": "object"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepFail.json",
                                "type": "object",
                                "description": "Finial step which is marked as failed",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of workflow step",
                                    "enum": [
                                      "load",
                                      "choice",
                                      "function",
                                      "machine",
                                      "pass",
                                      "fail",
                                      "success",
                                      "user",
                                      "wait"
                                    ]
                                  },
                                  "onComplete": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                    "type": "object",
                                    "required": [
                                      "retry",
                                      "finally"
                                    ],
                                    "properties": {
                                      "actions": {
                                        "type": "array",
                                        "description": "Actions to take on failure",
                                        "maxItems": 10,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepPass.json",
                                "type": "object",
                                "description": "Allows executing actions with out performing any function",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the entity"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of workflow step",
                                    "enum": [
                                      "load",
                                      "choice",
                                      "function",
                                      "machine",
                                      "pass",
                                      "fail",
                                      "success",
                                      "user",
                                      "wait"
                                    ]
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "label",
                                      "goto"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of workflow step",
                                        "enum": [
                                          "load",
                                          "choice",
                                          "function",
                                          "machine",
                                          "pass",
                                          "fail",
                                          "success",
                                          "user",
                                          "wait"
                                        ]
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "Label for the step"
                                      },
                                      "goto": {
                                        "type": "string",
                                        "description": "Step to move to",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "goto-fail": {
                                        "type": "string",
                                        "description": "Step to transition too if this step cannot be completed",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "onComplete": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "actions": {
                                            "type": "array",
                                            "description": "Actions to take on failure",
                                            "maxItems": 10,
                                            "items": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepSuccess.json",
                                "type": "object",
                                "description": "Finial step which is marked as completed successfully",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of workflow step",
                                    "enum": [
                                      "load",
                                      "choice",
                                      "function",
                                      "machine",
                                      "pass",
                                      "fail",
                                      "success",
                                      "user",
                                      "wait"
                                    ]
                                  },
                                  "onComplete": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                    "type": "object",
                                    "required": [
                                      "retry",
                                      "finally"
                                    ],
                                    "properties": {
                                      "actions": {
                                        "type": "array",
                                        "description": "Actions to take on failure",
                                        "maxItems": 10,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepWait.json",
                                "type": "object",
                                "description": "A step which run at certain times",
                                "required": [
                                  "stop_at",
                                  "time"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "wait"
                                    ]
                                  },
                                  "stop_at": {
                                    "type": "integer",
                                    "description": "Time in seconds to stop this task",
                                    "maximum": 900,
                                    "minimum": 1
                                  },
                                  "time": {
                                    "type": "integer",
                                    "description": "Time to wait before checking this step",
                                    "maximum": 900,
                                    "minimum": 1
                                  },
                                  "listen_for": {
                                    "type": "array",
                                    "description": "List of events and conditions to listen for to trigger",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "event"
                                      ],
                                      "properties": {
                                        "event": {
                                          "type": "string",
                                          "description": "Name of the event to listen for",
                                          "allOf": [
                                            {
                                              "type": "string",
                                              "description": "Possible entity events",
                                              "enum": [
                                                "CON.attached",
                                                "CON.created",
                                                "CON.deleted",
                                                "CON.detached",
                                                "CON.removed",
                                                "CON.updated",
                                                "CUS.attached",
                                                "CUS.created",
                                                "CUS.deleted",
                                                "CUS.detached",
                                                "CUS.removed",
                                                "CUS.updated",
                                                "LOC.attached",
                                                "LOC.created",
                                                "LOC.deleted",
                                                "LOC.detached",
                                                "LOC.removed",
                                                "LOC.updated",
                                                "NOTE.attached",
                                                "NOTE.created",
                                                "NOTE.deleted",
                                                "NOTE.detached",
                                                "NOTE.removed",
                                                "NOTE.updated",
                                                "PART.attached",
                                                "PART.created",
                                                "PART.deleted",
                                                "PART.detached",
                                                "PART.removed",
                                                "PART.updated",
                                                "PGM.attached",
                                                "PGM.created",
                                                "PGM.deleted",
                                                "PGM.detached",
                                                "PGM.removed",
                                                "PGM.updated",
                                                "PRO.attached",
                                                "PRO.created",
                                                "PRO.deleted",
                                                "PRO.detached",
                                                "PRO.removed",
                                                "PRO.updated",
                                                "RES.attached",
                                                "RES.created",
                                                "RES.deleted",
                                                "RES.detached",
                                                "RES.removed",
                                                "RES.updated",
                                                "UNIT.attached",
                                                "UNIT.created",
                                                "UNIT.deleted",
                                                "UNIT.detached",
                                                "UNIT.removed",
                                                "UNIT.updated",
                                                "USER.attached",
                                                "USER.created",
                                                "USER.deleted",
                                                "USER.detached",
                                                "USER.removed",
                                                "USER.updated",
                                                "WKF.attached",
                                                "WKF.created",
                                                "WKF.deleted",
                                                "WKF.detached",
                                                "WKF.removed",
                                                "WKF.updated",
                                                "WOR.attached",
                                                "WOR.created",
                                                "WOR.deleted",
                                                "WOR.detached",
                                                "WOR.removed",
                                                "WOR.updated"
                                              ]
                                            }
                                          ]
                                        },
                                        "event_value": {
                                          "type": "object",
                                          "description": "The event conditions that have to be met",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepChoice.json",
                                              "type": "object",
                                              "description": "A Step choice",
                                              "maxProperties": 2,
                                              "minProperties": 2,
                                              "required": [
                                                "decision"
                                              ],
                                              "properties": {
                                                "decision": {
                                                  "type": "array",
                                                  "description": "Context variable to check",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "variable": {
                                                        "type": "string",
                                                        "description": "Variable or value"
                                                      },
                                                      "operator": {
                                                        "type": "string",
                                                        "description": "Operator to perform",
                                                        "enum": [
                                                          "greater_than_equals",
                                                          "less_than_equals",
                                                          "greater_than",
                                                          "less_than",
                                                          "equals",
                                                          "not_equals"
                                                        ]
                                                      },
                                                      "operand": {
                                                        "type": "string",
                                                        "description": "operand to compare with"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepNext.json",
                                                  "type": "object",
                                                  "required": [
                                                    "type",
                                                    "label",
                                                    "goto"
                                                  ],
                                                  "properties": {
                                                    "goto": {
                                                      "type": "string",
                                                      "description": "Step to move to",
                                                      "pattern": "^[a-z][a-z-]+[a-z]$"
                                                    },
                                                    "goto-fail": {
                                                      "type": "string",
                                                      "description": "Step to transition too if this step cannot be completed",
                                                      "pattern": "^[a-z][a-z-]+[a-z]$"
                                                    },
                                                    "context": {
                                                      "type": "array",
                                                      "description": "Values to set on the context",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "value"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string",
                                                            "description": "The context key to set"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "description": "Value to set"
                                                          },
                                                          "lock": {
                                                            "type": "boolean",
                                                            "description": "Prevents other steps from writing this value"
                                                          },
                                                          "ignore": {
                                                            "type": "boolean",
                                                            "description": "When trying to set a locked key, do not fail"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "onStart": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                      "type": "object",
                                                      "required": [
                                                        "retry",
                                                        "finally"
                                                      ],
                                                      "properties": {
                                                        "actions": {
                                                          "type": "array",
                                                          "description": "Actions to take on failure",
                                                          "maxItems": 10,
                                                          "items": {
                                                            "type": "object"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "onError": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                                      "type": "object",
                                                      "required": [
                                                        "retry",
                                                        "finally"
                                                      ],
                                                      "properties": {
                                                        "retry": {
                                                          "type": "integer",
                                                          "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                                          "minimum": 0,
                                                          "maximum": 10,
                                                          "default": 0
                                                        },
                                                        "finally": {
                                                          "type": "object",
                                                          "description": "What to do after all retries",
                                                          "properties": {
                                                            "actions": {
                                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                              "type": "object",
                                                              "required": [
                                                                "retry",
                                                                "finally"
                                                              ],
                                                              "properties": {
                                                                "actions": {
                                                                  "type": "array",
                                                                  "description": "Actions to take on failure",
                                                                  "maxItems": 10,
                                                                  "items": {
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "onTimeout": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                                      "type": "object",
                                                      "required": [
                                                        "retry",
                                                        "finally"
                                                      ],
                                                      "properties": {
                                                        "retry": {
                                                          "type": "integer",
                                                          "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                                          "minimum": 0,
                                                          "maximum": 10,
                                                          "default": 0
                                                        },
                                                        "finally": {
                                                          "type": "object",
                                                          "description": "What to do after all retries",
                                                          "properties": {
                                                            "actions": {
                                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                              "type": "object",
                                                              "required": [
                                                                "retry",
                                                                "finally"
                                                              ],
                                                              "properties": {
                                                                "actions": {
                                                                  "type": "array",
                                                                  "description": "Actions to take on failure",
                                                                  "maxItems": 10,
                                                                  "items": {
                                                                    "type": "object"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "label",
                                      "goto"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of workflow step",
                                        "enum": [
                                          "load",
                                          "choice",
                                          "function",
                                          "machine",
                                          "pass",
                                          "fail",
                                          "success",
                                          "user",
                                          "wait"
                                        ]
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "Label for the step"
                                      },
                                      "goto": {
                                        "type": "string",
                                        "description": "Step to move to",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "goto-fail": {
                                        "type": "string",
                                        "description": "Step to transition too if this step cannot be completed",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "onComplete": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "actions": {
                                            "type": "array",
                                            "description": "Actions to take on failure",
                                            "maxItems": 10,
                                            "items": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "contact": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/contact.json",
      "type": "object",
      "description": "Contact Information",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated"
      ],
      "properties": {
        "contact_id": {
          "description": "Identifier for the contact",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "CON"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Email address"
        },
        "name": {
          "type": "string",
          "description": "Contact name"
        },
        "phone": {
          "type": "string",
          "description": "Phone number"
        }
      },
      "allOf": [
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/entityCommon.json",
          "type": "object",
          "description": "Common Properties to all entities",
          "required": [
            "label"
          ],
          "properties": {
            "entity_id": {
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            }
          }
        }
      ]
    },
    "context": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/context.json",
      "type": "object",
      "description": "Context for an active workflow",
      "additionalProperties": false,
      "required": [
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "workflow",
        "entity"
      ],
      "properties": {
        "context_id": {
          "description": "Identifier for the context",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "CTX"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "workflow": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow.json",
          "type": "object",
          "description": "Workflow",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "steps",
            "starts_at",
            "applies_to",
            "schema_version"
          ],
          "properties": {
            "workflow_id": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "WKF"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "schema_version": {
              "type": "string",
              "description": "Version of the workflow schema used",
              "enum": [
                "1.0"
              ]
            },
            "workflow_version": {
              "type": "integer",
              "description": "Version number for the work flows (the number of times it has been changed",
              "readOnly": true
            },
            "applies_to": {
              "type": "string",
              "description": "The entity type this work flow applies too",
              "enum": [
                "unit",
                "part",
                "program",
                "project",
                "customer",
                "contact"
              ]
            },
            "starts_at": {
              "type": "string",
              "description": "Starting step"
            },
            "steps": {
              "type": "object",
              "description": "Steps for the workflow",
              "uniqueItems": true,
              "additionalProperties": true,
              "patternProperties": {
                "^[A-Za-z][A-Za-z0-9_]*$": {
                  "anyOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/function/allocateUnitsToProject.json",
                      "type": "object",
                      "description": "Require the user confirm an action. This is normally used when Niagara cannot automatically detect that a task or action has been performed.",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Label for the entity"
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "function",
                            "payload"
                          ],
                          "properties": {
                            "function": {
                              "type": "string",
                              "enum": [
                                "allocate-units-to-project"
                              ]
                            },
                            "payload": {
                              "type": "object",
                              "required": [
                                "part_id",
                                "project_id",
                                "qty"
                              ],
                              "properties": {
                                "part_id": {
                                  "type": "string",
                                  "description": "Part ID of the to assign"
                                },
                                "program_id": {
                                  "type": "string",
                                  "description": "Program ID of the to assign"
                                },
                                "qty": {
                                  "type": "number",
                                  "minimum": 1,
                                  "description": "Number of units to assign to the project"
                                },
                                "allow_scarcity": {
                                  "type": "boolean",
                                  "description": "Allow the workflow to continue even if there are not enough units"
                                },
                                "force": {
                                  "type": "boolean",
                                  "description": "Assign the units even if the project already has units allocated"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Only assign units which are in this status"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/followPDFInstructions.json",
                      "type": "object",
                      "description": "Display a link or modal to a user which contains instructions from a PDF",
                      "required": [
                        "label",
                        "payload"
                      ],
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "component",
                            "payload"
                          ],
                          "properties": {
                            "component": {
                              "enum": [
                                "follow-pds-instructions"
                              ]
                            },
                            "payload": {
                              "type": "object",
                              "required": [
                                "attachment_id"
                              ],
                              "properties": {
                                "attachment_id": {
                                  "type": "string",
                                  "description": "UUID for the attachment",
                                  "format": "uuid"
                                }
                              }
                            }
                          }
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                          "type": "object",
                          "description": "A step which requires a user to complete",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of workflow step",
                              "enum": [
                                "load",
                                "choice",
                                "function",
                                "machine",
                                "pass",
                                "fail",
                                "success",
                                "user",
                                "wait"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "component",
                                "payload"
                              ],
                              "properties": {
                                "component": {
                                  "type": "string",
                                  "description": "Name of the function to invoke"
                                },
                                "payload": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "allOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                              "type": "object",
                              "required": [
                                "type",
                                "label",
                                "goto"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Type of workflow step",
                                  "enum": [
                                    "load",
                                    "choice",
                                    "function",
                                    "machine",
                                    "pass",
                                    "fail",
                                    "success",
                                    "user",
                                    "wait"
                                  ]
                                },
                                "label": {
                                  "type": "string",
                                  "description": "Label for the step"
                                },
                                "goto": {
                                  "type": "string",
                                  "description": "Step to move to",
                                  "pattern": "^[a-z][a-z-]+[a-z]$"
                                },
                                "goto-fail": {
                                  "type": "string",
                                  "description": "Step to transition too if this step cannot be completed",
                                  "pattern": "^[a-z][a-z-]+[a-z]$"
                                },
                                "onComplete": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                  "type": "object",
                                  "required": [
                                    "retry",
                                    "finally"
                                  ],
                                  "properties": {
                                    "actions": {
                                      "type": "array",
                                      "description": "Actions to take on failure",
                                      "maxItems": 10,
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/manualDataEntry.json",
                      "type": "object",
                      "description": "Ask the user to manually enter (or confirm) data for an entity",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "component",
                            "payload"
                          ],
                          "properties": {
                            "component": {
                              "enum": [
                                "manual-data-entry"
                              ]
                            },
                            "payload": {
                              "type": "object",
                              "required": [
                                "fields"
                              ],
                              "properties": {
                                "fields": {
                                  "type": "array",
                                  "description": "Configuration for each field",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "input_type",
                                      "label",
                                      "required",
                                      "entity_field"
                                    ],
                                    "properties": {
                                      "input_type": {
                                        "type": "string",
                                        "description": "The type of input field to display",
                                        "enum": [
                                          "textbox",
                                          "input"
                                        ]
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "Label to display for the field"
                                      },
                                      "required": {
                                        "type": "boolean",
                                        "description": "Display the field as required input. Note: this is a helper function. It singles that the user is required to input data at this step. If the field is required on the entity, the user will be presented with a validation message"
                                      },
                                      "entity_field": {
                                        "type": "string",
                                        "description": "JSON Path to the field on the entity. If the path does not start with '$' then the entity on the context is assumed. Otherwise the data will be set on the context path"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                          "type": "object",
                          "description": "A step which requires a user to complete",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of workflow step",
                              "enum": [
                                "load",
                                "choice",
                                "function",
                                "machine",
                                "pass",
                                "fail",
                                "success",
                                "user",
                                "wait"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "component",
                                "payload"
                              ],
                              "properties": {
                                "component": {
                                  "type": "string",
                                  "description": "Name of the function to invoke"
                                },
                                "payload": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "allOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                              "type": "object",
                              "required": [
                                "type",
                                "label",
                                "goto"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Type of workflow step",
                                  "enum": [
                                    "load",
                                    "choice",
                                    "function",
                                    "machine",
                                    "pass",
                                    "fail",
                                    "success",
                                    "user",
                                    "wait"
                                  ]
                                },
                                "label": {
                                  "type": "string",
                                  "description": "Label for the step"
                                },
                                "goto": {
                                  "type": "string",
                                  "description": "Step to move to",
                                  "pattern": "^[a-z][a-z-]+[a-z]$"
                                },
                                "goto-fail": {
                                  "type": "string",
                                  "description": "Step to transition too if this step cannot be completed",
                                  "pattern": "^[a-z][a-z-]+[a-z]$"
                                },
                                "onComplete": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                  "type": "object",
                                  "required": [
                                    "retry",
                                    "finally"
                                  ],
                                  "properties": {
                                    "actions": {
                                      "type": "array",
                                      "description": "Actions to take on failure",
                                      "maxItems": 10,
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/taskList.json",
                      "type": "object",
                      "description": "Ask the user to follow a list and check off boxes",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "component",
                            "payload"
                          ],
                          "properties": {
                            "component": {
                              "enum": [
                                "task-list"
                              ]
                            },
                            "payload": {
                              "type": "object",
                              "required": [
                                "items"
                              ],
                              "properties": {
                                "is_qc": {
                                  "type": "boolean",
                                  "description": "Flags this list as a QC task list. This means that a different user can close the task to one previously on the context"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Configuration for each task list item",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "label",
                                      "help",
                                      "evaluated",
                                      "na_option"
                                    ],
                                    "properties": {
                                      "label": {
                                        "type": "string",
                                        "description": "Label to display for the field"
                                      },
                                      "slug": {
                                        "type": "string",
                                        "description": "Slug for the item (Auto-generated from the label)",
                                        "readOnly": true,
                                        "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                                      },
                                      "help": {
                                        "type": "string",
                                        "description": "Message describing what is needed to be checked"
                                      },
                                      "evaluated": {
                                        "type": "boolean",
                                        "description": "When set to true, this will fail the step if the value for the item is false or N/A"
                                      },
                                      "na_field": {
                                        "type": "boolean",
                                        "description": "Allow the user to select the N/A option when checking off the list"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                          "type": "object",
                          "description": "A step which requires a user to complete",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of workflow step",
                              "enum": [
                                "load",
                                "choice",
                                "function",
                                "machine",
                                "pass",
                                "fail",
                                "success",
                                "user",
                                "wait"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "component",
                                "payload"
                              ],
                              "properties": {
                                "component": {
                                  "type": "string",
                                  "description": "Name of the function to invoke"
                                },
                                "payload": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "allOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                              "type": "object",
                              "required": [
                                "type",
                                "label",
                                "goto"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Type of workflow step",
                                  "enum": [
                                    "load",
                                    "choice",
                                    "function",
                                    "machine",
                                    "pass",
                                    "fail",
                                    "success",
                                    "user",
                                    "wait"
                                  ]
                                },
                                "label": {
                                  "type": "string",
                                  "description": "Label for the step"
                                },
                                "goto": {
                                  "type": "string",
                                  "description": "Step to move to",
                                  "pattern": "^[a-z][a-z-]+[a-z]$"
                                },
                                "goto-fail": {
                                  "type": "string",
                                  "description": "Step to transition too if this step cannot be completed",
                                  "pattern": "^[a-z][a-z-]+[a-z]$"
                                },
                                "onComplete": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                  "type": "object",
                                  "required": [
                                    "retry",
                                    "finally"
                                  ],
                                  "properties": {
                                    "actions": {
                                      "type": "array",
                                      "description": "Actions to take on failure",
                                      "maxItems": 10,
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/machine/aceIos.json",
                      "type": "object",
                      "description": "Run the ACE-IOS application to provision iOS devices or ",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "machine"
                          ]
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "application",
                            "configuration"
                          ],
                          "properties": {
                            "configuration": {
                              "type": "object",
                              "description": "ACE Configuration options",
                              "properties": {
                                "pairing_cert": {
                                  "type": "string",
                                  "description": "Contents of a *.crt file exported from Apple Configurator or MDM",
                                  "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                },
                                "pairing_key": {
                                  "type": "string",
                                  "description": "Contents of a *.der file exported from Apple Configurator or MDM",
                                  "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                },
                                "restore_device": {
                                  "type": "boolean",
                                  "description": "Restore device to factory defaults"
                                },
                                "automated_enrollment": {
                                  "type": "boolean",
                                  "description": "Automatically enroll the device to MDM"
                                },
                                "mdm": {
                                  "type": "object",
                                  "description": "The settings for the Customers MDM",
                                  "properties": {
                                    "vendor": {
                                      "type": "string",
                                      "description": "MDM vendor. Currently, supported values are AirWatch, JAMF, and Meraki.",
                                      "enum": [
                                        "AirWatch",
                                        "JAMF",
                                        "Meraki"
                                      ]
                                    },
                                    "console_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Base URL for HTTP requests"
                                    },
                                    "user": {
                                      "type": "string",
                                      "description": "MDM User name"
                                    },
                                    "password": {
                                      "type": "string",
                                      "description": "MDM password"
                                    },
                                    "tenant_code": {
                                      "type": "string",
                                      "description": "MDM authentication key"
                                    },
                                    "set_asset_tag": {
                                      "type": "string",
                                      "description": "Sets the devices Asset tag based on a field from the unit"
                                    }
                                  }
                                },
                                "field_mappings": {
                                  "type": "array",
                                  "description": "List of fields to map to the device",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "string",
                                        "description": "The field reported from ACE",
                                        "enum": [
                                          "serial_number",
                                          "name",
                                          "ecid",
                                          "udid",
                                          "configurator_serial",
                                          "ios",
                                          "model",
                                          "storage",
                                          "wifi_mac",
                                          "bt_mac",
                                          "ethernet_mac",
                                          "thundersync_serial",
                                          "iccid",
                                          "iccid2",
                                          "imei",
                                          "imei2",
                                          "missed_profiles",
                                          "missed_apps",
                                          "icon_list_regex",
                                          "icon_layout",
                                          "bat_capacity"
                                        ]
                                      },
                                      "to": {
                                        "type": "string",
                                        "description": "Field to set on the entity"
                                      }
                                    }
                                  }
                                },
                                "wait_for_apps": {
                                  "type": "array",
                                  "description": "A list of applications needed to be installed on the device. This will cause the extension to poll the device for installed applications. Once all the applications have been installed, this step can be completed",
                                  "items": {
                                    "type": "string",
                                    "format": "uri"
                                  }
                                },
                                "wait_for_battery_charge": {
                                  "type": "integer",
                                  "description": "The required battery percentage needed before this step can move on",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepChoice.json",
                      "type": "object",
                      "description": "A Step choice",
                      "maxProperties": 2,
                      "minProperties": 2,
                      "required": [
                        "decision"
                      ],
                      "properties": {
                        "decision": {
                          "type": "array",
                          "description": "Context variable to check",
                          "items": {
                            "type": "object",
                            "properties": {
                              "variable": {
                                "type": "string",
                                "description": "Variable or value"
                              },
                              "operator": {
                                "type": "string",
                                "description": "Operator to perform",
                                "enum": [
                                  "greater_than_equals",
                                  "less_than_equals",
                                  "greater_than",
                                  "less_than",
                                  "equals",
                                  "not_equals"
                                ]
                              },
                              "operand": {
                                "type": "string",
                                "description": "operand to compare with"
                              }
                            }
                          }
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepNext.json",
                          "type": "object",
                          "required": [
                            "type",
                            "label",
                            "goto"
                          ],
                          "properties": {
                            "goto": {
                              "type": "string",
                              "description": "Step to move to",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "goto-fail": {
                              "type": "string",
                              "description": "Step to transition too if this step cannot be completed",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "context": {
                              "type": "array",
                              "description": "Values to set on the context",
                              "items": {
                                "type": "object",
                                "required": [
                                  "key",
                                  "value"
                                ],
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "The context key to set"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value to set"
                                  },
                                  "lock": {
                                    "type": "boolean",
                                    "description": "Prevents other steps from writing this value"
                                  },
                                  "ignore": {
                                    "type": "boolean",
                                    "description": "When trying to set a locked key, do not fail"
                                  }
                                }
                              }
                            },
                            "onStart": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                              "type": "object",
                              "required": [
                                "retry",
                                "finally"
                              ],
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "description": "Actions to take on failure",
                                  "maxItems": 10,
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            },
                            "onError": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                              "type": "object",
                              "required": [
                                "retry",
                                "finally"
                              ],
                              "properties": {
                                "retry": {
                                  "type": "integer",
                                  "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                  "minimum": 0,
                                  "maximum": 10,
                                  "default": 0
                                },
                                "finally": {
                                  "type": "object",
                                  "description": "What to do after all retries",
                                  "properties": {
                                    "actions": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                      "type": "object",
                                      "required": [
                                        "retry",
                                        "finally"
                                      ],
                                      "properties": {
                                        "actions": {
                                          "type": "array",
                                          "description": "Actions to take on failure",
                                          "maxItems": 10,
                                          "items": {
                                            "type": "object"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "onTimeout": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                              "type": "object",
                              "required": [
                                "retry",
                                "finally"
                              ],
                              "properties": {
                                "retry": {
                                  "type": "integer",
                                  "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                  "minimum": 0,
                                  "maximum": 10,
                                  "default": 0
                                },
                                "finally": {
                                  "type": "object",
                                  "description": "What to do after all retries",
                                  "properties": {
                                    "actions": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                      "type": "object",
                                      "required": [
                                        "retry",
                                        "finally"
                                      ],
                                      "properties": {
                                        "actions": {
                                          "type": "array",
                                          "description": "Actions to take on failure",
                                          "maxItems": 10,
                                          "items": {
                                            "type": "object"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepFail.json",
                      "type": "object",
                      "description": "Finial step which is marked as failed",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of workflow step",
                          "enum": [
                            "load",
                            "choice",
                            "function",
                            "machine",
                            "pass",
                            "fail",
                            "success",
                            "user",
                            "wait"
                          ]
                        },
                        "onComplete": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                          "type": "object",
                          "required": [
                            "retry",
                            "finally"
                          ],
                          "properties": {
                            "actions": {
                              "type": "array",
                              "description": "Actions to take on failure",
                              "maxItems": 10,
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepPass.json",
                      "type": "object",
                      "description": "Allows executing actions with out performing any function",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Label for the entity"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of workflow step",
                          "enum": [
                            "load",
                            "choice",
                            "function",
                            "machine",
                            "pass",
                            "fail",
                            "success",
                            "user",
                            "wait"
                          ]
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                          "type": "object",
                          "required": [
                            "type",
                            "label",
                            "goto"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of workflow step",
                              "enum": [
                                "load",
                                "choice",
                                "function",
                                "machine",
                                "pass",
                                "fail",
                                "success",
                                "user",
                                "wait"
                              ]
                            },
                            "label": {
                              "type": "string",
                              "description": "Label for the step"
                            },
                            "goto": {
                              "type": "string",
                              "description": "Step to move to",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "goto-fail": {
                              "type": "string",
                              "description": "Step to transition too if this step cannot be completed",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "onComplete": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                              "type": "object",
                              "required": [
                                "retry",
                                "finally"
                              ],
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "description": "Actions to take on failure",
                                  "maxItems": 10,
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepSuccess.json",
                      "type": "object",
                      "description": "Finial step which is marked as completed successfully",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "type": {
                          "type": "string",
                          "description": "Type of workflow step",
                          "enum": [
                            "load",
                            "choice",
                            "function",
                            "machine",
                            "pass",
                            "fail",
                            "success",
                            "user",
                            "wait"
                          ]
                        },
                        "onComplete": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                          "type": "object",
                          "required": [
                            "retry",
                            "finally"
                          ],
                          "properties": {
                            "actions": {
                              "type": "array",
                              "description": "Actions to take on failure",
                              "maxItems": 10,
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepWait.json",
                      "type": "object",
                      "description": "A step which run at certain times",
                      "required": [
                        "stop_at",
                        "time"
                      ],
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "wait"
                          ]
                        },
                        "stop_at": {
                          "type": "integer",
                          "description": "Time in seconds to stop this task",
                          "maximum": 900,
                          "minimum": 1
                        },
                        "time": {
                          "type": "integer",
                          "description": "Time to wait before checking this step",
                          "maximum": 900,
                          "minimum": 1
                        },
                        "listen_for": {
                          "type": "array",
                          "description": "List of events and conditions to listen for to trigger",
                          "items": {
                            "type": "object",
                            "required": [
                              "event"
                            ],
                            "properties": {
                              "event": {
                                "type": "string",
                                "description": "Name of the event to listen for",
                                "allOf": [
                                  {
                                    "type": "string",
                                    "description": "Possible entity events",
                                    "enum": [
                                      "CON.attached",
                                      "CON.created",
                                      "CON.deleted",
                                      "CON.detached",
                                      "CON.removed",
                                      "CON.updated",
                                      "CUS.attached",
                                      "CUS.created",
                                      "CUS.deleted",
                                      "CUS.detached",
                                      "CUS.removed",
                                      "CUS.updated",
                                      "LOC.attached",
                                      "LOC.created",
                                      "LOC.deleted",
                                      "LOC.detached",
                                      "LOC.removed",
                                      "LOC.updated",
                                      "NOTE.attached",
                                      "NOTE.created",
                                      "NOTE.deleted",
                                      "NOTE.detached",
                                      "NOTE.removed",
                                      "NOTE.updated",
                                      "PART.attached",
                                      "PART.created",
                                      "PART.deleted",
                                      "PART.detached",
                                      "PART.removed",
                                      "PART.updated",
                                      "PGM.attached",
                                      "PGM.created",
                                      "PGM.deleted",
                                      "PGM.detached",
                                      "PGM.removed",
                                      "PGM.updated",
                                      "PRO.attached",
                                      "PRO.created",
                                      "PRO.deleted",
                                      "PRO.detached",
                                      "PRO.removed",
                                      "PRO.updated",
                                      "RES.attached",
                                      "RES.created",
                                      "RES.deleted",
                                      "RES.detached",
                                      "RES.removed",
                                      "RES.updated",
                                      "UNIT.attached",
                                      "UNIT.created",
                                      "UNIT.deleted",
                                      "UNIT.detached",
                                      "UNIT.removed",
                                      "UNIT.updated",
                                      "USER.attached",
                                      "USER.created",
                                      "USER.deleted",
                                      "USER.detached",
                                      "USER.removed",
                                      "USER.updated",
                                      "WKF.attached",
                                      "WKF.created",
                                      "WKF.deleted",
                                      "WKF.detached",
                                      "WKF.removed",
                                      "WKF.updated",
                                      "WOR.attached",
                                      "WOR.created",
                                      "WOR.deleted",
                                      "WOR.detached",
                                      "WOR.removed",
                                      "WOR.updated"
                                    ]
                                  }
                                ]
                              },
                              "event_value": {
                                "type": "object",
                                "description": "The event conditions that have to be met",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepChoice.json",
                                    "type": "object",
                                    "description": "A Step choice",
                                    "maxProperties": 2,
                                    "minProperties": 2,
                                    "required": [
                                      "decision"
                                    ],
                                    "properties": {
                                      "decision": {
                                        "type": "array",
                                        "description": "Context variable to check",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "variable": {
                                              "type": "string",
                                              "description": "Variable or value"
                                            },
                                            "operator": {
                                              "type": "string",
                                              "description": "Operator to perform",
                                              "enum": [
                                                "greater_than_equals",
                                                "less_than_equals",
                                                "greater_than",
                                                "less_than",
                                                "equals",
                                                "not_equals"
                                              ]
                                            },
                                            "operand": {
                                              "type": "string",
                                              "description": "operand to compare with"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepNext.json",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "label",
                                          "goto"
                                        ],
                                        "properties": {
                                          "goto": {
                                            "type": "string",
                                            "description": "Step to move to",
                                            "pattern": "^[a-z][a-z-]+[a-z]$"
                                          },
                                          "goto-fail": {
                                            "type": "string",
                                            "description": "Step to transition too if this step cannot be completed",
                                            "pattern": "^[a-z][a-z-]+[a-z]$"
                                          },
                                          "context": {
                                            "type": "array",
                                            "description": "Values to set on the context",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "value"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "type": "string",
                                                  "description": "The context key to set"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "Value to set"
                                                },
                                                "lock": {
                                                  "type": "boolean",
                                                  "description": "Prevents other steps from writing this value"
                                                },
                                                "ignore": {
                                                  "type": "boolean",
                                                  "description": "When trying to set a locked key, do not fail"
                                                }
                                              }
                                            }
                                          },
                                          "onStart": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                            "type": "object",
                                            "required": [
                                              "retry",
                                              "finally"
                                            ],
                                            "properties": {
                                              "actions": {
                                                "type": "array",
                                                "description": "Actions to take on failure",
                                                "maxItems": 10,
                                                "items": {
                                                  "type": "object"
                                                }
                                              }
                                            }
                                          },
                                          "onError": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                            "type": "object",
                                            "required": [
                                              "retry",
                                              "finally"
                                            ],
                                            "properties": {
                                              "retry": {
                                                "type": "integer",
                                                "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                                "minimum": 0,
                                                "maximum": 10,
                                                "default": 0
                                              },
                                              "finally": {
                                                "type": "object",
                                                "description": "What to do after all retries",
                                                "properties": {
                                                  "actions": {
                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                    "type": "object",
                                                    "required": [
                                                      "retry",
                                                      "finally"
                                                    ],
                                                    "properties": {
                                                      "actions": {
                                                        "type": "array",
                                                        "description": "Actions to take on failure",
                                                        "maxItems": 10,
                                                        "items": {
                                                          "type": "object"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "onTimeout": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                            "type": "object",
                                            "required": [
                                              "retry",
                                              "finally"
                                            ],
                                            "properties": {
                                              "retry": {
                                                "type": "integer",
                                                "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                                "minimum": 0,
                                                "maximum": 10,
                                                "default": 0
                                              },
                                              "finally": {
                                                "type": "object",
                                                "description": "What to do after all retries",
                                                "properties": {
                                                  "actions": {
                                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                    "type": "object",
                                                    "required": [
                                                      "retry",
                                                      "finally"
                                                    ],
                                                    "properties": {
                                                      "actions": {
                                                        "type": "array",
                                                        "description": "Actions to take on failure",
                                                        "maxItems": 10,
                                                        "items": {
                                                          "type": "object"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                          "type": "object",
                          "required": [
                            "type",
                            "label",
                            "goto"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of workflow step",
                              "enum": [
                                "load",
                                "choice",
                                "function",
                                "machine",
                                "pass",
                                "fail",
                                "success",
                                "user",
                                "wait"
                              ]
                            },
                            "label": {
                              "type": "string",
                              "description": "Label for the step"
                            },
                            "goto": {
                              "type": "string",
                              "description": "Step to move to",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "goto-fail": {
                              "type": "string",
                              "description": "Step to transition too if this step cannot be completed",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "onComplete": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                              "type": "object",
                              "required": [
                                "retry",
                                "finally"
                              ],
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "description": "Actions to take on failure",
                                  "maxItems": 10,
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "current_step": {
          "type": "string",
          "description": "The current step to execute",
          "readOnly": true
        },
        "last_steps": {
          "type": "array",
          "description": "Ordered list of the executed steps",
          "readOnly": true,
          "items": {
            "type": "object",
            "description": "Details for the step",
            "properties": {
              "step_name": {
                "type": "string",
                "description": "Name for the step",
                "readOnly": true
              },
              "started_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date time the step started",
                "readOnly": true
              },
              "ended_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date time the step ended",
                "readOnly": true
              },
              "time_to_run": {
                "type": "string",
                "description": "The total time it took to run the step (with milliseconds)",
                "readOnly": true
              },
              "did_error": {
                "type": "boolean",
                "description": "Flag to test if the step errored",
                "readOnly": true
              },
              "did_timeout": {
                "type": "boolean",
                "description": "Flag if the step timed-out",
                "readOnly": true
              }
            }
          }
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date time the context started",
          "readOnly": true
        },
        "ended_at": {
          "type": "string",
          "format": "date-time",
          "nullable": true,
          "description": "The date time the context ended",
          "readOnly": true
        },
        "time_to_run": {
          "type": "number",
          "description": "The total time it took to run the workflow (with milliseconds)",
          "readOnly": true
        },
        "active": {
          "type": "boolean",
          "description": "Flag set if there are still steps which need to be executed",
          "readOnly": true
        },
        "waiting_for_user": {
          "type": "boolean",
          "description": "Flag for when the user needs to complete the step"
        },
        "data": {
          "type": "object",
          "description": "Data set for the context",
          "additionalProperties": true,
          "readOnly": true
        },
        "entity": {
          "type": "object",
          "additionalProperties": false,
          "readOnly": true,
          "anyOf": [
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/contact.json",
              "type": "object",
              "description": "Contact Information",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated"
              ],
              "properties": {
                "contact_id": {
                  "description": "Identifier for the contact",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "CON"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Email address"
                },
                "name": {
                  "type": "string",
                  "description": "Contact name"
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number"
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/entityCommon.json",
                  "type": "object",
                  "description": "Common Properties to all entities",
                  "required": [
                    "label"
                  ],
                  "properties": {
                    "entity_id": {
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
              "type": "object",
              "description": "Customer",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "allowed_statuses"
              ],
              "properties": {
                "customer_id": {
                  "description": "Customer identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "CUS"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "external_platform": {
                  "type": "object",
                  "description": "External Identifiers for the customer",
                  "deprecated": true,
                  "patternProperties": {
                    "^[A-Za-z][A-Za-z0-9_]*$": {
                      "type": "string"
                    }
                  }
                },
                "allowed_statuses": {
                  "type": "array",
                  "description": "List of allowed statuses",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                    "type": "object",
                    "description": "Defines the properties for a status",
                    "additionalProperties": false,
                    "required": [
                      "status",
                      "category"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "A Custom label for the status",
                        "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                      },
                      "category": {
                        "type": "string",
                        "description": "The classifier for the statues",
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "VERIFYING",
                          "COMPLETE",
                          "CANCELLED",
                          "BLOCKED"
                        ]
                      }
                    }
                  }
                },
                "total_programs": {
                  "type": "number",
                  "description": "Total programs under the customer"
                },
                "total_projects": {
                  "type": "number",
                  "description": "Total projects under the customer"
                }
              }
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/part.json",
              "type": "object",
              "description": "Defines the properties for a part",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "customer",
                "manufacturer"
              ],
              "properties": {
                "part_id": {
                  "description": "Unique identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "PART"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "customer": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                  "type": "object",
                  "description": "Customer",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "allowed_statuses"
                  ],
                  "properties": {
                    "customer_id": {
                      "description": "Customer identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "CUS"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "external_platform": {
                      "type": "object",
                      "description": "External Identifiers for the customer",
                      "deprecated": true,
                      "patternProperties": {
                        "^[A-Za-z][A-Za-z0-9_]*$": {
                          "type": "string"
                        }
                      }
                    },
                    "allowed_statuses": {
                      "type": "array",
                      "description": "List of allowed statuses",
                      "uniqueItems": true,
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                        "type": "object",
                        "description": "Defines the properties for a status",
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "category"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "A Custom label for the status",
                            "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                          },
                          "category": {
                            "type": "string",
                            "description": "The classifier for the statues",
                            "enum": [
                              "PENDING",
                              "IN_PROGRESS",
                              "VERIFYING",
                              "COMPLETE",
                              "CANCELLED",
                              "BLOCKED"
                            ]
                          }
                        }
                      }
                    },
                    "total_programs": {
                      "type": "number",
                      "description": "Total programs under the customer"
                    },
                    "total_projects": {
                      "type": "number",
                      "description": "Total projects under the customer"
                    }
                  }
                },
                "manufacturer": {
                  "type": "object",
                  "description": "Manufacturer information for the part",
                  "required": [
                    "part_number"
                  ],
                  "properties": {
                    "part_number": {
                      "type": "string",
                      "description": "Manufacturer part number"
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/manufacturer.json",
                      "type": "object",
                      "description": "A Manufacturer of parts",
                      "additionalProperties": false,
                      "required": [
                        "label",
                        "entity_id",
                        "entity_type",
                        "created",
                        "updated"
                      ],
                      "properties": {
                        "manufacturer_id": {
                          "description": "Manufacturer identifier",
                          "type": "string",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_id": {
                          "x-no-api-doc": true,
                          "type": "string",
                          "description": "Customer identifier",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_type": {
                          "x-no-api-doc": true,
                          "const": "MFR"
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the entity"
                        },
                        "slug": {
                          "type": "string",
                          "description": "Slug for the entity (Auto-generated from the label)",
                          "readOnly": true,
                          "deprecated": true,
                          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                        },
                        "created": {
                          "description": "Date the entity was created",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "updated": {
                          "description": "Last date the entity was updated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "serial_prefix": {
                  "type": "string",
                  "description": "A serial number prefix for the part"
                },
                "input_filter": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter.json",
                  "type": "array",
                  "description": "Input Filters allow custom fields to be defined for entities",
                  "items": {
                    "type": "object",
                    "description": "Input filter specification",
                    "require": [
                      "label",
                      "key",
                      "filter",
                      "validators"
                    ],
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Human readable name"
                      },
                      "key": {
                        "type": "string",
                        "description": "Slug used to store the property",
                        "readOnly": true,
                        "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                      },
                      "filters": {
                        "type": "array",
                        "description": "A Collection of filters applied to the field",
                        "maxItems": 100,
                        "items": {
                          "anyOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/allowed.json",
                              "type": "object",
                              "description": "This filter will set the value based on a list of approved values. If the value is not in the list, it will then be set to empty unless the default option is set",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "allowed_list"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "approved_values"
                                  ],
                                  "properties": {
                                    "approved_values": {
                                      "type": "array",
                                      "minimum": 1,
                                      "maximum": 100,
                                      "description": "The list of approved values",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    },
                                    "default": {
                                      "type": "string",
                                      "description": "If this is set and the value is not in the approved_list, set the value to this",
                                      "nullable": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/camelCase.json",
                              "type": "object",
                              "description": "Make the value camelCase",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "camel"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/date.json",
                              "type": "object",
                              "description": "Filter to transform a value into a date",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "date"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "Date filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/empty.json",
                              "type": "object",
                              "description": "Filter to transform values into null. This is helpful when trying to make a value required. The following are considered empty:\n# The number 0 or 0.0\n# empty string ''\n# A boolean false\n# The word 'false'\n# ",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "empty"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "empty filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/float.json",
                              "type": "object",
                              "description": "Filter to transform a value into a float. Non numeric characters (including comma) will be removed",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "float"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3,
                                      "description": "How many decimal places to preserve"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/kebabCase.json",
                              "type": "object",
                              "description": "Make the value kebab-case",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "kebab"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/lower.json",
                              "type": "object",
                              "description": "Make the value lowercase",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "lower"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/number.json",
                              "type": "object",
                              "description": "Filter to transform a value into a number. Non numeric characters (including comma and decimal points) will be removed",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "number"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "Number filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/prefix.json",
                              "type": "object",
                              "description": "Add a prefix to the start of a string. If the string already start with the prefix, it will not prepend.",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "prefix"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "prefix"
                                  ],
                                  "properties": {
                                    "prefix": {
                                      "type": "string",
                                      "description": "The prefix to add"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/snakeCase.json",
                              "type": "object",
                              "description": "Make the value snake_case",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "snake"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/string.json",
                              "type": "object",
                              "description": "Filter to transform a value into a string",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "string"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "String filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/suffix.json",
                              "description": "Add a suffix to the start of a string. If the string already start with the suffix, it will not append.",
                              "type": "object",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "suffix"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "suffix"
                                  ],
                                  "properties": {
                                    "suffix": {
                                      "type": "string",
                                      "description": "The suffix to add"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/trim.json",
                              "type": "object",
                              "description": "Filter to trim whitespace from a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "trim"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "By default will trim from the start and end",
                                  "properties": {
                                    "start": {
                                      "type": "boolean",
                                      "description": "Remove white space from the start of the string",
                                      "default": true
                                    },
                                    "end": {
                                      "type": "boolean",
                                      "description": "Remove white space from the end of the string",
                                      "default": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/upper.json",
                              "type": "object",
                              "description": "Make the value UPPERCASE",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "upper"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "validators": {
                        "type": "array",
                        "description": "A set of validators to use for this field",
                        "maxItems": 100,
                        "items": {
                          "anyOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/between.json",
                              "type": "object",
                              "description": "Validate number is between two values. By default, min and max are included",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "greater_than"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "min",
                                    "max"
                                  ],
                                  "properties": {
                                    "min": {
                                      "type": "number",
                                      "description": "Minimum value to check"
                                    },
                                    "max": {
                                      "type": "number",
                                      "description": "The maximum value to check"
                                    },
                                    "precision": {
                                      "type": "integer",
                                      "description": "When number is a float, this will set the decimal precision",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3
                                    },
                                    "include": {
                                      "type": "boolean",
                                      "description": "Include the value in the check",
                                      "default": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/blackList.json",
                              "type": "object",
                              "description": "Validate value does not match a list (black list)",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "white_list"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "list"
                                  ],
                                  "properties": {
                                    "list": {
                                      "type": "array",
                                      "minimum": 1,
                                      "maximum": 100,
                                      "description": "The list of approved values",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/contains.json",
                              "type": "object",
                              "description": "Validate string contains a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "contains"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "contains"
                                  ],
                                  "properties": {
                                    "contains": {
                                      "type": "string",
                                      "description": "String must contain with this value"
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/emailAddress.json",
                              "type": "object",
                              "description": "Validate string is a correct email address",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "email_address"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "strict": {
                                      "type": "boolean",
                                      "description": "Enforce strict standards from ARPA. This will enforce the length of the string",
                                      "default": true
                                    },
                                    "lookup": {
                                      "type": "boolean",
                                      "description": "Look up the host name and check if it has a valid MX record",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/endsWith.json",
                              "type": "object",
                              "description": "Validate string ends with a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ends_with"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "ends_with"
                                  ],
                                  "properties": {
                                    "ends_with": {
                                      "type": "string",
                                      "description": "String must end with this value"
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/equals.json",
                              "type": "object",
                              "description": "Validate number equals a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "equals"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "value"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value to compare against"
                                    },
                                    "precision": {
                                      "type": "integer",
                                      "description": "When value is a float, this will set the decimal precision",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/greaterThan.json",
                              "type": "object",
                              "description": "Validate number is greater than a value. By default, this will check if value is greater than or equals to",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "greater_than"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "value"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value to compare against"
                                    },
                                    "precision": {
                                      "type": "integer",
                                      "description": "When number is a float, this will set the decimal precision",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3
                                    },
                                    "include": {
                                      "type": "boolean",
                                      "description": "Include the value in the check",
                                      "default": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/hostname.json",
                              "type": "object",
                              "description": "Validate string has a correct DNS records",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "hostname"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "record_type": {
                                      "type": "string",
                                      "description": "DNS record type to validate",
                                      "default": "A",
                                      "enum": [
                                        "A",
                                        "AAAA",
                                        "AFSDB",
                                        "APL",
                                        "CAA",
                                        "CDNSKEY",
                                        "CDS",
                                        "CERT",
                                        "CNAME",
                                        "CSYNC",
                                        "DHCID",
                                        "DLV",
                                        "DNAME",
                                        "DNSKEY",
                                        "DS",
                                        "HIP",
                                        "IPSECKEY",
                                        "KEY",
                                        "KX",
                                        "LOC",
                                        "MX",
                                        "NAPTR",
                                        "NS",
                                        "NSEC",
                                        "NSEC3",
                                        "NSEC3PARAM",
                                        "OPENPGPKEY",
                                        "PTR",
                                        "RRSIG",
                                        "RP",
                                        "SIG",
                                        "SMIMEA",
                                        "SOA",
                                        "SRV",
                                        "SSHFP",
                                        "TA",
                                        "TKEY",
                                        "TLSA",
                                        "TSIG",
                                        "TXT",
                                        "URI"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/ipAddress.json",
                              "type": "object",
                              "description": "Validate string matches an IP address format. Defaults to matching IPv4",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ipAddress"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "versions": {
                                      "type": "array",
                                      "description": "IP Version to match against",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "IPv4",
                                          "IPv6"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/length.json",
                              "type": "object",
                              "description": "Validate string is a certain length",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "length"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "length"
                                  ],
                                  "properties": {
                                    "length": {
                                      "type": "string",
                                      "description": "String must contain with this value"
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "Which type of length comparision to make",
                                      "default": "equals",
                                      "enum": [
                                        "equals",
                                        "less_than",
                                        "less_than_equals",
                                        "greater_than",
                                        "greater_than_equals"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/lessThan.json",
                              "type": "object",
                              "description": "Validate number is less than a value. By default, this will check if value is less than or equals to",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "lessThan"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "value"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value to compare against"
                                    },
                                    "precision": {
                                      "type": "integer",
                                      "description": "When number is a float, this will set the decimal precision",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3
                                    },
                                    "include": {
                                      "type": "boolean",
                                      "description": "Include the value in the check",
                                      "default": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/macAddress.json",
                              "type": "object",
                              "description": "Validate string matches an MAC address format",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "macAddress"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This validator has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/mask.json",
                              "type": "object",
                              "description": "Validate string matches a regular expression",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "mask"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "mask"
                                  ],
                                  "properties": {
                                    "mask": {
                                      "type": "string",
                                      "description": "Mask to validate against"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/startsWith.json",
                              "type": "object",
                              "description": "Validate string starts with a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "startsWith"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "starts_with"
                                  ],
                                  "properties": {
                                    "starts_with": {
                                      "type": "string",
                                      "description": "String must start with this value"
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/step.json",
                              "type": "object",
                              "description": "Validates that a value follows a step. Both start and end options do not have to sync with the step. If they do not sync then find the nearest step.",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "step"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "step"
                                  ],
                                  "properties": {
                                    "step": {
                                      "type": "number",
                                      "description": "The step value"
                                    },
                                    "start": {
                                      "type": "integer",
                                      "description": "Start stepping at this value"
                                    },
                                    "end": {
                                      "type": "integer",
                                      "description": "End stepping at this value"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/uri.json",
                              "type": "object",
                              "description": "Validate string matches an URI",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "uri"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "schemes": {
                                      "type": "array",
                                      "description": "Schemes to match. By default all are matched",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "http",
                                          "https",
                                          "sip",
                                          "sips",
                                          "ftp",
                                          "ftps",
                                          "ldap",
                                          "ldaps",
                                          "file",
                                          "udp",
                                          "tcp",
                                          "urn"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/whiteList.json",
                              "type": "object",
                              "description": "Validate value matches a list (white list)",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "whiteList"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "list"
                                  ],
                                  "properties": {
                                    "list": {
                                      "type": "array",
                                      "minimum": 1,
                                      "maximum": 100,
                                      "description": "The list of approved values",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/program.json",
              "type": "object",
              "description": "Defines the properties for a program",
              "additionalProperties": false,
              "required": [
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "customer",
                "allowed_statuses"
              ],
              "properties": {
                "program_id": {
                  "description": "Unique identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "PGM"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "start_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Start date"
                },
                "end_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "End date"
                },
                "customer": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                  "type": "object",
                  "description": "Customer",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "allowed_statuses"
                  ],
                  "properties": {
                    "customer_id": {
                      "description": "Customer identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "CUS"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "external_platform": {
                      "type": "object",
                      "description": "External Identifiers for the customer",
                      "deprecated": true,
                      "patternProperties": {
                        "^[A-Za-z][A-Za-z0-9_]*$": {
                          "type": "string"
                        }
                      }
                    },
                    "allowed_statuses": {
                      "type": "array",
                      "description": "List of allowed statuses",
                      "uniqueItems": true,
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                        "type": "object",
                        "description": "Defines the properties for a status",
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "category"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "A Custom label for the status",
                            "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                          },
                          "category": {
                            "type": "string",
                            "description": "The classifier for the statues",
                            "enum": [
                              "PENDING",
                              "IN_PROGRESS",
                              "VERIFYING",
                              "COMPLETE",
                              "CANCELLED",
                              "BLOCKED"
                            ]
                          }
                        }
                      }
                    },
                    "total_programs": {
                      "type": "number",
                      "description": "Total programs under the customer"
                    },
                    "total_projects": {
                      "type": "number",
                      "description": "Total projects under the customer"
                    }
                  }
                },
                "allowed_statuses": {
                  "type": "array",
                  "description": "List of allowed statuses",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                    "type": "object",
                    "description": "Defines the properties for a status",
                    "additionalProperties": false,
                    "required": [
                      "status",
                      "category"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "A Custom label for the status",
                        "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                      },
                      "category": {
                        "type": "string",
                        "description": "The classifier for the statues",
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "VERIFYING",
                          "COMPLETE",
                          "CANCELLED",
                          "BLOCKED"
                        ]
                      }
                    }
                  }
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/dateRange.json",
                  "type": "object",
                  "description": "Active date range for an entity",
                  "properties": {
                    "start_date": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "Start date"
                    },
                    "end_date": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "End date"
                    }
                  }
                }
              ]
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/project.json",
              "type": "object",
              "description": "Defines the properties for a project",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "customer",
                "program",
                "allowed_statuses"
              ],
              "properties": {
                "project_id": {
                  "type": "string",
                  "description": "Unique identifier",
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "PRJ"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "customer": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                  "type": "object",
                  "description": "Customer",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "allowed_statuses"
                  ],
                  "properties": {
                    "customer_id": {
                      "description": "Customer identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "CUS"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "external_platform": {
                      "type": "object",
                      "description": "External Identifiers for the customer",
                      "deprecated": true,
                      "patternProperties": {
                        "^[A-Za-z][A-Za-z0-9_]*$": {
                          "type": "string"
                        }
                      }
                    },
                    "allowed_statuses": {
                      "type": "array",
                      "description": "List of allowed statuses",
                      "uniqueItems": true,
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                        "type": "object",
                        "description": "Defines the properties for a status",
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "category"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "A Custom label for the status",
                            "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                          },
                          "category": {
                            "type": "string",
                            "description": "The classifier for the statues",
                            "enum": [
                              "PENDING",
                              "IN_PROGRESS",
                              "VERIFYING",
                              "COMPLETE",
                              "CANCELLED",
                              "BLOCKED"
                            ]
                          }
                        }
                      }
                    },
                    "total_programs": {
                      "type": "number",
                      "description": "Total programs under the customer"
                    },
                    "total_projects": {
                      "type": "number",
                      "description": "Total projects under the customer"
                    }
                  }
                },
                "program": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/program.json",
                  "type": "object",
                  "description": "Defines the properties for a program",
                  "additionalProperties": false,
                  "required": [
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "customer",
                    "allowed_statuses"
                  ],
                  "properties": {
                    "program_id": {
                      "description": "Unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "PGM"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "start_date": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "Start date"
                    },
                    "end_date": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "End date"
                    },
                    "customer": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                      "type": "object",
                      "description": "Customer",
                      "additionalProperties": false,
                      "required": [
                        "label",
                        "entity_id",
                        "entity_type",
                        "created",
                        "updated",
                        "allowed_statuses"
                      ],
                      "properties": {
                        "customer_id": {
                          "description": "Customer identifier",
                          "type": "string",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_id": {
                          "x-no-api-doc": true,
                          "type": "string",
                          "description": "Customer identifier",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_type": {
                          "x-no-api-doc": true,
                          "const": "CUS"
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the entity"
                        },
                        "slug": {
                          "type": "string",
                          "description": "Slug for the entity (Auto-generated from the label)",
                          "readOnly": true,
                          "deprecated": true,
                          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                        },
                        "created": {
                          "description": "Date the entity was created",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "updated": {
                          "description": "Last date the entity was updated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "external_platform": {
                          "type": "object",
                          "description": "External Identifiers for the customer",
                          "deprecated": true,
                          "patternProperties": {
                            "^[A-Za-z][A-Za-z0-9_]*$": {
                              "type": "string"
                            }
                          }
                        },
                        "allowed_statuses": {
                          "type": "array",
                          "description": "List of allowed statuses",
                          "uniqueItems": true,
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                            "type": "object",
                            "description": "Defines the properties for a status",
                            "additionalProperties": false,
                            "required": [
                              "status",
                              "category"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "A Custom label for the status",
                                "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                              },
                              "category": {
                                "type": "string",
                                "description": "The classifier for the statues",
                                "enum": [
                                  "PENDING",
                                  "IN_PROGRESS",
                                  "VERIFYING",
                                  "COMPLETE",
                                  "CANCELLED",
                                  "BLOCKED"
                                ]
                              }
                            }
                          }
                        },
                        "total_programs": {
                          "type": "number",
                          "description": "Total programs under the customer"
                        },
                        "total_projects": {
                          "type": "number",
                          "description": "Total projects under the customer"
                        }
                      }
                    },
                    "allowed_statuses": {
                      "type": "array",
                      "description": "List of allowed statuses",
                      "uniqueItems": true,
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                        "type": "object",
                        "description": "Defines the properties for a status",
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "category"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "A Custom label for the status",
                            "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                          },
                          "category": {
                            "type": "string",
                            "description": "The classifier for the statues",
                            "enum": [
                              "PENDING",
                              "IN_PROGRESS",
                              "VERIFYING",
                              "COMPLETE",
                              "CANCELLED",
                              "BLOCKED"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/dateRange.json",
                      "type": "object",
                      "description": "Active date range for an entity",
                      "properties": {
                        "start_date": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "format": "date-time",
                          "description": "Start date"
                        },
                        "end_date": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "format": "date-time",
                          "description": "End date"
                        }
                      }
                    }
                  ]
                },
                "allowed_statuses": {
                  "type": "array",
                  "description": "List of allowed statuses",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                    "type": "object",
                    "description": "Defines the properties for a status",
                    "additionalProperties": false,
                    "required": [
                      "status",
                      "category"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "A Custom label for the status",
                        "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                      },
                      "category": {
                        "type": "string",
                        "description": "The classifier for the statues",
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "VERIFYING",
                          "COMPLETE",
                          "CANCELLED",
                          "BLOCKED"
                        ]
                      }
                    }
                  }
                },
                "start_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Start date"
                },
                "end_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "End date"
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/entityCommon.json",
                  "type": "object",
                  "description": "Common Properties to all entities",
                  "required": [
                    "label"
                  ],
                  "properties": {
                    "entity_id": {
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/unit.json",
              "type": "object",
              "description": "Defines the properties for a unit",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "part"
              ],
              "properties": {
                "unit_id": {
                  "type": "string",
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "UNIT"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "serial_number": {
                  "type": "string",
                  "description": "Serial number of the unit with prefix stripped",
                  "readOnly": true
                },
                "raw_serial_number": {
                  "type": "string",
                  "description": "Serial number of the unit"
                },
                "tenant_part_number": {
                  "type": "string",
                  "description": "Identifier set by the tenant"
                },
                "manufacturer": {
                  "description": "The manufacturer that makes this unit",
                  "type": "object",
                  "properties": {
                    "part_number": {
                      "type": "string",
                      "description": "The part number supplied by the manufacturer"
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/manufacturer.json",
                      "type": "object",
                      "description": "A Manufacturer of parts",
                      "additionalProperties": false,
                      "required": [
                        "label",
                        "entity_id",
                        "entity_type",
                        "created",
                        "updated"
                      ],
                      "properties": {
                        "manufacturer_id": {
                          "description": "Manufacturer identifier",
                          "type": "string",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_id": {
                          "x-no-api-doc": true,
                          "type": "string",
                          "description": "Customer identifier",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_type": {
                          "x-no-api-doc": true,
                          "const": "MFR"
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the entity"
                        },
                        "slug": {
                          "type": "string",
                          "description": "Slug for the entity (Auto-generated from the label)",
                          "readOnly": true,
                          "deprecated": true,
                          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                        },
                        "created": {
                          "description": "Date the entity was created",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "updated": {
                          "description": "Last date the entity was updated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "vendor": {
                  "type": "object",
                  "description": "The vendor that sold this unit",
                  "properties": {
                    "part_number": {
                      "type": "string",
                      "description": "The part number supplied by the vendor"
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/vendor.json",
                      "type": "object",
                      "description": "A Vendor which sells parts",
                      "additionalProperties": false,
                      "required": [
                        "label",
                        "entity_id",
                        "entity_type",
                        "created",
                        "updated"
                      ],
                      "properties": {
                        "vendor_id": {
                          "type": "string",
                          "description": "unique id",
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_id": {
                          "x-no-api-doc": true,
                          "type": "string",
                          "description": "Customer identifier",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_type": {
                          "x-no-api-doc": true,
                          "const": "VEN"
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the entity"
                        },
                        "slug": {
                          "type": "string",
                          "description": "Slug for the entity (Auto-generated from the label)",
                          "readOnly": true,
                          "deprecated": true,
                          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                        },
                        "created": {
                          "description": "Date the entity was created",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "updated": {
                          "description": "Last date the entity was updated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                },
                "part": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/part.json",
                  "type": "object",
                  "description": "Defines the properties for a part",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "customer",
                    "manufacturer"
                  ],
                  "properties": {
                    "part_id": {
                      "description": "Unique identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "PART"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "customer": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                      "type": "object",
                      "description": "Customer",
                      "additionalProperties": false,
                      "required": [
                        "label",
                        "entity_id",
                        "entity_type",
                        "created",
                        "updated",
                        "allowed_statuses"
                      ],
                      "properties": {
                        "customer_id": {
                          "description": "Customer identifier",
                          "type": "string",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_id": {
                          "x-no-api-doc": true,
                          "type": "string",
                          "description": "Customer identifier",
                          "readOnly": true,
                          "pattern": "^[0-9a-zA-Z-_]+$"
                        },
                        "entity_type": {
                          "x-no-api-doc": true,
                          "const": "CUS"
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the entity"
                        },
                        "slug": {
                          "type": "string",
                          "description": "Slug for the entity (Auto-generated from the label)",
                          "readOnly": true,
                          "deprecated": true,
                          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                        },
                        "created": {
                          "description": "Date the entity was created",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "updated": {
                          "description": "Last date the entity was updated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "external_platform": {
                          "type": "object",
                          "description": "External Identifiers for the customer",
                          "deprecated": true,
                          "patternProperties": {
                            "^[A-Za-z][A-Za-z0-9_]*$": {
                              "type": "string"
                            }
                          }
                        },
                        "allowed_statuses": {
                          "type": "array",
                          "description": "List of allowed statuses",
                          "uniqueItems": true,
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                            "type": "object",
                            "description": "Defines the properties for a status",
                            "additionalProperties": false,
                            "required": [
                              "status",
                              "category"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "A Custom label for the status",
                                "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                              },
                              "category": {
                                "type": "string",
                                "description": "The classifier for the statues",
                                "enum": [
                                  "PENDING",
                                  "IN_PROGRESS",
                                  "VERIFYING",
                                  "COMPLETE",
                                  "CANCELLED",
                                  "BLOCKED"
                                ]
                              }
                            }
                          }
                        },
                        "total_programs": {
                          "type": "number",
                          "description": "Total programs under the customer"
                        },
                        "total_projects": {
                          "type": "number",
                          "description": "Total projects under the customer"
                        }
                      }
                    },
                    "manufacturer": {
                      "type": "object",
                      "description": "Manufacturer information for the part",
                      "required": [
                        "part_number"
                      ],
                      "properties": {
                        "part_number": {
                          "type": "string",
                          "description": "Manufacturer part number"
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/manufacturer.json",
                          "type": "object",
                          "description": "A Manufacturer of parts",
                          "additionalProperties": false,
                          "required": [
                            "label",
                            "entity_id",
                            "entity_type",
                            "created",
                            "updated"
                          ],
                          "properties": {
                            "manufacturer_id": {
                              "description": "Manufacturer identifier",
                              "type": "string",
                              "readOnly": true,
                              "pattern": "^[0-9a-zA-Z-_]+$"
                            },
                            "entity_id": {
                              "x-no-api-doc": true,
                              "type": "string",
                              "description": "Customer identifier",
                              "readOnly": true,
                              "pattern": "^[0-9a-zA-Z-_]+$"
                            },
                            "entity_type": {
                              "x-no-api-doc": true,
                              "const": "MFR"
                            },
                            "label": {
                              "type": "string",
                              "description": "Label for the entity"
                            },
                            "slug": {
                              "type": "string",
                              "description": "Slug for the entity (Auto-generated from the label)",
                              "readOnly": true,
                              "deprecated": true,
                              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                            },
                            "created": {
                              "description": "Date the entity was created",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "updated": {
                              "description": "Last date the entity was updated",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "serial_prefix": {
                      "type": "string",
                      "description": "A serial number prefix for the part"
                    },
                    "input_filter": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter.json",
                      "type": "array",
                      "description": "Input Filters allow custom fields to be defined for entities",
                      "items": {
                        "type": "object",
                        "description": "Input filter specification",
                        "require": [
                          "label",
                          "key",
                          "filter",
                          "validators"
                        ],
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Human readable name"
                          },
                          "key": {
                            "type": "string",
                            "description": "Slug used to store the property",
                            "readOnly": true,
                            "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                          },
                          "filters": {
                            "type": "array",
                            "description": "A Collection of filters applied to the field",
                            "maxItems": 100,
                            "items": {
                              "anyOf": [
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/allowed.json",
                                  "type": "object",
                                  "description": "This filter will set the value based on a list of approved values. If the value is not in the list, it will then be set to empty unless the default option is set",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "allowed_list"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "approved_values"
                                      ],
                                      "properties": {
                                        "approved_values": {
                                          "type": "array",
                                          "minimum": 1,
                                          "maximum": 100,
                                          "description": "The list of approved values",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "check_case": {
                                          "type": "boolean",
                                          "description": "Perform a case sensitive match. By default will not match case",
                                          "default": false
                                        },
                                        "default": {
                                          "type": "string",
                                          "description": "If this is set and the value is not in the approved_list, set the value to this",
                                          "nullable": true
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/camelCase.json",
                                  "type": "object",
                                  "description": "Make the value camelCase",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "camel"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "This filter has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/date.json",
                                  "type": "object",
                                  "description": "Filter to transform a value into a date",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "date"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "Date filter has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/empty.json",
                                  "type": "object",
                                  "description": "Filter to transform values into null. This is helpful when trying to make a value required. The following are considered empty:\n# The number 0 or 0.0\n# empty string ''\n# A boolean false\n# The word 'false'\n# ",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "empty"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "empty filter has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/float.json",
                                  "type": "object",
                                  "description": "Filter to transform a value into a float. Non numeric characters (including comma) will be removed",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "float"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "properties": {
                                        "precision": {
                                          "type": "integer",
                                          "minimum": 1,
                                          "maximum": 8,
                                          "default": 3,
                                          "description": "How many decimal places to preserve"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/kebabCase.json",
                                  "type": "object",
                                  "description": "Make the value kebab-case",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "kebab"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "This filter has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/lower.json",
                                  "type": "object",
                                  "description": "Make the value lowercase",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "lower"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "This filter has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/number.json",
                                  "type": "object",
                                  "description": "Filter to transform a value into a number. Non numeric characters (including comma and decimal points) will be removed",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "number"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "Number filter has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/prefix.json",
                                  "type": "object",
                                  "description": "Add a prefix to the start of a string. If the string already start with the prefix, it will not prepend.",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "prefix"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "prefix"
                                      ],
                                      "properties": {
                                        "prefix": {
                                          "type": "string",
                                          "description": "The prefix to add"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/snakeCase.json",
                                  "type": "object",
                                  "description": "Make the value snake_case",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "snake"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "This filter has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/string.json",
                                  "type": "object",
                                  "description": "Filter to transform a value into a string",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "string"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "String filter has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/suffix.json",
                                  "description": "Add a suffix to the start of a string. If the string already start with the suffix, it will not append.",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "suffix"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "suffix"
                                      ],
                                      "properties": {
                                        "suffix": {
                                          "type": "string",
                                          "description": "The suffix to add"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/trim.json",
                                  "type": "object",
                                  "description": "Filter to trim whitespace from a value",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "trim"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "By default will trim from the start and end",
                                      "properties": {
                                        "start": {
                                          "type": "boolean",
                                          "description": "Remove white space from the start of the string",
                                          "default": true
                                        },
                                        "end": {
                                          "type": "boolean",
                                          "description": "Remove white space from the end of the string",
                                          "default": true
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/upper.json",
                                  "type": "object",
                                  "description": "Make the value UPPERCASE",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "upper"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "This filter has no options"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "validators": {
                            "type": "array",
                            "description": "A set of validators to use for this field",
                            "maxItems": 100,
                            "items": {
                              "anyOf": [
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/between.json",
                                  "type": "object",
                                  "description": "Validate number is between two values. By default, min and max are included",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "greater_than"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "min",
                                        "max"
                                      ],
                                      "properties": {
                                        "min": {
                                          "type": "number",
                                          "description": "Minimum value to check"
                                        },
                                        "max": {
                                          "type": "number",
                                          "description": "The maximum value to check"
                                        },
                                        "precision": {
                                          "type": "integer",
                                          "description": "When number is a float, this will set the decimal precision",
                                          "minimum": 1,
                                          "maximum": 8,
                                          "default": 3
                                        },
                                        "include": {
                                          "type": "boolean",
                                          "description": "Include the value in the check",
                                          "default": true
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/blackList.json",
                                  "type": "object",
                                  "description": "Validate value does not match a list (black list)",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "white_list"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "list"
                                      ],
                                      "properties": {
                                        "list": {
                                          "type": "array",
                                          "minimum": 1,
                                          "maximum": 100,
                                          "description": "The list of approved values",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "check_case": {
                                          "type": "boolean",
                                          "description": "Perform a case sensitive match. By default will not match case",
                                          "default": false
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/contains.json",
                                  "type": "object",
                                  "description": "Validate string contains a value",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "contains"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "contains"
                                      ],
                                      "properties": {
                                        "contains": {
                                          "type": "string",
                                          "description": "String must contain with this value"
                                        },
                                        "check_case": {
                                          "type": "boolean",
                                          "description": "Perform a case sensitive match. By default will not match case",
                                          "default": false
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/emailAddress.json",
                                  "type": "object",
                                  "description": "Validate string is a correct email address",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "email_address"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "properties": {
                                        "strict": {
                                          "type": "boolean",
                                          "description": "Enforce strict standards from ARPA. This will enforce the length of the string",
                                          "default": true
                                        },
                                        "lookup": {
                                          "type": "boolean",
                                          "description": "Look up the host name and check if it has a valid MX record",
                                          "default": false
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/endsWith.json",
                                  "type": "object",
                                  "description": "Validate string ends with a value",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "ends_with"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "ends_with"
                                      ],
                                      "properties": {
                                        "ends_with": {
                                          "type": "string",
                                          "description": "String must end with this value"
                                        },
                                        "check_case": {
                                          "type": "boolean",
                                          "description": "Perform a case sensitive match. By default will not match case",
                                          "default": false
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/equals.json",
                                  "type": "object",
                                  "description": "Validate number equals a value",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "equals"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "value"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "description": "The value to compare against"
                                        },
                                        "precision": {
                                          "type": "integer",
                                          "description": "When value is a float, this will set the decimal precision",
                                          "minimum": 1,
                                          "maximum": 8,
                                          "default": 3
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/greaterThan.json",
                                  "type": "object",
                                  "description": "Validate number is greater than a value. By default, this will check if value is greater than or equals to",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "greater_than"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "value"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "description": "The value to compare against"
                                        },
                                        "precision": {
                                          "type": "integer",
                                          "description": "When number is a float, this will set the decimal precision",
                                          "minimum": 1,
                                          "maximum": 8,
                                          "default": 3
                                        },
                                        "include": {
                                          "type": "boolean",
                                          "description": "Include the value in the check",
                                          "default": true
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/hostname.json",
                                  "type": "object",
                                  "description": "Validate string has a correct DNS records",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "hostname"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "properties": {
                                        "record_type": {
                                          "type": "string",
                                          "description": "DNS record type to validate",
                                          "default": "A",
                                          "enum": [
                                            "A",
                                            "AAAA",
                                            "AFSDB",
                                            "APL",
                                            "CAA",
                                            "CDNSKEY",
                                            "CDS",
                                            "CERT",
                                            "CNAME",
                                            "CSYNC",
                                            "DHCID",
                                            "DLV",
                                            "DNAME",
                                            "DNSKEY",
                                            "DS",
                                            "HIP",
                                            "IPSECKEY",
                                            "KEY",
                                            "KX",
                                            "LOC",
                                            "MX",
                                            "NAPTR",
                                            "NS",
                                            "NSEC",
                                            "NSEC3",
                                            "NSEC3PARAM",
                                            "OPENPGPKEY",
                                            "PTR",
                                            "RRSIG",
                                            "RP",
                                            "SIG",
                                            "SMIMEA",
                                            "SOA",
                                            "SRV",
                                            "SSHFP",
                                            "TA",
                                            "TKEY",
                                            "TLSA",
                                            "TSIG",
                                            "TXT",
                                            "URI"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/ipAddress.json",
                                  "type": "object",
                                  "description": "Validate string matches an IP address format. Defaults to matching IPv4",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "ipAddress"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "properties": {
                                        "versions": {
                                          "type": "array",
                                          "description": "IP Version to match against",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "IPv4",
                                              "IPv6"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/length.json",
                                  "type": "object",
                                  "description": "Validate string is a certain length",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "length"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "length"
                                      ],
                                      "properties": {
                                        "length": {
                                          "type": "string",
                                          "description": "String must contain with this value"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "description": "Which type of length comparision to make",
                                          "default": "equals",
                                          "enum": [
                                            "equals",
                                            "less_than",
                                            "less_than_equals",
                                            "greater_than",
                                            "greater_than_equals"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/lessThan.json",
                                  "type": "object",
                                  "description": "Validate number is less than a value. By default, this will check if value is less than or equals to",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "lessThan"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "value"
                                      ],
                                      "properties": {
                                        "value": {
                                          "type": "number",
                                          "description": "The value to compare against"
                                        },
                                        "precision": {
                                          "type": "integer",
                                          "description": "When number is a float, this will set the decimal precision",
                                          "minimum": 1,
                                          "maximum": 8,
                                          "default": 3
                                        },
                                        "include": {
                                          "type": "boolean",
                                          "description": "Include the value in the check",
                                          "default": true
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/macAddress.json",
                                  "type": "object",
                                  "description": "Validate string matches an MAC address format",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "macAddress"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "This validator has no options"
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/mask.json",
                                  "type": "object",
                                  "description": "Validate string matches a regular expression",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "mask"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "mask"
                                      ],
                                      "properties": {
                                        "mask": {
                                          "type": "string",
                                          "description": "Mask to validate against"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/startsWith.json",
                                  "type": "object",
                                  "description": "Validate string starts with a value",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "startsWith"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "starts_with"
                                      ],
                                      "properties": {
                                        "starts_with": {
                                          "type": "string",
                                          "description": "String must start with this value"
                                        },
                                        "check_case": {
                                          "type": "boolean",
                                          "description": "Perform a case sensitive match. By default will not match case",
                                          "default": false
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/step.json",
                                  "type": "object",
                                  "description": "Validates that a value follows a step. Both start and end options do not have to sync with the step. If they do not sync then find the nearest step.",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "step"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "step"
                                      ],
                                      "properties": {
                                        "step": {
                                          "type": "number",
                                          "description": "The step value"
                                        },
                                        "start": {
                                          "type": "integer",
                                          "description": "Start stepping at this value"
                                        },
                                        "end": {
                                          "type": "integer",
                                          "description": "End stepping at this value"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/uri.json",
                                  "type": "object",
                                  "description": "Validate string matches an URI",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "uri"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "properties": {
                                        "schemes": {
                                          "type": "array",
                                          "description": "Schemes to match. By default all are matched",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "http",
                                              "https",
                                              "sip",
                                              "sips",
                                              "ftp",
                                              "ftps",
                                              "ldap",
                                              "ldaps",
                                              "file",
                                              "udp",
                                              "tcp",
                                              "urn"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/whiteList.json",
                                  "type": "object",
                                  "description": "Validate value matches a list (white list)",
                                  "required": [
                                    "type",
                                    "options"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "whiteList"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "required": [
                                        "list"
                                      ],
                                      "properties": {
                                        "list": {
                                          "type": "array",
                                          "minimum": 1,
                                          "maximum": 100,
                                          "description": "The list of approved values",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "check_case": {
                                          "type": "boolean",
                                          "description": "Perform a case sensitive match. By default will not match case",
                                          "default": false
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "customer": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                  "type": "object",
                  "description": "Customer",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "allowed_statuses"
                  ],
                  "properties": {
                    "customer_id": {
                      "description": "Customer identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "CUS"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "external_platform": {
                      "type": "object",
                      "description": "External Identifiers for the customer",
                      "deprecated": true,
                      "patternProperties": {
                        "^[A-Za-z][A-Za-z0-9_]*$": {
                          "type": "string"
                        }
                      }
                    },
                    "allowed_statuses": {
                      "type": "array",
                      "description": "List of allowed statuses",
                      "uniqueItems": true,
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                        "type": "object",
                        "description": "Defines the properties for a status",
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "category"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "A Custom label for the status",
                            "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                          },
                          "category": {
                            "type": "string",
                            "description": "The classifier for the statues",
                            "enum": [
                              "PENDING",
                              "IN_PROGRESS",
                              "VERIFYING",
                              "COMPLETE",
                              "CANCELLED",
                              "BLOCKED"
                            ]
                          }
                        }
                      }
                    },
                    "total_programs": {
                      "type": "number",
                      "description": "Total programs under the customer"
                    },
                    "total_projects": {
                      "type": "number",
                      "description": "Total projects under the customer"
                    }
                  }
                },
                "current_location": {
                  "deprecated": true,
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
                  "type": "object",
                  "description": "Defines the properties for a part unit",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "location_type",
                    "address"
                  ],
                  "properties": {
                    "location_id": {
                      "description": "The identifier for the location",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "LOC"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "location_type": {
                      "type": "string",
                      "description": "The type of location",
                      "enum": [
                        "warehouse",
                        "facility",
                        "other"
                      ]
                    },
                    "formatted_address": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Address formatted for the where region the location exists in"
                    },
                    "address": {
                      "type": "object",
                      "required": [
                        "country",
                        "administrative_area",
                        "locality",
                        "postal_code",
                        "thoroughfare"
                      ],
                      "description": "xNAL address for the location ",
                      "properties": {
                        "country": {
                          "type": "string",
                          "description": "Three Letter ISO country code",
                          "enum": [
                            "ABW",
                            "AFG",
                            "AGO",
                            "AIA",
                            "ALA",
                            "ALB",
                            "AND",
                            "ARE",
                            "ARG",
                            "ARM",
                            "ASM",
                            "ATA",
                            "ATF",
                            "ATG",
                            "AUS",
                            "AUT",
                            "AZE",
                            "BDI",
                            "BEL",
                            "BEN",
                            "BES",
                            "BFA",
                            "BGD",
                            "BGR",
                            "BHR",
                            "BHS",
                            "BIH",
                            "BLM",
                            "BLR",
                            "BLZ",
                            "BMU",
                            "BOL",
                            "BRA",
                            "BRB",
                            "BRN",
                            "BTN",
                            "BVT",
                            "BWA",
                            "CAF",
                            "CAN",
                            "CCK",
                            "CHE",
                            "CHL",
                            "CHN",
                            "CIV",
                            "CMR",
                            "COD",
                            "COG",
                            "COK",
                            "COL",
                            "COM",
                            "CPV",
                            "CRI",
                            "CUB",
                            "CUW",
                            "CXR",
                            "CYM",
                            "CYP",
                            "CZE",
                            "DEU",
                            "DJI",
                            "DMA",
                            "DNK",
                            "DOM",
                            "DZA",
                            "ECU",
                            "EGY",
                            "ERI",
                            "ESH",
                            "ESP",
                            "EST",
                            "ETH",
                            "FIN",
                            "FJI",
                            "FLK",
                            "FRA",
                            "FRO",
                            "FSM",
                            "GAB",
                            "GBR",
                            "GEO",
                            "GGY",
                            "GHA",
                            "GIB",
                            "GIN",
                            "GLP",
                            "GMB",
                            "GNB",
                            "GNQ",
                            "GRC",
                            "GRD",
                            "GRL",
                            "GTM",
                            "GUF",
                            "GUM",
                            "GUY",
                            "HKG",
                            "HMD",
                            "HND",
                            "HRV",
                            "HTI",
                            "HUN",
                            "IDN",
                            "IMN",
                            "IND",
                            "IOT",
                            "IRL",
                            "IRN",
                            "IRQ",
                            "ISL",
                            "ISR",
                            "ITA",
                            "JAM",
                            "JEY",
                            "JOR",
                            "JPN",
                            "KAZ",
                            "KEN",
                            "KGZ",
                            "KHM",
                            "KIR",
                            "KNA",
                            "KOR",
                            "KWT",
                            "LAO",
                            "LBN",
                            "LBR",
                            "LBY",
                            "LCA",
                            "LIE",
                            "LKA",
                            "LSO",
                            "LTU",
                            "LUX",
                            "LVA",
                            "MAC",
                            "MAF",
                            "MAR",
                            "MCO",
                            "MDA",
                            "MDG",
                            "MDV",
                            "MEX",
                            "MHL",
                            "MKD",
                            "MLI",
                            "MLT",
                            "MMR",
                            "MNE",
                            "MNG",
                            "MNP",
                            "MOZ",
                            "MRT",
                            "MSR",
                            "MTQ",
                            "MUS",
                            "MWI",
                            "MYS",
                            "MYT",
                            "NAM",
                            "NCL",
                            "NER",
                            "NFK",
                            "NGA",
                            "NIC",
                            "NIU",
                            "NLD",
                            "NOR",
                            "NPL",
                            "NRU",
                            "NZL",
                            "OMN",
                            "PAK",
                            "PAN",
                            "PCN",
                            "PER",
                            "PHL",
                            "PLW",
                            "PNG",
                            "POL",
                            "PRI",
                            "PRK",
                            "PRT",
                            "PRY",
                            "PSE",
                            "PYF",
                            "QAT",
                            "REU",
                            "ROU",
                            "RUS",
                            "RWA",
                            "SAU",
                            "SDN",
                            "SEN",
                            "SGP",
                            "SGS",
                            "SHN",
                            "SJM",
                            "SLB",
                            "SLE",
                            "SLV",
                            "SMR",
                            "SOM",
                            "SPM",
                            "SRB",
                            "SSD",
                            "STP",
                            "SUR",
                            "SVK",
                            "SVN",
                            "SWE",
                            "SWZ",
                            "SXM",
                            "SYC",
                            "SYR",
                            "TCA",
                            "TCD",
                            "TGO",
                            "THA",
                            "TJK",
                            "TKL",
                            "TKM",
                            "TLS",
                            "TON",
                            "TTO",
                            "TUN",
                            "TUR",
                            "TUV",
                            "TWN",
                            "TZA",
                            "UGA",
                            "UKR",
                            "UMI",
                            "URY",
                            "USA",
                            "UZB",
                            "VAT",
                            "VCT",
                            "VEN",
                            "VGB",
                            "VIR",
                            "VNM",
                            "VUT",
                            "WLF",
                            "WSM",
                            "YEM",
                            "ZAF",
                            "ZMB",
                            "ZWE"
                          ]
                        },
                        "administrative_area": {
                          "type": "string",
                          "description": "State / Province / Region"
                        },
                        "sub_administrative_area": {
                          "type": "string",
                          "description": "County / District"
                        },
                        "locality": {
                          "type": "string",
                          "description": "City / Town"
                        },
                        "postal_code": {
                          "type": "string",
                          "description": "Postal Code / Zip Code"
                        },
                        "thoroughfare": {
                          "type": "string",
                          "description": "Street Address"
                        },
                        "premise": {
                          "type": "string",
                          "description": "Apartment / Suite / Box number etc"
                        },
                        "sub_premise": {
                          "type": "string",
                          "description": "Floor # / Room # / Building label etc"
                        }
                      }
                    }
                  }
                },
                "location": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
                  "type": "object",
                  "description": "Defines the properties for a part unit",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "location_type",
                    "address"
                  ],
                  "properties": {
                    "location_id": {
                      "description": "The identifier for the location",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "LOC"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "location_type": {
                      "type": "string",
                      "description": "The type of location",
                      "enum": [
                        "warehouse",
                        "facility",
                        "other"
                      ]
                    },
                    "formatted_address": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Address formatted for the where region the location exists in"
                    },
                    "address": {
                      "type": "object",
                      "required": [
                        "country",
                        "administrative_area",
                        "locality",
                        "postal_code",
                        "thoroughfare"
                      ],
                      "description": "xNAL address for the location ",
                      "properties": {
                        "country": {
                          "type": "string",
                          "description": "Three Letter ISO country code",
                          "enum": [
                            "ABW",
                            "AFG",
                            "AGO",
                            "AIA",
                            "ALA",
                            "ALB",
                            "AND",
                            "ARE",
                            "ARG",
                            "ARM",
                            "ASM",
                            "ATA",
                            "ATF",
                            "ATG",
                            "AUS",
                            "AUT",
                            "AZE",
                            "BDI",
                            "BEL",
                            "BEN",
                            "BES",
                            "BFA",
                            "BGD",
                            "BGR",
                            "BHR",
                            "BHS",
                            "BIH",
                            "BLM",
                            "BLR",
                            "BLZ",
                            "BMU",
                            "BOL",
                            "BRA",
                            "BRB",
                            "BRN",
                            "BTN",
                            "BVT",
                            "BWA",
                            "CAF",
                            "CAN",
                            "CCK",
                            "CHE",
                            "CHL",
                            "CHN",
                            "CIV",
                            "CMR",
                            "COD",
                            "COG",
                            "COK",
                            "COL",
                            "COM",
                            "CPV",
                            "CRI",
                            "CUB",
                            "CUW",
                            "CXR",
                            "CYM",
                            "CYP",
                            "CZE",
                            "DEU",
                            "DJI",
                            "DMA",
                            "DNK",
                            "DOM",
                            "DZA",
                            "ECU",
                            "EGY",
                            "ERI",
                            "ESH",
                            "ESP",
                            "EST",
                            "ETH",
                            "FIN",
                            "FJI",
                            "FLK",
                            "FRA",
                            "FRO",
                            "FSM",
                            "GAB",
                            "GBR",
                            "GEO",
                            "GGY",
                            "GHA",
                            "GIB",
                            "GIN",
                            "GLP",
                            "GMB",
                            "GNB",
                            "GNQ",
                            "GRC",
                            "GRD",
                            "GRL",
                            "GTM",
                            "GUF",
                            "GUM",
                            "GUY",
                            "HKG",
                            "HMD",
                            "HND",
                            "HRV",
                            "HTI",
                            "HUN",
                            "IDN",
                            "IMN",
                            "IND",
                            "IOT",
                            "IRL",
                            "IRN",
                            "IRQ",
                            "ISL",
                            "ISR",
                            "ITA",
                            "JAM",
                            "JEY",
                            "JOR",
                            "JPN",
                            "KAZ",
                            "KEN",
                            "KGZ",
                            "KHM",
                            "KIR",
                            "KNA",
                            "KOR",
                            "KWT",
                            "LAO",
                            "LBN",
                            "LBR",
                            "LBY",
                            "LCA",
                            "LIE",
                            "LKA",
                            "LSO",
                            "LTU",
                            "LUX",
                            "LVA",
                            "MAC",
                            "MAF",
                            "MAR",
                            "MCO",
                            "MDA",
                            "MDG",
                            "MDV",
                            "MEX",
                            "MHL",
                            "MKD",
                            "MLI",
                            "MLT",
                            "MMR",
                            "MNE",
                            "MNG",
                            "MNP",
                            "MOZ",
                            "MRT",
                            "MSR",
                            "MTQ",
                            "MUS",
                            "MWI",
                            "MYS",
                            "MYT",
                            "NAM",
                            "NCL",
                            "NER",
                            "NFK",
                            "NGA",
                            "NIC",
                            "NIU",
                            "NLD",
                            "NOR",
                            "NPL",
                            "NRU",
                            "NZL",
                            "OMN",
                            "PAK",
                            "PAN",
                            "PCN",
                            "PER",
                            "PHL",
                            "PLW",
                            "PNG",
                            "POL",
                            "PRI",
                            "PRK",
                            "PRT",
                            "PRY",
                            "PSE",
                            "PYF",
                            "QAT",
                            "REU",
                            "ROU",
                            "RUS",
                            "RWA",
                            "SAU",
                            "SDN",
                            "SEN",
                            "SGP",
                            "SGS",
                            "SHN",
                            "SJM",
                            "SLB",
                            "SLE",
                            "SLV",
                            "SMR",
                            "SOM",
                            "SPM",
                            "SRB",
                            "SSD",
                            "STP",
                            "SUR",
                            "SVK",
                            "SVN",
                            "SWE",
                            "SWZ",
                            "SXM",
                            "SYC",
                            "SYR",
                            "TCA",
                            "TCD",
                            "TGO",
                            "THA",
                            "TJK",
                            "TKL",
                            "TKM",
                            "TLS",
                            "TON",
                            "TTO",
                            "TUN",
                            "TUR",
                            "TUV",
                            "TWN",
                            "TZA",
                            "UGA",
                            "UKR",
                            "UMI",
                            "URY",
                            "USA",
                            "UZB",
                            "VAT",
                            "VCT",
                            "VEN",
                            "VGB",
                            "VIR",
                            "VNM",
                            "VUT",
                            "WLF",
                            "WSM",
                            "YEM",
                            "ZAF",
                            "ZMB",
                            "ZWE"
                          ]
                        },
                        "administrative_area": {
                          "type": "string",
                          "description": "State / Province / Region"
                        },
                        "sub_administrative_area": {
                          "type": "string",
                          "description": "County / District"
                        },
                        "locality": {
                          "type": "string",
                          "description": "City / Town"
                        },
                        "postal_code": {
                          "type": "string",
                          "description": "Postal Code / Zip Code"
                        },
                        "thoroughfare": {
                          "type": "string",
                          "description": "Street Address"
                        },
                        "premise": {
                          "type": "string",
                          "description": "Apartment / Suite / Box number etc"
                        },
                        "sub_premise": {
                          "type": "string",
                          "description": "Floor # / Room # / Building label etc"
                        }
                      }
                    }
                  }
                },
                "input_filter": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter.json",
                  "type": "array",
                  "description": "Input Filters allow custom fields to be defined for entities",
                  "items": {
                    "type": "object",
                    "description": "Input filter specification",
                    "require": [
                      "label",
                      "key",
                      "filter",
                      "validators"
                    ],
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Human readable name"
                      },
                      "key": {
                        "type": "string",
                        "description": "Slug used to store the property",
                        "readOnly": true,
                        "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                      },
                      "filters": {
                        "type": "array",
                        "description": "A Collection of filters applied to the field",
                        "maxItems": 100,
                        "items": {
                          "anyOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/allowed.json",
                              "type": "object",
                              "description": "This filter will set the value based on a list of approved values. If the value is not in the list, it will then be set to empty unless the default option is set",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "allowed_list"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "approved_values"
                                  ],
                                  "properties": {
                                    "approved_values": {
                                      "type": "array",
                                      "minimum": 1,
                                      "maximum": 100,
                                      "description": "The list of approved values",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    },
                                    "default": {
                                      "type": "string",
                                      "description": "If this is set and the value is not in the approved_list, set the value to this",
                                      "nullable": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/camelCase.json",
                              "type": "object",
                              "description": "Make the value camelCase",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "camel"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/date.json",
                              "type": "object",
                              "description": "Filter to transform a value into a date",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "date"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "Date filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/empty.json",
                              "type": "object",
                              "description": "Filter to transform values into null. This is helpful when trying to make a value required. The following are considered empty:\n# The number 0 or 0.0\n# empty string ''\n# A boolean false\n# The word 'false'\n# ",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "empty"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "empty filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/float.json",
                              "type": "object",
                              "description": "Filter to transform a value into a float. Non numeric characters (including comma) will be removed",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "float"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "precision": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3,
                                      "description": "How many decimal places to preserve"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/kebabCase.json",
                              "type": "object",
                              "description": "Make the value kebab-case",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "kebab"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/lower.json",
                              "type": "object",
                              "description": "Make the value lowercase",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "lower"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/number.json",
                              "type": "object",
                              "description": "Filter to transform a value into a number. Non numeric characters (including comma and decimal points) will be removed",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "number"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "Number filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/prefix.json",
                              "type": "object",
                              "description": "Add a prefix to the start of a string. If the string already start with the prefix, it will not prepend.",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "prefix"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "prefix"
                                  ],
                                  "properties": {
                                    "prefix": {
                                      "type": "string",
                                      "description": "The prefix to add"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/snakeCase.json",
                              "type": "object",
                              "description": "Make the value snake_case",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "snake"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/string.json",
                              "type": "object",
                              "description": "Filter to transform a value into a string",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "string"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "String filter has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/suffix.json",
                              "description": "Add a suffix to the start of a string. If the string already start with the suffix, it will not append.",
                              "type": "object",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "suffix"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "suffix"
                                  ],
                                  "properties": {
                                    "suffix": {
                                      "type": "string",
                                      "description": "The suffix to add"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/trim.json",
                              "type": "object",
                              "description": "Filter to trim whitespace from a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "trim"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "By default will trim from the start and end",
                                  "properties": {
                                    "start": {
                                      "type": "boolean",
                                      "description": "Remove white space from the start of the string",
                                      "default": true
                                    },
                                    "end": {
                                      "type": "boolean",
                                      "description": "Remove white space from the end of the string",
                                      "default": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/upper.json",
                              "type": "object",
                              "description": "Make the value UPPERCASE",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "upper"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This filter has no options"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "validators": {
                        "type": "array",
                        "description": "A set of validators to use for this field",
                        "maxItems": 100,
                        "items": {
                          "anyOf": [
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/between.json",
                              "type": "object",
                              "description": "Validate number is between two values. By default, min and max are included",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "greater_than"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "min",
                                    "max"
                                  ],
                                  "properties": {
                                    "min": {
                                      "type": "number",
                                      "description": "Minimum value to check"
                                    },
                                    "max": {
                                      "type": "number",
                                      "description": "The maximum value to check"
                                    },
                                    "precision": {
                                      "type": "integer",
                                      "description": "When number is a float, this will set the decimal precision",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3
                                    },
                                    "include": {
                                      "type": "boolean",
                                      "description": "Include the value in the check",
                                      "default": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/blackList.json",
                              "type": "object",
                              "description": "Validate value does not match a list (black list)",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "white_list"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "list"
                                  ],
                                  "properties": {
                                    "list": {
                                      "type": "array",
                                      "minimum": 1,
                                      "maximum": 100,
                                      "description": "The list of approved values",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/contains.json",
                              "type": "object",
                              "description": "Validate string contains a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "contains"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "contains"
                                  ],
                                  "properties": {
                                    "contains": {
                                      "type": "string",
                                      "description": "String must contain with this value"
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/emailAddress.json",
                              "type": "object",
                              "description": "Validate string is a correct email address",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "email_address"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "strict": {
                                      "type": "boolean",
                                      "description": "Enforce strict standards from ARPA. This will enforce the length of the string",
                                      "default": true
                                    },
                                    "lookup": {
                                      "type": "boolean",
                                      "description": "Look up the host name and check if it has a valid MX record",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/endsWith.json",
                              "type": "object",
                              "description": "Validate string ends with a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ends_with"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "ends_with"
                                  ],
                                  "properties": {
                                    "ends_with": {
                                      "type": "string",
                                      "description": "String must end with this value"
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/equals.json",
                              "type": "object",
                              "description": "Validate number equals a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "equals"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "value"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value to compare against"
                                    },
                                    "precision": {
                                      "type": "integer",
                                      "description": "When value is a float, this will set the decimal precision",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/greaterThan.json",
                              "type": "object",
                              "description": "Validate number is greater than a value. By default, this will check if value is greater than or equals to",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "greater_than"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "value"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value to compare against"
                                    },
                                    "precision": {
                                      "type": "integer",
                                      "description": "When number is a float, this will set the decimal precision",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3
                                    },
                                    "include": {
                                      "type": "boolean",
                                      "description": "Include the value in the check",
                                      "default": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/hostname.json",
                              "type": "object",
                              "description": "Validate string has a correct DNS records",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "hostname"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "record_type": {
                                      "type": "string",
                                      "description": "DNS record type to validate",
                                      "default": "A",
                                      "enum": [
                                        "A",
                                        "AAAA",
                                        "AFSDB",
                                        "APL",
                                        "CAA",
                                        "CDNSKEY",
                                        "CDS",
                                        "CERT",
                                        "CNAME",
                                        "CSYNC",
                                        "DHCID",
                                        "DLV",
                                        "DNAME",
                                        "DNSKEY",
                                        "DS",
                                        "HIP",
                                        "IPSECKEY",
                                        "KEY",
                                        "KX",
                                        "LOC",
                                        "MX",
                                        "NAPTR",
                                        "NS",
                                        "NSEC",
                                        "NSEC3",
                                        "NSEC3PARAM",
                                        "OPENPGPKEY",
                                        "PTR",
                                        "RRSIG",
                                        "RP",
                                        "SIG",
                                        "SMIMEA",
                                        "SOA",
                                        "SRV",
                                        "SSHFP",
                                        "TA",
                                        "TKEY",
                                        "TLSA",
                                        "TSIG",
                                        "TXT",
                                        "URI"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/ipAddress.json",
                              "type": "object",
                              "description": "Validate string matches an IP address format. Defaults to matching IPv4",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "ipAddress"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "versions": {
                                      "type": "array",
                                      "description": "IP Version to match against",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "IPv4",
                                          "IPv6"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/length.json",
                              "type": "object",
                              "description": "Validate string is a certain length",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "length"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "length"
                                  ],
                                  "properties": {
                                    "length": {
                                      "type": "string",
                                      "description": "String must contain with this value"
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "Which type of length comparision to make",
                                      "default": "equals",
                                      "enum": [
                                        "equals",
                                        "less_than",
                                        "less_than_equals",
                                        "greater_than",
                                        "greater_than_equals"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/lessThan.json",
                              "type": "object",
                              "description": "Validate number is less than a value. By default, this will check if value is less than or equals to",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "lessThan"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "value"
                                  ],
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "description": "The value to compare against"
                                    },
                                    "precision": {
                                      "type": "integer",
                                      "description": "When number is a float, this will set the decimal precision",
                                      "minimum": 1,
                                      "maximum": 8,
                                      "default": 3
                                    },
                                    "include": {
                                      "type": "boolean",
                                      "description": "Include the value in the check",
                                      "default": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/macAddress.json",
                              "type": "object",
                              "description": "Validate string matches an MAC address format",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "macAddress"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "description": "This validator has no options"
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/mask.json",
                              "type": "object",
                              "description": "Validate string matches a regular expression",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "mask"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "mask"
                                  ],
                                  "properties": {
                                    "mask": {
                                      "type": "string",
                                      "description": "Mask to validate against"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/startsWith.json",
                              "type": "object",
                              "description": "Validate string starts with a value",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "startsWith"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "starts_with"
                                  ],
                                  "properties": {
                                    "starts_with": {
                                      "type": "string",
                                      "description": "String must start with this value"
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/step.json",
                              "type": "object",
                              "description": "Validates that a value follows a step. Both start and end options do not have to sync with the step. If they do not sync then find the nearest step.",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "step"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "step"
                                  ],
                                  "properties": {
                                    "step": {
                                      "type": "number",
                                      "description": "The step value"
                                    },
                                    "start": {
                                      "type": "integer",
                                      "description": "Start stepping at this value"
                                    },
                                    "end": {
                                      "type": "integer",
                                      "description": "End stepping at this value"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/uri.json",
                              "type": "object",
                              "description": "Validate string matches an URI",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "uri"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "schemes": {
                                      "type": "array",
                                      "description": "Schemes to match. By default all are matched",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "http",
                                          "https",
                                          "sip",
                                          "sips",
                                          "ftp",
                                          "ftps",
                                          "ldap",
                                          "ldaps",
                                          "file",
                                          "udp",
                                          "tcp",
                                          "urn"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/whiteList.json",
                              "type": "object",
                              "description": "Validate value matches a list (white list)",
                              "required": [
                                "type",
                                "options"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "whiteList"
                                  ]
                                },
                                "options": {
                                  "type": "object",
                                  "required": [
                                    "list"
                                  ],
                                  "properties": {
                                    "list": {
                                      "type": "array",
                                      "minimum": 1,
                                      "maximum": 100,
                                      "description": "The list of approved values",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "check_case": {
                                      "type": "boolean",
                                      "description": "Perform a case sensitive match. By default will not match case",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "current_status": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                  "type": "object",
                  "description": "Defines the properties for a status",
                  "additionalProperties": false,
                  "required": [
                    "status",
                    "category"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "A Custom label for the status",
                      "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                    },
                    "category": {
                      "type": "string",
                      "description": "The classifier for the statues",
                      "enum": [
                        "PENDING",
                        "IN_PROGRESS",
                        "VERIFYING",
                        "COMPLETE",
                        "CANCELLED",
                        "BLOCKED"
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "customer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
      "type": "object",
      "description": "Customer",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "allowed_statuses"
      ],
      "properties": {
        "customer_id": {
          "description": "Customer identifier",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "CUS"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "external_platform": {
          "type": "object",
          "description": "External Identifiers for the customer",
          "deprecated": true,
          "patternProperties": {
            "^[A-Za-z][A-Za-z0-9_]*$": {
              "type": "string"
            }
          }
        },
        "allowed_statuses": {
          "type": "array",
          "description": "List of allowed statuses",
          "uniqueItems": true,
          "items": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
            "type": "object",
            "description": "Defines the properties for a status",
            "additionalProperties": false,
            "required": [
              "status",
              "category"
            ],
            "properties": {
              "status": {
                "type": "string",
                "description": "A Custom label for the status",
                "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
              },
              "category": {
                "type": "string",
                "description": "The classifier for the statues",
                "enum": [
                  "PENDING",
                  "IN_PROGRESS",
                  "VERIFYING",
                  "COMPLETE",
                  "CANCELLED",
                  "BLOCKED"
                ]
              }
            }
          }
        },
        "total_programs": {
          "type": "number",
          "description": "Total programs under the customer"
        },
        "total_projects": {
          "type": "number",
          "description": "Total projects under the customer"
        }
      }
    },
    "inputFilter": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter.json",
      "type": "array",
      "description": "Input Filters allow custom fields to be defined for entities",
      "items": {
        "type": "object",
        "description": "Input filter specification",
        "require": [
          "label",
          "key",
          "filter",
          "validators"
        ],
        "properties": {
          "label": {
            "type": "string",
            "description": "Human readable name"
          },
          "key": {
            "type": "string",
            "description": "Slug used to store the property",
            "readOnly": true,
            "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          },
          "filters": {
            "type": "array",
            "description": "A Collection of filters applied to the field",
            "maxItems": 100,
            "items": {
              "anyOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/allowed.json",
                  "type": "object",
                  "description": "This filter will set the value based on a list of approved values. If the value is not in the list, it will then be set to empty unless the default option is set",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "allowed_list"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "approved_values"
                      ],
                      "properties": {
                        "approved_values": {
                          "type": "array",
                          "minimum": 1,
                          "maximum": 100,
                          "description": "The list of approved values",
                          "items": {
                            "type": "string"
                          }
                        },
                        "check_case": {
                          "type": "boolean",
                          "description": "Perform a case sensitive match. By default will not match case",
                          "default": false
                        },
                        "default": {
                          "type": "string",
                          "description": "If this is set and the value is not in the approved_list, set the value to this",
                          "nullable": true
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/camelCase.json",
                  "type": "object",
                  "description": "Make the value camelCase",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "camel"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "This filter has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/date.json",
                  "type": "object",
                  "description": "Filter to transform a value into a date",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "date"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "Date filter has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/empty.json",
                  "type": "object",
                  "description": "Filter to transform values into null. This is helpful when trying to make a value required. The following are considered empty:\n# The number 0 or 0.0\n# empty string ''\n# A boolean false\n# The word 'false'\n# ",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "empty"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "empty filter has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/float.json",
                  "type": "object",
                  "description": "Filter to transform a value into a float. Non numeric characters (including comma) will be removed",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "float"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "precision": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 8,
                          "default": 3,
                          "description": "How many decimal places to preserve"
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/kebabCase.json",
                  "type": "object",
                  "description": "Make the value kebab-case",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "kebab"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "This filter has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/lower.json",
                  "type": "object",
                  "description": "Make the value lowercase",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "lower"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "This filter has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/number.json",
                  "type": "object",
                  "description": "Filter to transform a value into a number. Non numeric characters (including comma and decimal points) will be removed",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "number"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "Number filter has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/prefix.json",
                  "type": "object",
                  "description": "Add a prefix to the start of a string. If the string already start with the prefix, it will not prepend.",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "prefix"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "prefix"
                      ],
                      "properties": {
                        "prefix": {
                          "type": "string",
                          "description": "The prefix to add"
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/snakeCase.json",
                  "type": "object",
                  "description": "Make the value snake_case",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "snake"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "This filter has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/string.json",
                  "type": "object",
                  "description": "Filter to transform a value into a string",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "String filter has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/suffix.json",
                  "description": "Add a suffix to the start of a string. If the string already start with the suffix, it will not append.",
                  "type": "object",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "suffix"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "suffix"
                      ],
                      "properties": {
                        "suffix": {
                          "type": "string",
                          "description": "The suffix to add"
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/trim.json",
                  "type": "object",
                  "description": "Filter to trim whitespace from a value",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "trim"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "By default will trim from the start and end",
                      "properties": {
                        "start": {
                          "type": "boolean",
                          "description": "Remove white space from the start of the string",
                          "default": true
                        },
                        "end": {
                          "type": "boolean",
                          "description": "Remove white space from the end of the string",
                          "default": true
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/upper.json",
                  "type": "object",
                  "description": "Make the value UPPERCASE",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "upper"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "This filter has no options"
                    }
                  }
                }
              ]
            }
          },
          "validators": {
            "type": "array",
            "description": "A set of validators to use for this field",
            "maxItems": 100,
            "items": {
              "anyOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/between.json",
                  "type": "object",
                  "description": "Validate number is between two values. By default, min and max are included",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "greater_than"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "min",
                        "max"
                      ],
                      "properties": {
                        "min": {
                          "type": "number",
                          "description": "Minimum value to check"
                        },
                        "max": {
                          "type": "number",
                          "description": "The maximum value to check"
                        },
                        "precision": {
                          "type": "integer",
                          "description": "When number is a float, this will set the decimal precision",
                          "minimum": 1,
                          "maximum": 8,
                          "default": 3
                        },
                        "include": {
                          "type": "boolean",
                          "description": "Include the value in the check",
                          "default": true
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/blackList.json",
                  "type": "object",
                  "description": "Validate value does not match a list (black list)",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "white_list"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "list"
                      ],
                      "properties": {
                        "list": {
                          "type": "array",
                          "minimum": 1,
                          "maximum": 100,
                          "description": "The list of approved values",
                          "items": {
                            "type": "string"
                          }
                        },
                        "check_case": {
                          "type": "boolean",
                          "description": "Perform a case sensitive match. By default will not match case",
                          "default": false
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/contains.json",
                  "type": "object",
                  "description": "Validate string contains a value",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "contains"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "contains"
                      ],
                      "properties": {
                        "contains": {
                          "type": "string",
                          "description": "String must contain with this value"
                        },
                        "check_case": {
                          "type": "boolean",
                          "description": "Perform a case sensitive match. By default will not match case",
                          "default": false
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/emailAddress.json",
                  "type": "object",
                  "description": "Validate string is a correct email address",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "email_address"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "strict": {
                          "type": "boolean",
                          "description": "Enforce strict standards from ARPA. This will enforce the length of the string",
                          "default": true
                        },
                        "lookup": {
                          "type": "boolean",
                          "description": "Look up the host name and check if it has a valid MX record",
                          "default": false
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/endsWith.json",
                  "type": "object",
                  "description": "Validate string ends with a value",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "ends_with"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "ends_with"
                      ],
                      "properties": {
                        "ends_with": {
                          "type": "string",
                          "description": "String must end with this value"
                        },
                        "check_case": {
                          "type": "boolean",
                          "description": "Perform a case sensitive match. By default will not match case",
                          "default": false
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/equals.json",
                  "type": "object",
                  "description": "Validate number equals a value",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "equals"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "type": "number",
                          "description": "The value to compare against"
                        },
                        "precision": {
                          "type": "integer",
                          "description": "When value is a float, this will set the decimal precision",
                          "minimum": 1,
                          "maximum": 8,
                          "default": 3
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/greaterThan.json",
                  "type": "object",
                  "description": "Validate number is greater than a value. By default, this will check if value is greater than or equals to",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "greater_than"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "type": "number",
                          "description": "The value to compare against"
                        },
                        "precision": {
                          "type": "integer",
                          "description": "When number is a float, this will set the decimal precision",
                          "minimum": 1,
                          "maximum": 8,
                          "default": 3
                        },
                        "include": {
                          "type": "boolean",
                          "description": "Include the value in the check",
                          "default": true
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/hostname.json",
                  "type": "object",
                  "description": "Validate string has a correct DNS records",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "hostname"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "record_type": {
                          "type": "string",
                          "description": "DNS record type to validate",
                          "default": "A",
                          "enum": [
                            "A",
                            "AAAA",
                            "AFSDB",
                            "APL",
                            "CAA",
                            "CDNSKEY",
                            "CDS",
                            "CERT",
                            "CNAME",
                            "CSYNC",
                            "DHCID",
                            "DLV",
                            "DNAME",
                            "DNSKEY",
                            "DS",
                            "HIP",
                            "IPSECKEY",
                            "KEY",
                            "KX",
                            "LOC",
                            "MX",
                            "NAPTR",
                            "NS",
                            "NSEC",
                            "NSEC3",
                            "NSEC3PARAM",
                            "OPENPGPKEY",
                            "PTR",
                            "RRSIG",
                            "RP",
                            "SIG",
                            "SMIMEA",
                            "SOA",
                            "SRV",
                            "SSHFP",
                            "TA",
                            "TKEY",
                            "TLSA",
                            "TSIG",
                            "TXT",
                            "URI"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/ipAddress.json",
                  "type": "object",
                  "description": "Validate string matches an IP address format. Defaults to matching IPv4",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "ipAddress"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "versions": {
                          "type": "array",
                          "description": "IP Version to match against",
                          "items": {
                            "type": "string",
                            "enum": [
                              "IPv4",
                              "IPv6"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/length.json",
                  "type": "object",
                  "description": "Validate string is a certain length",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "length"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "length"
                      ],
                      "properties": {
                        "length": {
                          "type": "string",
                          "description": "String must contain with this value"
                        },
                        "operator": {
                          "type": "string",
                          "description": "Which type of length comparision to make",
                          "default": "equals",
                          "enum": [
                            "equals",
                            "less_than",
                            "less_than_equals",
                            "greater_than",
                            "greater_than_equals"
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/lessThan.json",
                  "type": "object",
                  "description": "Validate number is less than a value. By default, this will check if value is less than or equals to",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "lessThan"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "type": "number",
                          "description": "The value to compare against"
                        },
                        "precision": {
                          "type": "integer",
                          "description": "When number is a float, this will set the decimal precision",
                          "minimum": 1,
                          "maximum": 8,
                          "default": 3
                        },
                        "include": {
                          "type": "boolean",
                          "description": "Include the value in the check",
                          "default": true
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/macAddress.json",
                  "type": "object",
                  "description": "Validate string matches an MAC address format",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "macAddress"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "description": "This validator has no options"
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/mask.json",
                  "type": "object",
                  "description": "Validate string matches a regular expression",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "mask"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "mask"
                      ],
                      "properties": {
                        "mask": {
                          "type": "string",
                          "description": "Mask to validate against"
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/startsWith.json",
                  "type": "object",
                  "description": "Validate string starts with a value",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "startsWith"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "starts_with"
                      ],
                      "properties": {
                        "starts_with": {
                          "type": "string",
                          "description": "String must start with this value"
                        },
                        "check_case": {
                          "type": "boolean",
                          "description": "Perform a case sensitive match. By default will not match case",
                          "default": false
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/step.json",
                  "type": "object",
                  "description": "Validates that a value follows a step. Both start and end options do not have to sync with the step. If they do not sync then find the nearest step.",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "step"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "step"
                      ],
                      "properties": {
                        "step": {
                          "type": "number",
                          "description": "The step value"
                        },
                        "start": {
                          "type": "integer",
                          "description": "Start stepping at this value"
                        },
                        "end": {
                          "type": "integer",
                          "description": "End stepping at this value"
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/uri.json",
                  "type": "object",
                  "description": "Validate string matches an URI",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "uri"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "properties": {
                        "schemes": {
                          "type": "array",
                          "description": "Schemes to match. By default all are matched",
                          "items": {
                            "type": "string",
                            "enum": [
                              "http",
                              "https",
                              "sip",
                              "sips",
                              "ftp",
                              "ftps",
                              "ldap",
                              "ldaps",
                              "file",
                              "udp",
                              "tcp",
                              "urn"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/whiteList.json",
                  "type": "object",
                  "description": "Validate value matches a list (white list)",
                  "required": [
                    "type",
                    "options"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "whiteList"
                      ]
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "list"
                      ],
                      "properties": {
                        "list": {
                          "type": "array",
                          "minimum": 1,
                          "maximum": 100,
                          "description": "The list of approved values",
                          "items": {
                            "type": "string"
                          }
                        },
                        "check_case": {
                          "type": "boolean",
                          "description": "Perform a case sensitive match. By default will not match case",
                          "default": false
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "location": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
      "type": "object",
      "description": "Defines the properties for a part unit",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "location_type",
        "address"
      ],
      "properties": {
        "location_id": {
          "description": "The identifier for the location",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "LOC"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "location_type": {
          "type": "string",
          "description": "The type of location",
          "enum": [
            "warehouse",
            "facility",
            "other"
          ]
        },
        "formatted_address": {
          "type": "string",
          "readOnly": true,
          "description": "Address formatted for the where region the location exists in"
        },
        "address": {
          "type": "object",
          "required": [
            "country",
            "administrative_area",
            "locality",
            "postal_code",
            "thoroughfare"
          ],
          "description": "xNAL address for the location ",
          "properties": {
            "country": {
              "type": "string",
              "description": "Three Letter ISO country code",
              "enum": [
                "ABW",
                "AFG",
                "AGO",
                "AIA",
                "ALA",
                "ALB",
                "AND",
                "ARE",
                "ARG",
                "ARM",
                "ASM",
                "ATA",
                "ATF",
                "ATG",
                "AUS",
                "AUT",
                "AZE",
                "BDI",
                "BEL",
                "BEN",
                "BES",
                "BFA",
                "BGD",
                "BGR",
                "BHR",
                "BHS",
                "BIH",
                "BLM",
                "BLR",
                "BLZ",
                "BMU",
                "BOL",
                "BRA",
                "BRB",
                "BRN",
                "BTN",
                "BVT",
                "BWA",
                "CAF",
                "CAN",
                "CCK",
                "CHE",
                "CHL",
                "CHN",
                "CIV",
                "CMR",
                "COD",
                "COG",
                "COK",
                "COL",
                "COM",
                "CPV",
                "CRI",
                "CUB",
                "CUW",
                "CXR",
                "CYM",
                "CYP",
                "CZE",
                "DEU",
                "DJI",
                "DMA",
                "DNK",
                "DOM",
                "DZA",
                "ECU",
                "EGY",
                "ERI",
                "ESH",
                "ESP",
                "EST",
                "ETH",
                "FIN",
                "FJI",
                "FLK",
                "FRA",
                "FRO",
                "FSM",
                "GAB",
                "GBR",
                "GEO",
                "GGY",
                "GHA",
                "GIB",
                "GIN",
                "GLP",
                "GMB",
                "GNB",
                "GNQ",
                "GRC",
                "GRD",
                "GRL",
                "GTM",
                "GUF",
                "GUM",
                "GUY",
                "HKG",
                "HMD",
                "HND",
                "HRV",
                "HTI",
                "HUN",
                "IDN",
                "IMN",
                "IND",
                "IOT",
                "IRL",
                "IRN",
                "IRQ",
                "ISL",
                "ISR",
                "ITA",
                "JAM",
                "JEY",
                "JOR",
                "JPN",
                "KAZ",
                "KEN",
                "KGZ",
                "KHM",
                "KIR",
                "KNA",
                "KOR",
                "KWT",
                "LAO",
                "LBN",
                "LBR",
                "LBY",
                "LCA",
                "LIE",
                "LKA",
                "LSO",
                "LTU",
                "LUX",
                "LVA",
                "MAC",
                "MAF",
                "MAR",
                "MCO",
                "MDA",
                "MDG",
                "MDV",
                "MEX",
                "MHL",
                "MKD",
                "MLI",
                "MLT",
                "MMR",
                "MNE",
                "MNG",
                "MNP",
                "MOZ",
                "MRT",
                "MSR",
                "MTQ",
                "MUS",
                "MWI",
                "MYS",
                "MYT",
                "NAM",
                "NCL",
                "NER",
                "NFK",
                "NGA",
                "NIC",
                "NIU",
                "NLD",
                "NOR",
                "NPL",
                "NRU",
                "NZL",
                "OMN",
                "PAK",
                "PAN",
                "PCN",
                "PER",
                "PHL",
                "PLW",
                "PNG",
                "POL",
                "PRI",
                "PRK",
                "PRT",
                "PRY",
                "PSE",
                "PYF",
                "QAT",
                "REU",
                "ROU",
                "RUS",
                "RWA",
                "SAU",
                "SDN",
                "SEN",
                "SGP",
                "SGS",
                "SHN",
                "SJM",
                "SLB",
                "SLE",
                "SLV",
                "SMR",
                "SOM",
                "SPM",
                "SRB",
                "SSD",
                "STP",
                "SUR",
                "SVK",
                "SVN",
                "SWE",
                "SWZ",
                "SXM",
                "SYC",
                "SYR",
                "TCA",
                "TCD",
                "TGO",
                "THA",
                "TJK",
                "TKL",
                "TKM",
                "TLS",
                "TON",
                "TTO",
                "TUN",
                "TUR",
                "TUV",
                "TWN",
                "TZA",
                "UGA",
                "UKR",
                "UMI",
                "URY",
                "USA",
                "UZB",
                "VAT",
                "VCT",
                "VEN",
                "VGB",
                "VIR",
                "VNM",
                "VUT",
                "WLF",
                "WSM",
                "YEM",
                "ZAF",
                "ZMB",
                "ZWE"
              ]
            },
            "administrative_area": {
              "type": "string",
              "description": "State / Province / Region"
            },
            "sub_administrative_area": {
              "type": "string",
              "description": "County / District"
            },
            "locality": {
              "type": "string",
              "description": "City / Town"
            },
            "postal_code": {
              "type": "string",
              "description": "Postal Code / Zip Code"
            },
            "thoroughfare": {
              "type": "string",
              "description": "Street Address"
            },
            "premise": {
              "type": "string",
              "description": "Apartment / Suite / Box number etc"
            },
            "sub_premise": {
              "type": "string",
              "description": "Floor # / Room # / Building label etc"
            }
          }
        }
      }
    },
    "manufacturer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/manufacturer.json",
      "type": "object",
      "description": "A Manufacturer of parts",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated"
      ],
      "properties": {
        "manufacturer_id": {
          "description": "Manufacturer identifier",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "MFR"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "note": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/note.json",
      "type": "object",
      "description": "Defines the properties for a note",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "text"
      ],
      "properties": {
        "note_id": {
          "description": "The identifier for the note",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "NOTE"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "description": "Text for the note"
        },
        "created_by": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/user.json",
          "type": "object",
          "description": "User Information",
          "additionalProperties": false,
          "properties": {
            "user_id": {
              "type": "string",
              "description": "The identifier for the user",
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Email address"
            },
            "name": {
              "type": "string",
              "description": "Human readable name"
            },
            "picture": {
              "type": "string",
              "description": "Image for the user"
            },
            "profile": {
              "type": "string",
              "description": "Link to the users profile"
            }
          }
        }
      }
    },
    "part": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/part.json",
      "type": "object",
      "description": "Defines the properties for a part",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "customer",
        "manufacturer"
      ],
      "properties": {
        "part_id": {
          "description": "Unique identifier",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "PART"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "customer": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
          "type": "object",
          "description": "Customer",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "allowed_statuses"
          ],
          "properties": {
            "customer_id": {
              "description": "Customer identifier",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "CUS"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "external_platform": {
              "type": "object",
              "description": "External Identifiers for the customer",
              "deprecated": true,
              "patternProperties": {
                "^[A-Za-z][A-Za-z0-9_]*$": {
                  "type": "string"
                }
              }
            },
            "allowed_statuses": {
              "type": "array",
              "description": "List of allowed statuses",
              "uniqueItems": true,
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                "type": "object",
                "description": "Defines the properties for a status",
                "additionalProperties": false,
                "required": [
                  "status",
                  "category"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "A Custom label for the status",
                    "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                  },
                  "category": {
                    "type": "string",
                    "description": "The classifier for the statues",
                    "enum": [
                      "PENDING",
                      "IN_PROGRESS",
                      "VERIFYING",
                      "COMPLETE",
                      "CANCELLED",
                      "BLOCKED"
                    ]
                  }
                }
              }
            },
            "total_programs": {
              "type": "number",
              "description": "Total programs under the customer"
            },
            "total_projects": {
              "type": "number",
              "description": "Total projects under the customer"
            }
          }
        },
        "manufacturer": {
          "type": "object",
          "description": "Manufacturer information for the part",
          "required": [
            "part_number"
          ],
          "properties": {
            "part_number": {
              "type": "string",
              "description": "Manufacturer part number"
            }
          },
          "allOf": [
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/manufacturer.json",
              "type": "object",
              "description": "A Manufacturer of parts",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated"
              ],
              "properties": {
                "manufacturer_id": {
                  "description": "Manufacturer identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "MFR"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "serial_prefix": {
          "type": "string",
          "description": "A serial number prefix for the part"
        },
        "input_filter": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter.json",
          "type": "array",
          "description": "Input Filters allow custom fields to be defined for entities",
          "items": {
            "type": "object",
            "description": "Input filter specification",
            "require": [
              "label",
              "key",
              "filter",
              "validators"
            ],
            "properties": {
              "label": {
                "type": "string",
                "description": "Human readable name"
              },
              "key": {
                "type": "string",
                "description": "Slug used to store the property",
                "readOnly": true,
                "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
              },
              "filters": {
                "type": "array",
                "description": "A Collection of filters applied to the field",
                "maxItems": 100,
                "items": {
                  "anyOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/allowed.json",
                      "type": "object",
                      "description": "This filter will set the value based on a list of approved values. If the value is not in the list, it will then be set to empty unless the default option is set",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "allowed_list"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "approved_values"
                          ],
                          "properties": {
                            "approved_values": {
                              "type": "array",
                              "minimum": 1,
                              "maximum": 100,
                              "description": "The list of approved values",
                              "items": {
                                "type": "string"
                              }
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            },
                            "default": {
                              "type": "string",
                              "description": "If this is set and the value is not in the approved_list, set the value to this",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/camelCase.json",
                      "type": "object",
                      "description": "Make the value camelCase",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "camel"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/date.json",
                      "type": "object",
                      "description": "Filter to transform a value into a date",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "date"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "Date filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/empty.json",
                      "type": "object",
                      "description": "Filter to transform values into null. This is helpful when trying to make a value required. The following are considered empty:\n# The number 0 or 0.0\n# empty string ''\n# A boolean false\n# The word 'false'\n# ",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "empty"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "empty filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/float.json",
                      "type": "object",
                      "description": "Filter to transform a value into a float. Non numeric characters (including comma) will be removed",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "float"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "precision": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3,
                              "description": "How many decimal places to preserve"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/kebabCase.json",
                      "type": "object",
                      "description": "Make the value kebab-case",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "kebab"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/lower.json",
                      "type": "object",
                      "description": "Make the value lowercase",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "lower"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/number.json",
                      "type": "object",
                      "description": "Filter to transform a value into a number. Non numeric characters (including comma and decimal points) will be removed",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "number"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "Number filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/prefix.json",
                      "type": "object",
                      "description": "Add a prefix to the start of a string. If the string already start with the prefix, it will not prepend.",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "prefix"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "string",
                              "description": "The prefix to add"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/snakeCase.json",
                      "type": "object",
                      "description": "Make the value snake_case",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "snake"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/string.json",
                      "type": "object",
                      "description": "Filter to transform a value into a string",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "string"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "String filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/suffix.json",
                      "description": "Add a suffix to the start of a string. If the string already start with the suffix, it will not append.",
                      "type": "object",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "suffix"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "suffix"
                          ],
                          "properties": {
                            "suffix": {
                              "type": "string",
                              "description": "The suffix to add"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/trim.json",
                      "type": "object",
                      "description": "Filter to trim whitespace from a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "trim"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "By default will trim from the start and end",
                          "properties": {
                            "start": {
                              "type": "boolean",
                              "description": "Remove white space from the start of the string",
                              "default": true
                            },
                            "end": {
                              "type": "boolean",
                              "description": "Remove white space from the end of the string",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/upper.json",
                      "type": "object",
                      "description": "Make the value UPPERCASE",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "upper"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    }
                  ]
                }
              },
              "validators": {
                "type": "array",
                "description": "A set of validators to use for this field",
                "maxItems": 100,
                "items": {
                  "anyOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/between.json",
                      "type": "object",
                      "description": "Validate number is between two values. By default, min and max are included",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "greater_than"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "min",
                            "max"
                          ],
                          "properties": {
                            "min": {
                              "type": "number",
                              "description": "Minimum value to check"
                            },
                            "max": {
                              "type": "number",
                              "description": "The maximum value to check"
                            },
                            "precision": {
                              "type": "integer",
                              "description": "When number is a float, this will set the decimal precision",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3
                            },
                            "include": {
                              "type": "boolean",
                              "description": "Include the value in the check",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/blackList.json",
                      "type": "object",
                      "description": "Validate value does not match a list (black list)",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "white_list"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "list"
                          ],
                          "properties": {
                            "list": {
                              "type": "array",
                              "minimum": 1,
                              "maximum": 100,
                              "description": "The list of approved values",
                              "items": {
                                "type": "string"
                              }
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/contains.json",
                      "type": "object",
                      "description": "Validate string contains a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "contains"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "contains"
                          ],
                          "properties": {
                            "contains": {
                              "type": "string",
                              "description": "String must contain with this value"
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/emailAddress.json",
                      "type": "object",
                      "description": "Validate string is a correct email address",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "email_address"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "strict": {
                              "type": "boolean",
                              "description": "Enforce strict standards from ARPA. This will enforce the length of the string",
                              "default": true
                            },
                            "lookup": {
                              "type": "boolean",
                              "description": "Look up the host name and check if it has a valid MX record",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/endsWith.json",
                      "type": "object",
                      "description": "Validate string ends with a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "ends_with"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "ends_with"
                          ],
                          "properties": {
                            "ends_with": {
                              "type": "string",
                              "description": "String must end with this value"
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/equals.json",
                      "type": "object",
                      "description": "Validate number equals a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "equals"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value to compare against"
                            },
                            "precision": {
                              "type": "integer",
                              "description": "When value is a float, this will set the decimal precision",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/greaterThan.json",
                      "type": "object",
                      "description": "Validate number is greater than a value. By default, this will check if value is greater than or equals to",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "greater_than"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value to compare against"
                            },
                            "precision": {
                              "type": "integer",
                              "description": "When number is a float, this will set the decimal precision",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3
                            },
                            "include": {
                              "type": "boolean",
                              "description": "Include the value in the check",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/hostname.json",
                      "type": "object",
                      "description": "Validate string has a correct DNS records",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "hostname"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "record_type": {
                              "type": "string",
                              "description": "DNS record type to validate",
                              "default": "A",
                              "enum": [
                                "A",
                                "AAAA",
                                "AFSDB",
                                "APL",
                                "CAA",
                                "CDNSKEY",
                                "CDS",
                                "CERT",
                                "CNAME",
                                "CSYNC",
                                "DHCID",
                                "DLV",
                                "DNAME",
                                "DNSKEY",
                                "DS",
                                "HIP",
                                "IPSECKEY",
                                "KEY",
                                "KX",
                                "LOC",
                                "MX",
                                "NAPTR",
                                "NS",
                                "NSEC",
                                "NSEC3",
                                "NSEC3PARAM",
                                "OPENPGPKEY",
                                "PTR",
                                "RRSIG",
                                "RP",
                                "SIG",
                                "SMIMEA",
                                "SOA",
                                "SRV",
                                "SSHFP",
                                "TA",
                                "TKEY",
                                "TLSA",
                                "TSIG",
                                "TXT",
                                "URI"
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/ipAddress.json",
                      "type": "object",
                      "description": "Validate string matches an IP address format. Defaults to matching IPv4",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "ipAddress"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "versions": {
                              "type": "array",
                              "description": "IP Version to match against",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "IPv4",
                                  "IPv6"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/length.json",
                      "type": "object",
                      "description": "Validate string is a certain length",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "length"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "length"
                          ],
                          "properties": {
                            "length": {
                              "type": "string",
                              "description": "String must contain with this value"
                            },
                            "operator": {
                              "type": "string",
                              "description": "Which type of length comparision to make",
                              "default": "equals",
                              "enum": [
                                "equals",
                                "less_than",
                                "less_than_equals",
                                "greater_than",
                                "greater_than_equals"
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/lessThan.json",
                      "type": "object",
                      "description": "Validate number is less than a value. By default, this will check if value is less than or equals to",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "lessThan"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value to compare against"
                            },
                            "precision": {
                              "type": "integer",
                              "description": "When number is a float, this will set the decimal precision",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3
                            },
                            "include": {
                              "type": "boolean",
                              "description": "Include the value in the check",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/macAddress.json",
                      "type": "object",
                      "description": "Validate string matches an MAC address format",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "macAddress"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This validator has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/mask.json",
                      "type": "object",
                      "description": "Validate string matches a regular expression",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "mask"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "mask"
                          ],
                          "properties": {
                            "mask": {
                              "type": "string",
                              "description": "Mask to validate against"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/startsWith.json",
                      "type": "object",
                      "description": "Validate string starts with a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "startsWith"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "starts_with"
                          ],
                          "properties": {
                            "starts_with": {
                              "type": "string",
                              "description": "String must start with this value"
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/step.json",
                      "type": "object",
                      "description": "Validates that a value follows a step. Both start and end options do not have to sync with the step. If they do not sync then find the nearest step.",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "step"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "step"
                          ],
                          "properties": {
                            "step": {
                              "type": "number",
                              "description": "The step value"
                            },
                            "start": {
                              "type": "integer",
                              "description": "Start stepping at this value"
                            },
                            "end": {
                              "type": "integer",
                              "description": "End stepping at this value"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/uri.json",
                      "type": "object",
                      "description": "Validate string matches an URI",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "uri"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "schemes": {
                              "type": "array",
                              "description": "Schemes to match. By default all are matched",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "http",
                                  "https",
                                  "sip",
                                  "sips",
                                  "ftp",
                                  "ftps",
                                  "ldap",
                                  "ldaps",
                                  "file",
                                  "udp",
                                  "tcp",
                                  "urn"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/whiteList.json",
                      "type": "object",
                      "description": "Validate value matches a list (white list)",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "whiteList"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "list"
                          ],
                          "properties": {
                            "list": {
                              "type": "array",
                              "minimum": 1,
                              "maximum": 100,
                              "description": "The list of approved values",
                              "items": {
                                "type": "string"
                              }
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "program": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/program.json",
      "type": "object",
      "description": "Defines the properties for a program",
      "additionalProperties": false,
      "required": [
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "customer",
        "allowed_statuses"
      ],
      "properties": {
        "program_id": {
          "description": "Unique identifier",
          "type": "string",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "PGM"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "start_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "description": "Start date"
        },
        "end_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "description": "End date"
        },
        "customer": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
          "type": "object",
          "description": "Customer",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "allowed_statuses"
          ],
          "properties": {
            "customer_id": {
              "description": "Customer identifier",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "CUS"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "external_platform": {
              "type": "object",
              "description": "External Identifiers for the customer",
              "deprecated": true,
              "patternProperties": {
                "^[A-Za-z][A-Za-z0-9_]*$": {
                  "type": "string"
                }
              }
            },
            "allowed_statuses": {
              "type": "array",
              "description": "List of allowed statuses",
              "uniqueItems": true,
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                "type": "object",
                "description": "Defines the properties for a status",
                "additionalProperties": false,
                "required": [
                  "status",
                  "category"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "A Custom label for the status",
                    "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                  },
                  "category": {
                    "type": "string",
                    "description": "The classifier for the statues",
                    "enum": [
                      "PENDING",
                      "IN_PROGRESS",
                      "VERIFYING",
                      "COMPLETE",
                      "CANCELLED",
                      "BLOCKED"
                    ]
                  }
                }
              }
            },
            "total_programs": {
              "type": "number",
              "description": "Total programs under the customer"
            },
            "total_projects": {
              "type": "number",
              "description": "Total projects under the customer"
            }
          }
        },
        "allowed_statuses": {
          "type": "array",
          "description": "List of allowed statuses",
          "uniqueItems": true,
          "items": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
            "type": "object",
            "description": "Defines the properties for a status",
            "additionalProperties": false,
            "required": [
              "status",
              "category"
            ],
            "properties": {
              "status": {
                "type": "string",
                "description": "A Custom label for the status",
                "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
              },
              "category": {
                "type": "string",
                "description": "The classifier for the statues",
                "enum": [
                  "PENDING",
                  "IN_PROGRESS",
                  "VERIFYING",
                  "COMPLETE",
                  "CANCELLED",
                  "BLOCKED"
                ]
              }
            }
          }
        }
      },
      "allOf": [
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/dateRange.json",
          "type": "object",
          "description": "Active date range for an entity",
          "properties": {
            "start_date": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time",
              "description": "Start date"
            },
            "end_date": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time",
              "description": "End date"
            }
          }
        }
      ]
    },
    "project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/project.json",
      "type": "object",
      "description": "Defines the properties for a project",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "customer",
        "program",
        "allowed_statuses"
      ],
      "properties": {
        "project_id": {
          "type": "string",
          "description": "Unique identifier",
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "PRJ"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "customer": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
          "type": "object",
          "description": "Customer",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "allowed_statuses"
          ],
          "properties": {
            "customer_id": {
              "description": "Customer identifier",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "CUS"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "external_platform": {
              "type": "object",
              "description": "External Identifiers for the customer",
              "deprecated": true,
              "patternProperties": {
                "^[A-Za-z][A-Za-z0-9_]*$": {
                  "type": "string"
                }
              }
            },
            "allowed_statuses": {
              "type": "array",
              "description": "List of allowed statuses",
              "uniqueItems": true,
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                "type": "object",
                "description": "Defines the properties for a status",
                "additionalProperties": false,
                "required": [
                  "status",
                  "category"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "A Custom label for the status",
                    "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                  },
                  "category": {
                    "type": "string",
                    "description": "The classifier for the statues",
                    "enum": [
                      "PENDING",
                      "IN_PROGRESS",
                      "VERIFYING",
                      "COMPLETE",
                      "CANCELLED",
                      "BLOCKED"
                    ]
                  }
                }
              }
            },
            "total_programs": {
              "type": "number",
              "description": "Total programs under the customer"
            },
            "total_projects": {
              "type": "number",
              "description": "Total projects under the customer"
            }
          }
        },
        "program": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/program.json",
          "type": "object",
          "description": "Defines the properties for a program",
          "additionalProperties": false,
          "required": [
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "customer",
            "allowed_statuses"
          ],
          "properties": {
            "program_id": {
              "description": "Unique identifier",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "PGM"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "start_date": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time",
              "description": "Start date"
            },
            "end_date": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time",
              "description": "End date"
            },
            "customer": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
              "type": "object",
              "description": "Customer",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "allowed_statuses"
              ],
              "properties": {
                "customer_id": {
                  "description": "Customer identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "CUS"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "external_platform": {
                  "type": "object",
                  "description": "External Identifiers for the customer",
                  "deprecated": true,
                  "patternProperties": {
                    "^[A-Za-z][A-Za-z0-9_]*$": {
                      "type": "string"
                    }
                  }
                },
                "allowed_statuses": {
                  "type": "array",
                  "description": "List of allowed statuses",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                    "type": "object",
                    "description": "Defines the properties for a status",
                    "additionalProperties": false,
                    "required": [
                      "status",
                      "category"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "A Custom label for the status",
                        "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                      },
                      "category": {
                        "type": "string",
                        "description": "The classifier for the statues",
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "VERIFYING",
                          "COMPLETE",
                          "CANCELLED",
                          "BLOCKED"
                        ]
                      }
                    }
                  }
                },
                "total_programs": {
                  "type": "number",
                  "description": "Total programs under the customer"
                },
                "total_projects": {
                  "type": "number",
                  "description": "Total projects under the customer"
                }
              }
            },
            "allowed_statuses": {
              "type": "array",
              "description": "List of allowed statuses",
              "uniqueItems": true,
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                "type": "object",
                "description": "Defines the properties for a status",
                "additionalProperties": false,
                "required": [
                  "status",
                  "category"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "A Custom label for the status",
                    "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                  },
                  "category": {
                    "type": "string",
                    "description": "The classifier for the statues",
                    "enum": [
                      "PENDING",
                      "IN_PROGRESS",
                      "VERIFYING",
                      "COMPLETE",
                      "CANCELLED",
                      "BLOCKED"
                    ]
                  }
                }
              }
            }
          },
          "allOf": [
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/dateRange.json",
              "type": "object",
              "description": "Active date range for an entity",
              "properties": {
                "start_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Start date"
                },
                "end_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "End date"
                }
              }
            }
          ]
        },
        "allowed_statuses": {
          "type": "array",
          "description": "List of allowed statuses",
          "uniqueItems": true,
          "items": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
            "type": "object",
            "description": "Defines the properties for a status",
            "additionalProperties": false,
            "required": [
              "status",
              "category"
            ],
            "properties": {
              "status": {
                "type": "string",
                "description": "A Custom label for the status",
                "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
              },
              "category": {
                "type": "string",
                "description": "The classifier for the statues",
                "enum": [
                  "PENDING",
                  "IN_PROGRESS",
                  "VERIFYING",
                  "COMPLETE",
                  "CANCELLED",
                  "BLOCKED"
                ]
              }
            }
          }
        },
        "start_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "description": "Start date"
        },
        "end_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "description": "End date"
        }
      },
      "allOf": [
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/entityCommon.json",
          "type": "object",
          "description": "Common Properties to all entities",
          "required": [
            "label"
          ],
          "properties": {
            "entity_id": {
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            }
          }
        }
      ]
    },
    "queue": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/queue.json",
      "type": "object",
      "description": "Defines the properties for a location queue",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "location"
      ],
      "properties": {
        "queue_id": {
          "type": "string",
          "description": "The identifier for the queue",
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "QUE"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "location": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
          "type": "object",
          "description": "Defines the properties for a part unit",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "location_type",
            "address"
          ],
          "properties": {
            "location_id": {
              "description": "The identifier for the location",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "LOC"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "location_type": {
              "type": "string",
              "description": "The type of location",
              "enum": [
                "warehouse",
                "facility",
                "other"
              ]
            },
            "formatted_address": {
              "type": "string",
              "readOnly": true,
              "description": "Address formatted for the where region the location exists in"
            },
            "address": {
              "type": "object",
              "required": [
                "country",
                "administrative_area",
                "locality",
                "postal_code",
                "thoroughfare"
              ],
              "description": "xNAL address for the location ",
              "properties": {
                "country": {
                  "type": "string",
                  "description": "Three Letter ISO country code",
                  "enum": [
                    "ABW",
                    "AFG",
                    "AGO",
                    "AIA",
                    "ALA",
                    "ALB",
                    "AND",
                    "ARE",
                    "ARG",
                    "ARM",
                    "ASM",
                    "ATA",
                    "ATF",
                    "ATG",
                    "AUS",
                    "AUT",
                    "AZE",
                    "BDI",
                    "BEL",
                    "BEN",
                    "BES",
                    "BFA",
                    "BGD",
                    "BGR",
                    "BHR",
                    "BHS",
                    "BIH",
                    "BLM",
                    "BLR",
                    "BLZ",
                    "BMU",
                    "BOL",
                    "BRA",
                    "BRB",
                    "BRN",
                    "BTN",
                    "BVT",
                    "BWA",
                    "CAF",
                    "CAN",
                    "CCK",
                    "CHE",
                    "CHL",
                    "CHN",
                    "CIV",
                    "CMR",
                    "COD",
                    "COG",
                    "COK",
                    "COL",
                    "COM",
                    "CPV",
                    "CRI",
                    "CUB",
                    "CUW",
                    "CXR",
                    "CYM",
                    "CYP",
                    "CZE",
                    "DEU",
                    "DJI",
                    "DMA",
                    "DNK",
                    "DOM",
                    "DZA",
                    "ECU",
                    "EGY",
                    "ERI",
                    "ESH",
                    "ESP",
                    "EST",
                    "ETH",
                    "FIN",
                    "FJI",
                    "FLK",
                    "FRA",
                    "FRO",
                    "FSM",
                    "GAB",
                    "GBR",
                    "GEO",
                    "GGY",
                    "GHA",
                    "GIB",
                    "GIN",
                    "GLP",
                    "GMB",
                    "GNB",
                    "GNQ",
                    "GRC",
                    "GRD",
                    "GRL",
                    "GTM",
                    "GUF",
                    "GUM",
                    "GUY",
                    "HKG",
                    "HMD",
                    "HND",
                    "HRV",
                    "HTI",
                    "HUN",
                    "IDN",
                    "IMN",
                    "IND",
                    "IOT",
                    "IRL",
                    "IRN",
                    "IRQ",
                    "ISL",
                    "ISR",
                    "ITA",
                    "JAM",
                    "JEY",
                    "JOR",
                    "JPN",
                    "KAZ",
                    "KEN",
                    "KGZ",
                    "KHM",
                    "KIR",
                    "KNA",
                    "KOR",
                    "KWT",
                    "LAO",
                    "LBN",
                    "LBR",
                    "LBY",
                    "LCA",
                    "LIE",
                    "LKA",
                    "LSO",
                    "LTU",
                    "LUX",
                    "LVA",
                    "MAC",
                    "MAF",
                    "MAR",
                    "MCO",
                    "MDA",
                    "MDG",
                    "MDV",
                    "MEX",
                    "MHL",
                    "MKD",
                    "MLI",
                    "MLT",
                    "MMR",
                    "MNE",
                    "MNG",
                    "MNP",
                    "MOZ",
                    "MRT",
                    "MSR",
                    "MTQ",
                    "MUS",
                    "MWI",
                    "MYS",
                    "MYT",
                    "NAM",
                    "NCL",
                    "NER",
                    "NFK",
                    "NGA",
                    "NIC",
                    "NIU",
                    "NLD",
                    "NOR",
                    "NPL",
                    "NRU",
                    "NZL",
                    "OMN",
                    "PAK",
                    "PAN",
                    "PCN",
                    "PER",
                    "PHL",
                    "PLW",
                    "PNG",
                    "POL",
                    "PRI",
                    "PRK",
                    "PRT",
                    "PRY",
                    "PSE",
                    "PYF",
                    "QAT",
                    "REU",
                    "ROU",
                    "RUS",
                    "RWA",
                    "SAU",
                    "SDN",
                    "SEN",
                    "SGP",
                    "SGS",
                    "SHN",
                    "SJM",
                    "SLB",
                    "SLE",
                    "SLV",
                    "SMR",
                    "SOM",
                    "SPM",
                    "SRB",
                    "SSD",
                    "STP",
                    "SUR",
                    "SVK",
                    "SVN",
                    "SWE",
                    "SWZ",
                    "SXM",
                    "SYC",
                    "SYR",
                    "TCA",
                    "TCD",
                    "TGO",
                    "THA",
                    "TJK",
                    "TKL",
                    "TKM",
                    "TLS",
                    "TON",
                    "TTO",
                    "TUN",
                    "TUR",
                    "TUV",
                    "TWN",
                    "TZA",
                    "UGA",
                    "UKR",
                    "UMI",
                    "URY",
                    "USA",
                    "UZB",
                    "VAT",
                    "VCT",
                    "VEN",
                    "VGB",
                    "VIR",
                    "VNM",
                    "VUT",
                    "WLF",
                    "WSM",
                    "YEM",
                    "ZAF",
                    "ZMB",
                    "ZWE"
                  ]
                },
                "administrative_area": {
                  "type": "string",
                  "description": "State / Province / Region"
                },
                "sub_administrative_area": {
                  "type": "string",
                  "description": "County / District"
                },
                "locality": {
                  "type": "string",
                  "description": "City / Town"
                },
                "postal_code": {
                  "type": "string",
                  "description": "Postal Code / Zip Code"
                },
                "thoroughfare": {
                  "type": "string",
                  "description": "Street Address"
                },
                "premise": {
                  "type": "string",
                  "description": "Apartment / Suite / Box number etc"
                },
                "sub_premise": {
                  "type": "string",
                  "description": "Floor # / Room # / Building label etc"
                }
              }
            }
          }
        },
        "priority": {
          "type": "integer",
          "description": "Priority level for queue",
          "minimum": 0
        },
        "total_work_orders": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/cycle.json",
          "type": "object",
          "readOnly": true,
          "additionalProperties": false,
          "properties": {
            "pending": {
              "type": "integer",
              "description": "The number of cycles pending",
              "readOnly": true
            },
            "in_progress": {
              "type": "integer",
              "description": "The number of cycles in progress",
              "readOnly": true
            },
            "verifying": {
              "type": "integer",
              "description": "The number of cycles verifying",
              "readOnly": true
            },
            "complete": {
              "type": "integer",
              "description": "The number of cycles complete",
              "readOnly": true
            },
            "blocked": {
              "type": "integer",
              "description": "The number of cycles blocked",
              "readOnly": true
            },
            "cancelled": {
              "type": "integer",
              "description": "The number of cycles cancelled",
              "readOnly": true
            }
          }
        },
        "total_batches": {
          "type": "integer",
          "description": "Number of batches assigned to the queue",
          "readOnly": true
        }
      }
    },
    "resource": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/resource.json",
      "type": "object",
      "description": "Defines the properties for a resource",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "resource_type",
        "location"
      ],
      "properties": {
        "resource_id": {
          "type": "string",
          "description": "The identifier for the resource",
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "resource_type": {
          "type": "string",
          "description": "Used to group resources together. Extensions or reports can then use the type for their needs. MUST be kebab-cased",
          "pattern": "^[a-z][0-9a-zA-Z-]+$"
        },
        "meta": {
          "type": "object",
          "description": "Data for the resource as a key value pair",
          "additionalProperties": {
            "type": "string"
          },
          "propertyNames": {
            "pattern": "^[A-Za-z][A-Za-z0-9_]*$"
          }
        },
        "location": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
          "type": "object",
          "description": "Defines the properties for a part unit",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "location_type",
            "address"
          ],
          "properties": {
            "location_id": {
              "description": "The identifier for the location",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "LOC"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "location_type": {
              "type": "string",
              "description": "The type of location",
              "enum": [
                "warehouse",
                "facility",
                "other"
              ]
            },
            "formatted_address": {
              "type": "string",
              "readOnly": true,
              "description": "Address formatted for the where region the location exists in"
            },
            "address": {
              "type": "object",
              "required": [
                "country",
                "administrative_area",
                "locality",
                "postal_code",
                "thoroughfare"
              ],
              "description": "xNAL address for the location ",
              "properties": {
                "country": {
                  "type": "string",
                  "description": "Three Letter ISO country code",
                  "enum": [
                    "ABW",
                    "AFG",
                    "AGO",
                    "AIA",
                    "ALA",
                    "ALB",
                    "AND",
                    "ARE",
                    "ARG",
                    "ARM",
                    "ASM",
                    "ATA",
                    "ATF",
                    "ATG",
                    "AUS",
                    "AUT",
                    "AZE",
                    "BDI",
                    "BEL",
                    "BEN",
                    "BES",
                    "BFA",
                    "BGD",
                    "BGR",
                    "BHR",
                    "BHS",
                    "BIH",
                    "BLM",
                    "BLR",
                    "BLZ",
                    "BMU",
                    "BOL",
                    "BRA",
                    "BRB",
                    "BRN",
                    "BTN",
                    "BVT",
                    "BWA",
                    "CAF",
                    "CAN",
                    "CCK",
                    "CHE",
                    "CHL",
                    "CHN",
                    "CIV",
                    "CMR",
                    "COD",
                    "COG",
                    "COK",
                    "COL",
                    "COM",
                    "CPV",
                    "CRI",
                    "CUB",
                    "CUW",
                    "CXR",
                    "CYM",
                    "CYP",
                    "CZE",
                    "DEU",
                    "DJI",
                    "DMA",
                    "DNK",
                    "DOM",
                    "DZA",
                    "ECU",
                    "EGY",
                    "ERI",
                    "ESH",
                    "ESP",
                    "EST",
                    "ETH",
                    "FIN",
                    "FJI",
                    "FLK",
                    "FRA",
                    "FRO",
                    "FSM",
                    "GAB",
                    "GBR",
                    "GEO",
                    "GGY",
                    "GHA",
                    "GIB",
                    "GIN",
                    "GLP",
                    "GMB",
                    "GNB",
                    "GNQ",
                    "GRC",
                    "GRD",
                    "GRL",
                    "GTM",
                    "GUF",
                    "GUM",
                    "GUY",
                    "HKG",
                    "HMD",
                    "HND",
                    "HRV",
                    "HTI",
                    "HUN",
                    "IDN",
                    "IMN",
                    "IND",
                    "IOT",
                    "IRL",
                    "IRN",
                    "IRQ",
                    "ISL",
                    "ISR",
                    "ITA",
                    "JAM",
                    "JEY",
                    "JOR",
                    "JPN",
                    "KAZ",
                    "KEN",
                    "KGZ",
                    "KHM",
                    "KIR",
                    "KNA",
                    "KOR",
                    "KWT",
                    "LAO",
                    "LBN",
                    "LBR",
                    "LBY",
                    "LCA",
                    "LIE",
                    "LKA",
                    "LSO",
                    "LTU",
                    "LUX",
                    "LVA",
                    "MAC",
                    "MAF",
                    "MAR",
                    "MCO",
                    "MDA",
                    "MDG",
                    "MDV",
                    "MEX",
                    "MHL",
                    "MKD",
                    "MLI",
                    "MLT",
                    "MMR",
                    "MNE",
                    "MNG",
                    "MNP",
                    "MOZ",
                    "MRT",
                    "MSR",
                    "MTQ",
                    "MUS",
                    "MWI",
                    "MYS",
                    "MYT",
                    "NAM",
                    "NCL",
                    "NER",
                    "NFK",
                    "NGA",
                    "NIC",
                    "NIU",
                    "NLD",
                    "NOR",
                    "NPL",
                    "NRU",
                    "NZL",
                    "OMN",
                    "PAK",
                    "PAN",
                    "PCN",
                    "PER",
                    "PHL",
                    "PLW",
                    "PNG",
                    "POL",
                    "PRI",
                    "PRK",
                    "PRT",
                    "PRY",
                    "PSE",
                    "PYF",
                    "QAT",
                    "REU",
                    "ROU",
                    "RUS",
                    "RWA",
                    "SAU",
                    "SDN",
                    "SEN",
                    "SGP",
                    "SGS",
                    "SHN",
                    "SJM",
                    "SLB",
                    "SLE",
                    "SLV",
                    "SMR",
                    "SOM",
                    "SPM",
                    "SRB",
                    "SSD",
                    "STP",
                    "SUR",
                    "SVK",
                    "SVN",
                    "SWE",
                    "SWZ",
                    "SXM",
                    "SYC",
                    "SYR",
                    "TCA",
                    "TCD",
                    "TGO",
                    "THA",
                    "TJK",
                    "TKL",
                    "TKM",
                    "TLS",
                    "TON",
                    "TTO",
                    "TUN",
                    "TUR",
                    "TUV",
                    "TWN",
                    "TZA",
                    "UGA",
                    "UKR",
                    "UMI",
                    "URY",
                    "USA",
                    "UZB",
                    "VAT",
                    "VCT",
                    "VEN",
                    "VGB",
                    "VIR",
                    "VNM",
                    "VUT",
                    "WLF",
                    "WSM",
                    "YEM",
                    "ZAF",
                    "ZMB",
                    "ZWE"
                  ]
                },
                "administrative_area": {
                  "type": "string",
                  "description": "State / Province / Region"
                },
                "sub_administrative_area": {
                  "type": "string",
                  "description": "County / District"
                },
                "locality": {
                  "type": "string",
                  "description": "City / Town"
                },
                "postal_code": {
                  "type": "string",
                  "description": "Postal Code / Zip Code"
                },
                "thoroughfare": {
                  "type": "string",
                  "description": "Street Address"
                },
                "premise": {
                  "type": "string",
                  "description": "Apartment / Suite / Box number etc"
                },
                "sub_premise": {
                  "type": "string",
                  "description": "Floor # / Room # / Building label etc"
                }
              }
            }
          }
        },
        "resource": {
          "type": "object",
          "description": "The parent resource if this is a child resource",
          "properties": {
            "resource_id": {
              "type": "string",
              "description": "The identifier for the resource",
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "RES"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "resource_type": {
              "type": "string",
              "description": "Used to group resources together. Extensions or reports can then use the type for their needs. MUST be kebab-cased",
              "pattern": "^[a-z][0-9a-zA-Z-]+$"
            },
            "meta": {
              "type": "object",
              "description": "Data for the resource as a key value pair",
              "additionalProperties": {
                "type": "string"
              },
              "propertyNames": {
                "pattern": "^[A-Za-z][A-Za-z0-9_]*$"
              }
            },
            "location": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
              "type": "object",
              "description": "Defines the properties for a part unit",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "location_type",
                "address"
              ],
              "properties": {
                "location_id": {
                  "description": "The identifier for the location",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "LOC"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "location_type": {
                  "type": "string",
                  "description": "The type of location",
                  "enum": [
                    "warehouse",
                    "facility",
                    "other"
                  ]
                },
                "formatted_address": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Address formatted for the where region the location exists in"
                },
                "address": {
                  "type": "object",
                  "required": [
                    "country",
                    "administrative_area",
                    "locality",
                    "postal_code",
                    "thoroughfare"
                  ],
                  "description": "xNAL address for the location ",
                  "properties": {
                    "country": {
                      "type": "string",
                      "description": "Three Letter ISO country code",
                      "enum": [
                        "ABW",
                        "AFG",
                        "AGO",
                        "AIA",
                        "ALA",
                        "ALB",
                        "AND",
                        "ARE",
                        "ARG",
                        "ARM",
                        "ASM",
                        "ATA",
                        "ATF",
                        "ATG",
                        "AUS",
                        "AUT",
                        "AZE",
                        "BDI",
                        "BEL",
                        "BEN",
                        "BES",
                        "BFA",
                        "BGD",
                        "BGR",
                        "BHR",
                        "BHS",
                        "BIH",
                        "BLM",
                        "BLR",
                        "BLZ",
                        "BMU",
                        "BOL",
                        "BRA",
                        "BRB",
                        "BRN",
                        "BTN",
                        "BVT",
                        "BWA",
                        "CAF",
                        "CAN",
                        "CCK",
                        "CHE",
                        "CHL",
                        "CHN",
                        "CIV",
                        "CMR",
                        "COD",
                        "COG",
                        "COK",
                        "COL",
                        "COM",
                        "CPV",
                        "CRI",
                        "CUB",
                        "CUW",
                        "CXR",
                        "CYM",
                        "CYP",
                        "CZE",
                        "DEU",
                        "DJI",
                        "DMA",
                        "DNK",
                        "DOM",
                        "DZA",
                        "ECU",
                        "EGY",
                        "ERI",
                        "ESH",
                        "ESP",
                        "EST",
                        "ETH",
                        "FIN",
                        "FJI",
                        "FLK",
                        "FRA",
                        "FRO",
                        "FSM",
                        "GAB",
                        "GBR",
                        "GEO",
                        "GGY",
                        "GHA",
                        "GIB",
                        "GIN",
                        "GLP",
                        "GMB",
                        "GNB",
                        "GNQ",
                        "GRC",
                        "GRD",
                        "GRL",
                        "GTM",
                        "GUF",
                        "GUM",
                        "GUY",
                        "HKG",
                        "HMD",
                        "HND",
                        "HRV",
                        "HTI",
                        "HUN",
                        "IDN",
                        "IMN",
                        "IND",
                        "IOT",
                        "IRL",
                        "IRN",
                        "IRQ",
                        "ISL",
                        "ISR",
                        "ITA",
                        "JAM",
                        "JEY",
                        "JOR",
                        "JPN",
                        "KAZ",
                        "KEN",
                        "KGZ",
                        "KHM",
                        "KIR",
                        "KNA",
                        "KOR",
                        "KWT",
                        "LAO",
                        "LBN",
                        "LBR",
                        "LBY",
                        "LCA",
                        "LIE",
                        "LKA",
                        "LSO",
                        "LTU",
                        "LUX",
                        "LVA",
                        "MAC",
                        "MAF",
                        "MAR",
                        "MCO",
                        "MDA",
                        "MDG",
                        "MDV",
                        "MEX",
                        "MHL",
                        "MKD",
                        "MLI",
                        "MLT",
                        "MMR",
                        "MNE",
                        "MNG",
                        "MNP",
                        "MOZ",
                        "MRT",
                        "MSR",
                        "MTQ",
                        "MUS",
                        "MWI",
                        "MYS",
                        "MYT",
                        "NAM",
                        "NCL",
                        "NER",
                        "NFK",
                        "NGA",
                        "NIC",
                        "NIU",
                        "NLD",
                        "NOR",
                        "NPL",
                        "NRU",
                        "NZL",
                        "OMN",
                        "PAK",
                        "PAN",
                        "PCN",
                        "PER",
                        "PHL",
                        "PLW",
                        "PNG",
                        "POL",
                        "PRI",
                        "PRK",
                        "PRT",
                        "PRY",
                        "PSE",
                        "PYF",
                        "QAT",
                        "REU",
                        "ROU",
                        "RUS",
                        "RWA",
                        "SAU",
                        "SDN",
                        "SEN",
                        "SGP",
                        "SGS",
                        "SHN",
                        "SJM",
                        "SLB",
                        "SLE",
                        "SLV",
                        "SMR",
                        "SOM",
                        "SPM",
                        "SRB",
                        "SSD",
                        "STP",
                        "SUR",
                        "SVK",
                        "SVN",
                        "SWE",
                        "SWZ",
                        "SXM",
                        "SYC",
                        "SYR",
                        "TCA",
                        "TCD",
                        "TGO",
                        "THA",
                        "TJK",
                        "TKL",
                        "TKM",
                        "TLS",
                        "TON",
                        "TTO",
                        "TUN",
                        "TUR",
                        "TUV",
                        "TWN",
                        "TZA",
                        "UGA",
                        "UKR",
                        "UMI",
                        "URY",
                        "USA",
                        "UZB",
                        "VAT",
                        "VCT",
                        "VEN",
                        "VGB",
                        "VIR",
                        "VNM",
                        "VUT",
                        "WLF",
                        "WSM",
                        "YEM",
                        "ZAF",
                        "ZMB",
                        "ZWE"
                      ]
                    },
                    "administrative_area": {
                      "type": "string",
                      "description": "State / Province / Region"
                    },
                    "sub_administrative_area": {
                      "type": "string",
                      "description": "County / District"
                    },
                    "locality": {
                      "type": "string",
                      "description": "City / Town"
                    },
                    "postal_code": {
                      "type": "string",
                      "description": "Postal Code / Zip Code"
                    },
                    "thoroughfare": {
                      "type": "string",
                      "description": "Street Address"
                    },
                    "premise": {
                      "type": "string",
                      "description": "Apartment / Suite / Box number etc"
                    },
                    "sub_premise": {
                      "type": "string",
                      "description": "Floor # / Room # / Building label etc"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
      "type": "object",
      "description": "Defines the properties for a status",
      "additionalProperties": false,
      "required": [
        "status",
        "category"
      ],
      "properties": {
        "status": {
          "type": "string",
          "description": "A Custom label for the status",
          "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
        },
        "category": {
          "type": "string",
          "description": "The classifier for the statues",
          "enum": [
            "PENDING",
            "IN_PROGRESS",
            "VERIFYING",
            "COMPLETE",
            "CANCELLED",
            "BLOCKED"
          ]
        }
      }
    },
    "unit": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/unit.json",
      "type": "object",
      "description": "Defines the properties for a unit",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "part"
      ],
      "properties": {
        "unit_id": {
          "type": "string",
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "UNIT"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "serial_number": {
          "type": "string",
          "description": "Serial number of the unit with prefix stripped",
          "readOnly": true
        },
        "raw_serial_number": {
          "type": "string",
          "description": "Serial number of the unit"
        },
        "tenant_part_number": {
          "type": "string",
          "description": "Identifier set by the tenant"
        },
        "manufacturer": {
          "description": "The manufacturer that makes this unit",
          "type": "object",
          "properties": {
            "part_number": {
              "type": "string",
              "description": "The part number supplied by the manufacturer"
            }
          },
          "allOf": [
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/manufacturer.json",
              "type": "object",
              "description": "A Manufacturer of parts",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated"
              ],
              "properties": {
                "manufacturer_id": {
                  "description": "Manufacturer identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "MFR"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "vendor": {
          "type": "object",
          "description": "The vendor that sold this unit",
          "properties": {
            "part_number": {
              "type": "string",
              "description": "The part number supplied by the vendor"
            }
          },
          "allOf": [
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/vendor.json",
              "type": "object",
              "description": "A Vendor which sells parts",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated"
              ],
              "properties": {
                "vendor_id": {
                  "type": "string",
                  "description": "unique id",
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "VEN"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "part": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/part.json",
          "type": "object",
          "description": "Defines the properties for a part",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "customer",
            "manufacturer"
          ],
          "properties": {
            "part_id": {
              "description": "Unique identifier",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "PART"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "customer": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
              "type": "object",
              "description": "Customer",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "allowed_statuses"
              ],
              "properties": {
                "customer_id": {
                  "description": "Customer identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "CUS"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "external_platform": {
                  "type": "object",
                  "description": "External Identifiers for the customer",
                  "deprecated": true,
                  "patternProperties": {
                    "^[A-Za-z][A-Za-z0-9_]*$": {
                      "type": "string"
                    }
                  }
                },
                "allowed_statuses": {
                  "type": "array",
                  "description": "List of allowed statuses",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                    "type": "object",
                    "description": "Defines the properties for a status",
                    "additionalProperties": false,
                    "required": [
                      "status",
                      "category"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "A Custom label for the status",
                        "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                      },
                      "category": {
                        "type": "string",
                        "description": "The classifier for the statues",
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "VERIFYING",
                          "COMPLETE",
                          "CANCELLED",
                          "BLOCKED"
                        ]
                      }
                    }
                  }
                },
                "total_programs": {
                  "type": "number",
                  "description": "Total programs under the customer"
                },
                "total_projects": {
                  "type": "number",
                  "description": "Total projects under the customer"
                }
              }
            },
            "manufacturer": {
              "type": "object",
              "description": "Manufacturer information for the part",
              "required": [
                "part_number"
              ],
              "properties": {
                "part_number": {
                  "type": "string",
                  "description": "Manufacturer part number"
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/manufacturer.json",
                  "type": "object",
                  "description": "A Manufacturer of parts",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated"
                  ],
                  "properties": {
                    "manufacturer_id": {
                      "description": "Manufacturer identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "MFR"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "serial_prefix": {
              "type": "string",
              "description": "A serial number prefix for the part"
            },
            "input_filter": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter.json",
              "type": "array",
              "description": "Input Filters allow custom fields to be defined for entities",
              "items": {
                "type": "object",
                "description": "Input filter specification",
                "require": [
                  "label",
                  "key",
                  "filter",
                  "validators"
                ],
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "Human readable name"
                  },
                  "key": {
                    "type": "string",
                    "description": "Slug used to store the property",
                    "readOnly": true,
                    "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                  },
                  "filters": {
                    "type": "array",
                    "description": "A Collection of filters applied to the field",
                    "maxItems": 100,
                    "items": {
                      "anyOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/allowed.json",
                          "type": "object",
                          "description": "This filter will set the value based on a list of approved values. If the value is not in the list, it will then be set to empty unless the default option is set",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "allowed_list"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "approved_values"
                              ],
                              "properties": {
                                "approved_values": {
                                  "type": "array",
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "The list of approved values",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "check_case": {
                                  "type": "boolean",
                                  "description": "Perform a case sensitive match. By default will not match case",
                                  "default": false
                                },
                                "default": {
                                  "type": "string",
                                  "description": "If this is set and the value is not in the approved_list, set the value to this",
                                  "nullable": true
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/camelCase.json",
                          "type": "object",
                          "description": "Make the value camelCase",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "camel"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "This filter has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/date.json",
                          "type": "object",
                          "description": "Filter to transform a value into a date",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "date"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "Date filter has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/empty.json",
                          "type": "object",
                          "description": "Filter to transform values into null. This is helpful when trying to make a value required. The following are considered empty:\n# The number 0 or 0.0\n# empty string ''\n# A boolean false\n# The word 'false'\n# ",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "empty"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "empty filter has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/float.json",
                          "type": "object",
                          "description": "Filter to transform a value into a float. Non numeric characters (including comma) will be removed",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "float"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "properties": {
                                "precision": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 8,
                                  "default": 3,
                                  "description": "How many decimal places to preserve"
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/kebabCase.json",
                          "type": "object",
                          "description": "Make the value kebab-case",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "kebab"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "This filter has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/lower.json",
                          "type": "object",
                          "description": "Make the value lowercase",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "lower"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "This filter has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/number.json",
                          "type": "object",
                          "description": "Filter to transform a value into a number. Non numeric characters (including comma and decimal points) will be removed",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "number"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "Number filter has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/prefix.json",
                          "type": "object",
                          "description": "Add a prefix to the start of a string. If the string already start with the prefix, it will not prepend.",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "prefix"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "prefix"
                              ],
                              "properties": {
                                "prefix": {
                                  "type": "string",
                                  "description": "The prefix to add"
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/snakeCase.json",
                          "type": "object",
                          "description": "Make the value snake_case",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "snake"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "This filter has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/string.json",
                          "type": "object",
                          "description": "Filter to transform a value into a string",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "string"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "String filter has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/suffix.json",
                          "description": "Add a suffix to the start of a string. If the string already start with the suffix, it will not append.",
                          "type": "object",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "suffix"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "suffix"
                              ],
                              "properties": {
                                "suffix": {
                                  "type": "string",
                                  "description": "The suffix to add"
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/trim.json",
                          "type": "object",
                          "description": "Filter to trim whitespace from a value",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "trim"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "By default will trim from the start and end",
                              "properties": {
                                "start": {
                                  "type": "boolean",
                                  "description": "Remove white space from the start of the string",
                                  "default": true
                                },
                                "end": {
                                  "type": "boolean",
                                  "description": "Remove white space from the end of the string",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/upper.json",
                          "type": "object",
                          "description": "Make the value UPPERCASE",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "upper"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "This filter has no options"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "validators": {
                    "type": "array",
                    "description": "A set of validators to use for this field",
                    "maxItems": 100,
                    "items": {
                      "anyOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/between.json",
                          "type": "object",
                          "description": "Validate number is between two values. By default, min and max are included",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "greater_than"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "min",
                                "max"
                              ],
                              "properties": {
                                "min": {
                                  "type": "number",
                                  "description": "Minimum value to check"
                                },
                                "max": {
                                  "type": "number",
                                  "description": "The maximum value to check"
                                },
                                "precision": {
                                  "type": "integer",
                                  "description": "When number is a float, this will set the decimal precision",
                                  "minimum": 1,
                                  "maximum": 8,
                                  "default": 3
                                },
                                "include": {
                                  "type": "boolean",
                                  "description": "Include the value in the check",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/blackList.json",
                          "type": "object",
                          "description": "Validate value does not match a list (black list)",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "white_list"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "list"
                              ],
                              "properties": {
                                "list": {
                                  "type": "array",
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "The list of approved values",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "check_case": {
                                  "type": "boolean",
                                  "description": "Perform a case sensitive match. By default will not match case",
                                  "default": false
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/contains.json",
                          "type": "object",
                          "description": "Validate string contains a value",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "contains"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "contains"
                              ],
                              "properties": {
                                "contains": {
                                  "type": "string",
                                  "description": "String must contain with this value"
                                },
                                "check_case": {
                                  "type": "boolean",
                                  "description": "Perform a case sensitive match. By default will not match case",
                                  "default": false
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/emailAddress.json",
                          "type": "object",
                          "description": "Validate string is a correct email address",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "email_address"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "properties": {
                                "strict": {
                                  "type": "boolean",
                                  "description": "Enforce strict standards from ARPA. This will enforce the length of the string",
                                  "default": true
                                },
                                "lookup": {
                                  "type": "boolean",
                                  "description": "Look up the host name and check if it has a valid MX record",
                                  "default": false
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/endsWith.json",
                          "type": "object",
                          "description": "Validate string ends with a value",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ends_with"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "ends_with"
                              ],
                              "properties": {
                                "ends_with": {
                                  "type": "string",
                                  "description": "String must end with this value"
                                },
                                "check_case": {
                                  "type": "boolean",
                                  "description": "Perform a case sensitive match. By default will not match case",
                                  "default": false
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/equals.json",
                          "type": "object",
                          "description": "Validate number equals a value",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "equals"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "value"
                              ],
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "The value to compare against"
                                },
                                "precision": {
                                  "type": "integer",
                                  "description": "When value is a float, this will set the decimal precision",
                                  "minimum": 1,
                                  "maximum": 8,
                                  "default": 3
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/greaterThan.json",
                          "type": "object",
                          "description": "Validate number is greater than a value. By default, this will check if value is greater than or equals to",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "greater_than"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "value"
                              ],
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "The value to compare against"
                                },
                                "precision": {
                                  "type": "integer",
                                  "description": "When number is a float, this will set the decimal precision",
                                  "minimum": 1,
                                  "maximum": 8,
                                  "default": 3
                                },
                                "include": {
                                  "type": "boolean",
                                  "description": "Include the value in the check",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/hostname.json",
                          "type": "object",
                          "description": "Validate string has a correct DNS records",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "hostname"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "properties": {
                                "record_type": {
                                  "type": "string",
                                  "description": "DNS record type to validate",
                                  "default": "A",
                                  "enum": [
                                    "A",
                                    "AAAA",
                                    "AFSDB",
                                    "APL",
                                    "CAA",
                                    "CDNSKEY",
                                    "CDS",
                                    "CERT",
                                    "CNAME",
                                    "CSYNC",
                                    "DHCID",
                                    "DLV",
                                    "DNAME",
                                    "DNSKEY",
                                    "DS",
                                    "HIP",
                                    "IPSECKEY",
                                    "KEY",
                                    "KX",
                                    "LOC",
                                    "MX",
                                    "NAPTR",
                                    "NS",
                                    "NSEC",
                                    "NSEC3",
                                    "NSEC3PARAM",
                                    "OPENPGPKEY",
                                    "PTR",
                                    "RRSIG",
                                    "RP",
                                    "SIG",
                                    "SMIMEA",
                                    "SOA",
                                    "SRV",
                                    "SSHFP",
                                    "TA",
                                    "TKEY",
                                    "TLSA",
                                    "TSIG",
                                    "TXT",
                                    "URI"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/ipAddress.json",
                          "type": "object",
                          "description": "Validate string matches an IP address format. Defaults to matching IPv4",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ipAddress"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "properties": {
                                "versions": {
                                  "type": "array",
                                  "description": "IP Version to match against",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "IPv4",
                                      "IPv6"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/length.json",
                          "type": "object",
                          "description": "Validate string is a certain length",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "length"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "length"
                              ],
                              "properties": {
                                "length": {
                                  "type": "string",
                                  "description": "String must contain with this value"
                                },
                                "operator": {
                                  "type": "string",
                                  "description": "Which type of length comparision to make",
                                  "default": "equals",
                                  "enum": [
                                    "equals",
                                    "less_than",
                                    "less_than_equals",
                                    "greater_than",
                                    "greater_than_equals"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/lessThan.json",
                          "type": "object",
                          "description": "Validate number is less than a value. By default, this will check if value is less than or equals to",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "lessThan"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "value"
                              ],
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "description": "The value to compare against"
                                },
                                "precision": {
                                  "type": "integer",
                                  "description": "When number is a float, this will set the decimal precision",
                                  "minimum": 1,
                                  "maximum": 8,
                                  "default": 3
                                },
                                "include": {
                                  "type": "boolean",
                                  "description": "Include the value in the check",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/macAddress.json",
                          "type": "object",
                          "description": "Validate string matches an MAC address format",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "macAddress"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "This validator has no options"
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/mask.json",
                          "type": "object",
                          "description": "Validate string matches a regular expression",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "mask"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "mask"
                              ],
                              "properties": {
                                "mask": {
                                  "type": "string",
                                  "description": "Mask to validate against"
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/startsWith.json",
                          "type": "object",
                          "description": "Validate string starts with a value",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "startsWith"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "starts_with"
                              ],
                              "properties": {
                                "starts_with": {
                                  "type": "string",
                                  "description": "String must start with this value"
                                },
                                "check_case": {
                                  "type": "boolean",
                                  "description": "Perform a case sensitive match. By default will not match case",
                                  "default": false
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/step.json",
                          "type": "object",
                          "description": "Validates that a value follows a step. Both start and end options do not have to sync with the step. If they do not sync then find the nearest step.",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "step"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "step"
                              ],
                              "properties": {
                                "step": {
                                  "type": "number",
                                  "description": "The step value"
                                },
                                "start": {
                                  "type": "integer",
                                  "description": "Start stepping at this value"
                                },
                                "end": {
                                  "type": "integer",
                                  "description": "End stepping at this value"
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/uri.json",
                          "type": "object",
                          "description": "Validate string matches an URI",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "uri"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "properties": {
                                "schemes": {
                                  "type": "array",
                                  "description": "Schemes to match. By default all are matched",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "http",
                                      "https",
                                      "sip",
                                      "sips",
                                      "ftp",
                                      "ftps",
                                      "ldap",
                                      "ldaps",
                                      "file",
                                      "udp",
                                      "tcp",
                                      "urn"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/whiteList.json",
                          "type": "object",
                          "description": "Validate value matches a list (white list)",
                          "required": [
                            "type",
                            "options"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "whiteList"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "required": [
                                "list"
                              ],
                              "properties": {
                                "list": {
                                  "type": "array",
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "The list of approved values",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "check_case": {
                                  "type": "boolean",
                                  "description": "Perform a case sensitive match. By default will not match case",
                                  "default": false
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "customer": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
          "type": "object",
          "description": "Customer",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "allowed_statuses"
          ],
          "properties": {
            "customer_id": {
              "description": "Customer identifier",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "CUS"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "external_platform": {
              "type": "object",
              "description": "External Identifiers for the customer",
              "deprecated": true,
              "patternProperties": {
                "^[A-Za-z][A-Za-z0-9_]*$": {
                  "type": "string"
                }
              }
            },
            "allowed_statuses": {
              "type": "array",
              "description": "List of allowed statuses",
              "uniqueItems": true,
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                "type": "object",
                "description": "Defines the properties for a status",
                "additionalProperties": false,
                "required": [
                  "status",
                  "category"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "A Custom label for the status",
                    "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                  },
                  "category": {
                    "type": "string",
                    "description": "The classifier for the statues",
                    "enum": [
                      "PENDING",
                      "IN_PROGRESS",
                      "VERIFYING",
                      "COMPLETE",
                      "CANCELLED",
                      "BLOCKED"
                    ]
                  }
                }
              }
            },
            "total_programs": {
              "type": "number",
              "description": "Total programs under the customer"
            },
            "total_projects": {
              "type": "number",
              "description": "Total projects under the customer"
            }
          }
        },
        "current_location": {
          "deprecated": true,
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
          "type": "object",
          "description": "Defines the properties for a part unit",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "location_type",
            "address"
          ],
          "properties": {
            "location_id": {
              "description": "The identifier for the location",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "LOC"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "location_type": {
              "type": "string",
              "description": "The type of location",
              "enum": [
                "warehouse",
                "facility",
                "other"
              ]
            },
            "formatted_address": {
              "type": "string",
              "readOnly": true,
              "description": "Address formatted for the where region the location exists in"
            },
            "address": {
              "type": "object",
              "required": [
                "country",
                "administrative_area",
                "locality",
                "postal_code",
                "thoroughfare"
              ],
              "description": "xNAL address for the location ",
              "properties": {
                "country": {
                  "type": "string",
                  "description": "Three Letter ISO country code",
                  "enum": [
                    "ABW",
                    "AFG",
                    "AGO",
                    "AIA",
                    "ALA",
                    "ALB",
                    "AND",
                    "ARE",
                    "ARG",
                    "ARM",
                    "ASM",
                    "ATA",
                    "ATF",
                    "ATG",
                    "AUS",
                    "AUT",
                    "AZE",
                    "BDI",
                    "BEL",
                    "BEN",
                    "BES",
                    "BFA",
                    "BGD",
                    "BGR",
                    "BHR",
                    "BHS",
                    "BIH",
                    "BLM",
                    "BLR",
                    "BLZ",
                    "BMU",
                    "BOL",
                    "BRA",
                    "BRB",
                    "BRN",
                    "BTN",
                    "BVT",
                    "BWA",
                    "CAF",
                    "CAN",
                    "CCK",
                    "CHE",
                    "CHL",
                    "CHN",
                    "CIV",
                    "CMR",
                    "COD",
                    "COG",
                    "COK",
                    "COL",
                    "COM",
                    "CPV",
                    "CRI",
                    "CUB",
                    "CUW",
                    "CXR",
                    "CYM",
                    "CYP",
                    "CZE",
                    "DEU",
                    "DJI",
                    "DMA",
                    "DNK",
                    "DOM",
                    "DZA",
                    "ECU",
                    "EGY",
                    "ERI",
                    "ESH",
                    "ESP",
                    "EST",
                    "ETH",
                    "FIN",
                    "FJI",
                    "FLK",
                    "FRA",
                    "FRO",
                    "FSM",
                    "GAB",
                    "GBR",
                    "GEO",
                    "GGY",
                    "GHA",
                    "GIB",
                    "GIN",
                    "GLP",
                    "GMB",
                    "GNB",
                    "GNQ",
                    "GRC",
                    "GRD",
                    "GRL",
                    "GTM",
                    "GUF",
                    "GUM",
                    "GUY",
                    "HKG",
                    "HMD",
                    "HND",
                    "HRV",
                    "HTI",
                    "HUN",
                    "IDN",
                    "IMN",
                    "IND",
                    "IOT",
                    "IRL",
                    "IRN",
                    "IRQ",
                    "ISL",
                    "ISR",
                    "ITA",
                    "JAM",
                    "JEY",
                    "JOR",
                    "JPN",
                    "KAZ",
                    "KEN",
                    "KGZ",
                    "KHM",
                    "KIR",
                    "KNA",
                    "KOR",
                    "KWT",
                    "LAO",
                    "LBN",
                    "LBR",
                    "LBY",
                    "LCA",
                    "LIE",
                    "LKA",
                    "LSO",
                    "LTU",
                    "LUX",
                    "LVA",
                    "MAC",
                    "MAF",
                    "MAR",
                    "MCO",
                    "MDA",
                    "MDG",
                    "MDV",
                    "MEX",
                    "MHL",
                    "MKD",
                    "MLI",
                    "MLT",
                    "MMR",
                    "MNE",
                    "MNG",
                    "MNP",
                    "MOZ",
                    "MRT",
                    "MSR",
                    "MTQ",
                    "MUS",
                    "MWI",
                    "MYS",
                    "MYT",
                    "NAM",
                    "NCL",
                    "NER",
                    "NFK",
                    "NGA",
                    "NIC",
                    "NIU",
                    "NLD",
                    "NOR",
                    "NPL",
                    "NRU",
                    "NZL",
                    "OMN",
                    "PAK",
                    "PAN",
                    "PCN",
                    "PER",
                    "PHL",
                    "PLW",
                    "PNG",
                    "POL",
                    "PRI",
                    "PRK",
                    "PRT",
                    "PRY",
                    "PSE",
                    "PYF",
                    "QAT",
                    "REU",
                    "ROU",
                    "RUS",
                    "RWA",
                    "SAU",
                    "SDN",
                    "SEN",
                    "SGP",
                    "SGS",
                    "SHN",
                    "SJM",
                    "SLB",
                    "SLE",
                    "SLV",
                    "SMR",
                    "SOM",
                    "SPM",
                    "SRB",
                    "SSD",
                    "STP",
                    "SUR",
                    "SVK",
                    "SVN",
                    "SWE",
                    "SWZ",
                    "SXM",
                    "SYC",
                    "SYR",
                    "TCA",
                    "TCD",
                    "TGO",
                    "THA",
                    "TJK",
                    "TKL",
                    "TKM",
                    "TLS",
                    "TON",
                    "TTO",
                    "TUN",
                    "TUR",
                    "TUV",
                    "TWN",
                    "TZA",
                    "UGA",
                    "UKR",
                    "UMI",
                    "URY",
                    "USA",
                    "UZB",
                    "VAT",
                    "VCT",
                    "VEN",
                    "VGB",
                    "VIR",
                    "VNM",
                    "VUT",
                    "WLF",
                    "WSM",
                    "YEM",
                    "ZAF",
                    "ZMB",
                    "ZWE"
                  ]
                },
                "administrative_area": {
                  "type": "string",
                  "description": "State / Province / Region"
                },
                "sub_administrative_area": {
                  "type": "string",
                  "description": "County / District"
                },
                "locality": {
                  "type": "string",
                  "description": "City / Town"
                },
                "postal_code": {
                  "type": "string",
                  "description": "Postal Code / Zip Code"
                },
                "thoroughfare": {
                  "type": "string",
                  "description": "Street Address"
                },
                "premise": {
                  "type": "string",
                  "description": "Apartment / Suite / Box number etc"
                },
                "sub_premise": {
                  "type": "string",
                  "description": "Floor # / Room # / Building label etc"
                }
              }
            }
          }
        },
        "location": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/location.json",
          "type": "object",
          "description": "Defines the properties for a part unit",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "location_type",
            "address"
          ],
          "properties": {
            "location_id": {
              "description": "The identifier for the location",
              "type": "string",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "LOC"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "location_type": {
              "type": "string",
              "description": "The type of location",
              "enum": [
                "warehouse",
                "facility",
                "other"
              ]
            },
            "formatted_address": {
              "type": "string",
              "readOnly": true,
              "description": "Address formatted for the where region the location exists in"
            },
            "address": {
              "type": "object",
              "required": [
                "country",
                "administrative_area",
                "locality",
                "postal_code",
                "thoroughfare"
              ],
              "description": "xNAL address for the location ",
              "properties": {
                "country": {
                  "type": "string",
                  "description": "Three Letter ISO country code",
                  "enum": [
                    "ABW",
                    "AFG",
                    "AGO",
                    "AIA",
                    "ALA",
                    "ALB",
                    "AND",
                    "ARE",
                    "ARG",
                    "ARM",
                    "ASM",
                    "ATA",
                    "ATF",
                    "ATG",
                    "AUS",
                    "AUT",
                    "AZE",
                    "BDI",
                    "BEL",
                    "BEN",
                    "BES",
                    "BFA",
                    "BGD",
                    "BGR",
                    "BHR",
                    "BHS",
                    "BIH",
                    "BLM",
                    "BLR",
                    "BLZ",
                    "BMU",
                    "BOL",
                    "BRA",
                    "BRB",
                    "BRN",
                    "BTN",
                    "BVT",
                    "BWA",
                    "CAF",
                    "CAN",
                    "CCK",
                    "CHE",
                    "CHL",
                    "CHN",
                    "CIV",
                    "CMR",
                    "COD",
                    "COG",
                    "COK",
                    "COL",
                    "COM",
                    "CPV",
                    "CRI",
                    "CUB",
                    "CUW",
                    "CXR",
                    "CYM",
                    "CYP",
                    "CZE",
                    "DEU",
                    "DJI",
                    "DMA",
                    "DNK",
                    "DOM",
                    "DZA",
                    "ECU",
                    "EGY",
                    "ERI",
                    "ESH",
                    "ESP",
                    "EST",
                    "ETH",
                    "FIN",
                    "FJI",
                    "FLK",
                    "FRA",
                    "FRO",
                    "FSM",
                    "GAB",
                    "GBR",
                    "GEO",
                    "GGY",
                    "GHA",
                    "GIB",
                    "GIN",
                    "GLP",
                    "GMB",
                    "GNB",
                    "GNQ",
                    "GRC",
                    "GRD",
                    "GRL",
                    "GTM",
                    "GUF",
                    "GUM",
                    "GUY",
                    "HKG",
                    "HMD",
                    "HND",
                    "HRV",
                    "HTI",
                    "HUN",
                    "IDN",
                    "IMN",
                    "IND",
                    "IOT",
                    "IRL",
                    "IRN",
                    "IRQ",
                    "ISL",
                    "ISR",
                    "ITA",
                    "JAM",
                    "JEY",
                    "JOR",
                    "JPN",
                    "KAZ",
                    "KEN",
                    "KGZ",
                    "KHM",
                    "KIR",
                    "KNA",
                    "KOR",
                    "KWT",
                    "LAO",
                    "LBN",
                    "LBR",
                    "LBY",
                    "LCA",
                    "LIE",
                    "LKA",
                    "LSO",
                    "LTU",
                    "LUX",
                    "LVA",
                    "MAC",
                    "MAF",
                    "MAR",
                    "MCO",
                    "MDA",
                    "MDG",
                    "MDV",
                    "MEX",
                    "MHL",
                    "MKD",
                    "MLI",
                    "MLT",
                    "MMR",
                    "MNE",
                    "MNG",
                    "MNP",
                    "MOZ",
                    "MRT",
                    "MSR",
                    "MTQ",
                    "MUS",
                    "MWI",
                    "MYS",
                    "MYT",
                    "NAM",
                    "NCL",
                    "NER",
                    "NFK",
                    "NGA",
                    "NIC",
                    "NIU",
                    "NLD",
                    "NOR",
                    "NPL",
                    "NRU",
                    "NZL",
                    "OMN",
                    "PAK",
                    "PAN",
                    "PCN",
                    "PER",
                    "PHL",
                    "PLW",
                    "PNG",
                    "POL",
                    "PRI",
                    "PRK",
                    "PRT",
                    "PRY",
                    "PSE",
                    "PYF",
                    "QAT",
                    "REU",
                    "ROU",
                    "RUS",
                    "RWA",
                    "SAU",
                    "SDN",
                    "SEN",
                    "SGP",
                    "SGS",
                    "SHN",
                    "SJM",
                    "SLB",
                    "SLE",
                    "SLV",
                    "SMR",
                    "SOM",
                    "SPM",
                    "SRB",
                    "SSD",
                    "STP",
                    "SUR",
                    "SVK",
                    "SVN",
                    "SWE",
                    "SWZ",
                    "SXM",
                    "SYC",
                    "SYR",
                    "TCA",
                    "TCD",
                    "TGO",
                    "THA",
                    "TJK",
                    "TKL",
                    "TKM",
                    "TLS",
                    "TON",
                    "TTO",
                    "TUN",
                    "TUR",
                    "TUV",
                    "TWN",
                    "TZA",
                    "UGA",
                    "UKR",
                    "UMI",
                    "URY",
                    "USA",
                    "UZB",
                    "VAT",
                    "VCT",
                    "VEN",
                    "VGB",
                    "VIR",
                    "VNM",
                    "VUT",
                    "WLF",
                    "WSM",
                    "YEM",
                    "ZAF",
                    "ZMB",
                    "ZWE"
                  ]
                },
                "administrative_area": {
                  "type": "string",
                  "description": "State / Province / Region"
                },
                "sub_administrative_area": {
                  "type": "string",
                  "description": "County / District"
                },
                "locality": {
                  "type": "string",
                  "description": "City / Town"
                },
                "postal_code": {
                  "type": "string",
                  "description": "Postal Code / Zip Code"
                },
                "thoroughfare": {
                  "type": "string",
                  "description": "Street Address"
                },
                "premise": {
                  "type": "string",
                  "description": "Apartment / Suite / Box number etc"
                },
                "sub_premise": {
                  "type": "string",
                  "description": "Floor # / Room # / Building label etc"
                }
              }
            }
          }
        },
        "input_filter": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter.json",
          "type": "array",
          "description": "Input Filters allow custom fields to be defined for entities",
          "items": {
            "type": "object",
            "description": "Input filter specification",
            "require": [
              "label",
              "key",
              "filter",
              "validators"
            ],
            "properties": {
              "label": {
                "type": "string",
                "description": "Human readable name"
              },
              "key": {
                "type": "string",
                "description": "Slug used to store the property",
                "readOnly": true,
                "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
              },
              "filters": {
                "type": "array",
                "description": "A Collection of filters applied to the field",
                "maxItems": 100,
                "items": {
                  "anyOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/allowed.json",
                      "type": "object",
                      "description": "This filter will set the value based on a list of approved values. If the value is not in the list, it will then be set to empty unless the default option is set",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "allowed_list"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "approved_values"
                          ],
                          "properties": {
                            "approved_values": {
                              "type": "array",
                              "minimum": 1,
                              "maximum": 100,
                              "description": "The list of approved values",
                              "items": {
                                "type": "string"
                              }
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            },
                            "default": {
                              "type": "string",
                              "description": "If this is set and the value is not in the approved_list, set the value to this",
                              "nullable": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/camelCase.json",
                      "type": "object",
                      "description": "Make the value camelCase",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "camel"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/date.json",
                      "type": "object",
                      "description": "Filter to transform a value into a date",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "date"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "Date filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/empty.json",
                      "type": "object",
                      "description": "Filter to transform values into null. This is helpful when trying to make a value required. The following are considered empty:\n# The number 0 or 0.0\n# empty string ''\n# A boolean false\n# The word 'false'\n# ",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "empty"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "empty filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/float.json",
                      "type": "object",
                      "description": "Filter to transform a value into a float. Non numeric characters (including comma) will be removed",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "float"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "precision": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3,
                              "description": "How many decimal places to preserve"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/kebabCase.json",
                      "type": "object",
                      "description": "Make the value kebab-case",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "kebab"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/lower.json",
                      "type": "object",
                      "description": "Make the value lowercase",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "lower"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/number.json",
                      "type": "object",
                      "description": "Filter to transform a value into a number. Non numeric characters (including comma and decimal points) will be removed",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "number"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "Number filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/prefix.json",
                      "type": "object",
                      "description": "Add a prefix to the start of a string. If the string already start with the prefix, it will not prepend.",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "prefix"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "prefix"
                          ],
                          "properties": {
                            "prefix": {
                              "type": "string",
                              "description": "The prefix to add"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/snakeCase.json",
                      "type": "object",
                      "description": "Make the value snake_case",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "snake"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/string.json",
                      "type": "object",
                      "description": "Filter to transform a value into a string",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "string"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "String filter has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/suffix.json",
                      "description": "Add a suffix to the start of a string. If the string already start with the suffix, it will not append.",
                      "type": "object",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "suffix"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "suffix"
                          ],
                          "properties": {
                            "suffix": {
                              "type": "string",
                              "description": "The suffix to add"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/trim.json",
                      "type": "object",
                      "description": "Filter to trim whitespace from a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "trim"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "By default will trim from the start and end",
                          "properties": {
                            "start": {
                              "type": "boolean",
                              "description": "Remove white space from the start of the string",
                              "default": true
                            },
                            "end": {
                              "type": "boolean",
                              "description": "Remove white space from the end of the string",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/filters/upper.json",
                      "type": "object",
                      "description": "Make the value UPPERCASE",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "upper"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This filter has no options"
                        }
                      }
                    }
                  ]
                }
              },
              "validators": {
                "type": "array",
                "description": "A set of validators to use for this field",
                "maxItems": 100,
                "items": {
                  "anyOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/between.json",
                      "type": "object",
                      "description": "Validate number is between two values. By default, min and max are included",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "greater_than"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "min",
                            "max"
                          ],
                          "properties": {
                            "min": {
                              "type": "number",
                              "description": "Minimum value to check"
                            },
                            "max": {
                              "type": "number",
                              "description": "The maximum value to check"
                            },
                            "precision": {
                              "type": "integer",
                              "description": "When number is a float, this will set the decimal precision",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3
                            },
                            "include": {
                              "type": "boolean",
                              "description": "Include the value in the check",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/blackList.json",
                      "type": "object",
                      "description": "Validate value does not match a list (black list)",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "white_list"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "list"
                          ],
                          "properties": {
                            "list": {
                              "type": "array",
                              "minimum": 1,
                              "maximum": 100,
                              "description": "The list of approved values",
                              "items": {
                                "type": "string"
                              }
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/contains.json",
                      "type": "object",
                      "description": "Validate string contains a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "contains"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "contains"
                          ],
                          "properties": {
                            "contains": {
                              "type": "string",
                              "description": "String must contain with this value"
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/emailAddress.json",
                      "type": "object",
                      "description": "Validate string is a correct email address",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "email_address"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "strict": {
                              "type": "boolean",
                              "description": "Enforce strict standards from ARPA. This will enforce the length of the string",
                              "default": true
                            },
                            "lookup": {
                              "type": "boolean",
                              "description": "Look up the host name and check if it has a valid MX record",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/endsWith.json",
                      "type": "object",
                      "description": "Validate string ends with a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "ends_with"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "ends_with"
                          ],
                          "properties": {
                            "ends_with": {
                              "type": "string",
                              "description": "String must end with this value"
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/equals.json",
                      "type": "object",
                      "description": "Validate number equals a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "equals"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value to compare against"
                            },
                            "precision": {
                              "type": "integer",
                              "description": "When value is a float, this will set the decimal precision",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/greaterThan.json",
                      "type": "object",
                      "description": "Validate number is greater than a value. By default, this will check if value is greater than or equals to",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "greater_than"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value to compare against"
                            },
                            "precision": {
                              "type": "integer",
                              "description": "When number is a float, this will set the decimal precision",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3
                            },
                            "include": {
                              "type": "boolean",
                              "description": "Include the value in the check",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/hostname.json",
                      "type": "object",
                      "description": "Validate string has a correct DNS records",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "hostname"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "record_type": {
                              "type": "string",
                              "description": "DNS record type to validate",
                              "default": "A",
                              "enum": [
                                "A",
                                "AAAA",
                                "AFSDB",
                                "APL",
                                "CAA",
                                "CDNSKEY",
                                "CDS",
                                "CERT",
                                "CNAME",
                                "CSYNC",
                                "DHCID",
                                "DLV",
                                "DNAME",
                                "DNSKEY",
                                "DS",
                                "HIP",
                                "IPSECKEY",
                                "KEY",
                                "KX",
                                "LOC",
                                "MX",
                                "NAPTR",
                                "NS",
                                "NSEC",
                                "NSEC3",
                                "NSEC3PARAM",
                                "OPENPGPKEY",
                                "PTR",
                                "RRSIG",
                                "RP",
                                "SIG",
                                "SMIMEA",
                                "SOA",
                                "SRV",
                                "SSHFP",
                                "TA",
                                "TKEY",
                                "TLSA",
                                "TSIG",
                                "TXT",
                                "URI"
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/ipAddress.json",
                      "type": "object",
                      "description": "Validate string matches an IP address format. Defaults to matching IPv4",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "ipAddress"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "versions": {
                              "type": "array",
                              "description": "IP Version to match against",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "IPv4",
                                  "IPv6"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/length.json",
                      "type": "object",
                      "description": "Validate string is a certain length",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "length"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "length"
                          ],
                          "properties": {
                            "length": {
                              "type": "string",
                              "description": "String must contain with this value"
                            },
                            "operator": {
                              "type": "string",
                              "description": "Which type of length comparision to make",
                              "default": "equals",
                              "enum": [
                                "equals",
                                "less_than",
                                "less_than_equals",
                                "greater_than",
                                "greater_than_equals"
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/lessThan.json",
                      "type": "object",
                      "description": "Validate number is less than a value. By default, this will check if value is less than or equals to",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "lessThan"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "type": "number",
                              "description": "The value to compare against"
                            },
                            "precision": {
                              "type": "integer",
                              "description": "When number is a float, this will set the decimal precision",
                              "minimum": 1,
                              "maximum": 8,
                              "default": 3
                            },
                            "include": {
                              "type": "boolean",
                              "description": "Include the value in the check",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/macAddress.json",
                      "type": "object",
                      "description": "Validate string matches an MAC address format",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "macAddress"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "This validator has no options"
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/mask.json",
                      "type": "object",
                      "description": "Validate string matches a regular expression",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "mask"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "mask"
                          ],
                          "properties": {
                            "mask": {
                              "type": "string",
                              "description": "Mask to validate against"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/startsWith.json",
                      "type": "object",
                      "description": "Validate string starts with a value",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "startsWith"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "starts_with"
                          ],
                          "properties": {
                            "starts_with": {
                              "type": "string",
                              "description": "String must start with this value"
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/step.json",
                      "type": "object",
                      "description": "Validates that a value follows a step. Both start and end options do not have to sync with the step. If they do not sync then find the nearest step.",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "step"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "step"
                          ],
                          "properties": {
                            "step": {
                              "type": "number",
                              "description": "The step value"
                            },
                            "start": {
                              "type": "integer",
                              "description": "Start stepping at this value"
                            },
                            "end": {
                              "type": "integer",
                              "description": "End stepping at this value"
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/uri.json",
                      "type": "object",
                      "description": "Validate string matches an URI",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "uri"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "properties": {
                            "schemes": {
                              "type": "array",
                              "description": "Schemes to match. By default all are matched",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "http",
                                  "https",
                                  "sip",
                                  "sips",
                                  "ftp",
                                  "ftps",
                                  "ldap",
                                  "ldaps",
                                  "file",
                                  "udp",
                                  "tcp",
                                  "urn"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/inputFilter/validators/whiteList.json",
                      "type": "object",
                      "description": "Validate value matches a list (white list)",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "whiteList"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "list"
                          ],
                          "properties": {
                            "list": {
                              "type": "array",
                              "minimum": 1,
                              "maximum": 100,
                              "description": "The list of approved values",
                              "items": {
                                "type": "string"
                              }
                            },
                            "check_case": {
                              "type": "boolean",
                              "description": "Perform a case sensitive match. By default will not match case",
                              "default": false
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "current_status": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
          "type": "object",
          "description": "Defines the properties for a status",
          "additionalProperties": false,
          "required": [
            "status",
            "category"
          ],
          "properties": {
            "status": {
              "type": "string",
              "description": "A Custom label for the status",
              "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
            },
            "category": {
              "type": "string",
              "description": "The classifier for the statues",
              "enum": [
                "PENDING",
                "IN_PROGRESS",
                "VERIFYING",
                "COMPLETE",
                "CANCELLED",
                "BLOCKED"
              ]
            }
          }
        }
      }
    },
    "user": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/user.json",
      "type": "object",
      "description": "User Information",
      "additionalProperties": false,
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The identifier for the user",
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Email address"
        },
        "name": {
          "type": "string",
          "description": "Human readable name"
        },
        "picture": {
          "type": "string",
          "description": "Image for the user"
        },
        "profile": {
          "type": "string",
          "description": "Link to the users profile"
        }
      }
    },
    "vendor": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/vendor.json",
      "type": "object",
      "description": "A Vendor which sells parts",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated"
      ],
      "properties": {
        "vendor_id": {
          "type": "string",
          "description": "unique id",
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "VEN"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "workFlow": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow.json",
      "type": "object",
      "description": "Workflow",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "steps",
        "starts_at",
        "applies_to",
        "schema_version"
      ],
      "properties": {
        "workflow_id": {
          "type": "string",
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "WKF"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "schema_version": {
          "type": "string",
          "description": "Version of the workflow schema used",
          "enum": [
            "1.0"
          ]
        },
        "workflow_version": {
          "type": "integer",
          "description": "Version number for the work flows (the number of times it has been changed",
          "readOnly": true
        },
        "applies_to": {
          "type": "string",
          "description": "The entity type this work flow applies too",
          "enum": [
            "unit",
            "part",
            "program",
            "project",
            "customer",
            "contact"
          ]
        },
        "starts_at": {
          "type": "string",
          "description": "Starting step"
        },
        "steps": {
          "type": "object",
          "description": "Steps for the workflow",
          "uniqueItems": true,
          "additionalProperties": true,
          "patternProperties": {
            "^[A-Za-z][A-Za-z0-9_]*$": {
              "anyOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/function/allocateUnitsToProject.json",
                  "type": "object",
                  "description": "Require the user confirm an action. This is normally used when Niagara cannot automatically detect that a task or action has been performed.",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "function",
                        "payload"
                      ],
                      "properties": {
                        "function": {
                          "type": "string",
                          "enum": [
                            "allocate-units-to-project"
                          ]
                        },
                        "payload": {
                          "type": "object",
                          "required": [
                            "part_id",
                            "project_id",
                            "qty"
                          ],
                          "properties": {
                            "part_id": {
                              "type": "string",
                              "description": "Part ID of the to assign"
                            },
                            "program_id": {
                              "type": "string",
                              "description": "Program ID of the to assign"
                            },
                            "qty": {
                              "type": "number",
                              "minimum": 1,
                              "description": "Number of units to assign to the project"
                            },
                            "allow_scarcity": {
                              "type": "boolean",
                              "description": "Allow the workflow to continue even if there are not enough units"
                            },
                            "force": {
                              "type": "boolean",
                              "description": "Assign the units even if the project already has units allocated"
                            },
                            "status": {
                              "type": "string",
                              "description": "Only assign units which are in this status"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/followPDFInstructions.json",
                  "type": "object",
                  "description": "Display a link or modal to a user which contains instructions from a PDF",
                  "required": [
                    "label",
                    "payload"
                  ],
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for the step"
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "component",
                        "payload"
                      ],
                      "properties": {
                        "component": {
                          "enum": [
                            "follow-pds-instructions"
                          ]
                        },
                        "payload": {
                          "type": "object",
                          "required": [
                            "attachment_id"
                          ],
                          "properties": {
                            "attachment_id": {
                              "type": "string",
                              "description": "UUID for the attachment",
                              "format": "uuid"
                            }
                          }
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                      "type": "object",
                      "description": "A step which requires a user to complete",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of workflow step",
                          "enum": [
                            "load",
                            "choice",
                            "function",
                            "machine",
                            "pass",
                            "fail",
                            "success",
                            "user",
                            "wait"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "component",
                            "payload"
                          ],
                          "properties": {
                            "component": {
                              "type": "string",
                              "description": "Name of the function to invoke"
                            },
                            "payload": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                          "type": "object",
                          "required": [
                            "type",
                            "label",
                            "goto"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of workflow step",
                              "enum": [
                                "load",
                                "choice",
                                "function",
                                "machine",
                                "pass",
                                "fail",
                                "success",
                                "user",
                                "wait"
                              ]
                            },
                            "label": {
                              "type": "string",
                              "description": "Label for the step"
                            },
                            "goto": {
                              "type": "string",
                              "description": "Step to move to",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "goto-fail": {
                              "type": "string",
                              "description": "Step to transition too if this step cannot be completed",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "onComplete": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                              "type": "object",
                              "required": [
                                "retry",
                                "finally"
                              ],
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "description": "Actions to take on failure",
                                  "maxItems": 10,
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/manualDataEntry.json",
                  "type": "object",
                  "description": "Ask the user to manually enter (or confirm) data for an entity",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for the step"
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "component",
                        "payload"
                      ],
                      "properties": {
                        "component": {
                          "enum": [
                            "manual-data-entry"
                          ]
                        },
                        "payload": {
                          "type": "object",
                          "required": [
                            "fields"
                          ],
                          "properties": {
                            "fields": {
                              "type": "array",
                              "description": "Configuration for each field",
                              "items": {
                                "type": "object",
                                "required": [
                                  "input_type",
                                  "label",
                                  "required",
                                  "entity_field"
                                ],
                                "properties": {
                                  "input_type": {
                                    "type": "string",
                                    "description": "The type of input field to display",
                                    "enum": [
                                      "textbox",
                                      "input"
                                    ]
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "Label to display for the field"
                                  },
                                  "required": {
                                    "type": "boolean",
                                    "description": "Display the field as required input. Note: this is a helper function. It singles that the user is required to input data at this step. If the field is required on the entity, the user will be presented with a validation message"
                                  },
                                  "entity_field": {
                                    "type": "string",
                                    "description": "JSON Path to the field on the entity. If the path does not start with '$' then the entity on the context is assumed. Otherwise the data will be set on the context path"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                      "type": "object",
                      "description": "A step which requires a user to complete",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of workflow step",
                          "enum": [
                            "load",
                            "choice",
                            "function",
                            "machine",
                            "pass",
                            "fail",
                            "success",
                            "user",
                            "wait"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "component",
                            "payload"
                          ],
                          "properties": {
                            "component": {
                              "type": "string",
                              "description": "Name of the function to invoke"
                            },
                            "payload": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                          "type": "object",
                          "required": [
                            "type",
                            "label",
                            "goto"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of workflow step",
                              "enum": [
                                "load",
                                "choice",
                                "function",
                                "machine",
                                "pass",
                                "fail",
                                "success",
                                "user",
                                "wait"
                              ]
                            },
                            "label": {
                              "type": "string",
                              "description": "Label for the step"
                            },
                            "goto": {
                              "type": "string",
                              "description": "Step to move to",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "goto-fail": {
                              "type": "string",
                              "description": "Step to transition too if this step cannot be completed",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "onComplete": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                              "type": "object",
                              "required": [
                                "retry",
                                "finally"
                              ],
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "description": "Actions to take on failure",
                                  "maxItems": 10,
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/taskList.json",
                  "type": "object",
                  "description": "Ask the user to follow a list and check off boxes",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for the step"
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "component",
                        "payload"
                      ],
                      "properties": {
                        "component": {
                          "enum": [
                            "task-list"
                          ]
                        },
                        "payload": {
                          "type": "object",
                          "required": [
                            "items"
                          ],
                          "properties": {
                            "is_qc": {
                              "type": "boolean",
                              "description": "Flags this list as a QC task list. This means that a different user can close the task to one previously on the context"
                            },
                            "items": {
                              "type": "array",
                              "description": "Configuration for each task list item",
                              "items": {
                                "type": "object",
                                "required": [
                                  "label",
                                  "help",
                                  "evaluated",
                                  "na_option"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Label to display for the field"
                                  },
                                  "slug": {
                                    "type": "string",
                                    "description": "Slug for the item (Auto-generated from the label)",
                                    "readOnly": true,
                                    "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                                  },
                                  "help": {
                                    "type": "string",
                                    "description": "Message describing what is needed to be checked"
                                  },
                                  "evaluated": {
                                    "type": "boolean",
                                    "description": "When set to true, this will fail the step if the value for the item is false or N/A"
                                  },
                                  "na_field": {
                                    "type": "boolean",
                                    "description": "Allow the user to select the N/A option when checking off the list"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                      "type": "object",
                      "description": "A step which requires a user to complete",
                      "required": [
                        "type",
                        "options"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of workflow step",
                          "enum": [
                            "load",
                            "choice",
                            "function",
                            "machine",
                            "pass",
                            "fail",
                            "success",
                            "user",
                            "wait"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "required": [
                            "component",
                            "payload"
                          ],
                          "properties": {
                            "component": {
                              "type": "string",
                              "description": "Name of the function to invoke"
                            },
                            "payload": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                          "type": "object",
                          "required": [
                            "type",
                            "label",
                            "goto"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Type of workflow step",
                              "enum": [
                                "load",
                                "choice",
                                "function",
                                "machine",
                                "pass",
                                "fail",
                                "success",
                                "user",
                                "wait"
                              ]
                            },
                            "label": {
                              "type": "string",
                              "description": "Label for the step"
                            },
                            "goto": {
                              "type": "string",
                              "description": "Step to move to",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "goto-fail": {
                              "type": "string",
                              "description": "Step to transition too if this step cannot be completed",
                              "pattern": "^[a-z][a-z-]+[a-z]$"
                            },
                            "onComplete": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                              "type": "object",
                              "required": [
                                "retry",
                                "finally"
                              ],
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "description": "Actions to take on failure",
                                  "maxItems": 10,
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/machine/aceIos.json",
                  "type": "object",
                  "description": "Run the ACE-IOS application to provision iOS devices or ",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "machine"
                      ]
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the step"
                    },
                    "options": {
                      "type": "object",
                      "required": [
                        "application",
                        "configuration"
                      ],
                      "properties": {
                        "configuration": {
                          "type": "object",
                          "description": "ACE Configuration options",
                          "properties": {
                            "pairing_cert": {
                              "type": "string",
                              "description": "Contents of a *.crt file exported from Apple Configurator or MDM",
                              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            },
                            "pairing_key": {
                              "type": "string",
                              "description": "Contents of a *.der file exported from Apple Configurator or MDM",
                              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                            },
                            "restore_device": {
                              "type": "boolean",
                              "description": "Restore device to factory defaults"
                            },
                            "automated_enrollment": {
                              "type": "boolean",
                              "description": "Automatically enroll the device to MDM"
                            },
                            "mdm": {
                              "type": "object",
                              "description": "The settings for the Customers MDM",
                              "properties": {
                                "vendor": {
                                  "type": "string",
                                  "description": "MDM vendor. Currently, supported values are AirWatch, JAMF, and Meraki.",
                                  "enum": [
                                    "AirWatch",
                                    "JAMF",
                                    "Meraki"
                                  ]
                                },
                                "console_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Base URL for HTTP requests"
                                },
                                "user": {
                                  "type": "string",
                                  "description": "MDM User name"
                                },
                                "password": {
                                  "type": "string",
                                  "description": "MDM password"
                                },
                                "tenant_code": {
                                  "type": "string",
                                  "description": "MDM authentication key"
                                },
                                "set_asset_tag": {
                                  "type": "string",
                                  "description": "Sets the devices Asset tag based on a field from the unit"
                                }
                              }
                            },
                            "field_mappings": {
                              "type": "array",
                              "description": "List of fields to map to the device",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "description": "The field reported from ACE",
                                    "enum": [
                                      "serial_number",
                                      "name",
                                      "ecid",
                                      "udid",
                                      "configurator_serial",
                                      "ios",
                                      "model",
                                      "storage",
                                      "wifi_mac",
                                      "bt_mac",
                                      "ethernet_mac",
                                      "thundersync_serial",
                                      "iccid",
                                      "iccid2",
                                      "imei",
                                      "imei2",
                                      "missed_profiles",
                                      "missed_apps",
                                      "icon_list_regex",
                                      "icon_layout",
                                      "bat_capacity"
                                    ]
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "Field to set on the entity"
                                  }
                                }
                              }
                            },
                            "wait_for_apps": {
                              "type": "array",
                              "description": "A list of applications needed to be installed on the device. This will cause the extension to poll the device for installed applications. Once all the applications have been installed, this step can be completed",
                              "items": {
                                "type": "string",
                                "format": "uri"
                              }
                            },
                            "wait_for_battery_charge": {
                              "type": "integer",
                              "description": "The required battery percentage needed before this step can move on",
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepChoice.json",
                  "type": "object",
                  "description": "A Step choice",
                  "maxProperties": 2,
                  "minProperties": 2,
                  "required": [
                    "decision"
                  ],
                  "properties": {
                    "decision": {
                      "type": "array",
                      "description": "Context variable to check",
                      "items": {
                        "type": "object",
                        "properties": {
                          "variable": {
                            "type": "string",
                            "description": "Variable or value"
                          },
                          "operator": {
                            "type": "string",
                            "description": "Operator to perform",
                            "enum": [
                              "greater_than_equals",
                              "less_than_equals",
                              "greater_than",
                              "less_than",
                              "equals",
                              "not_equals"
                            ]
                          },
                          "operand": {
                            "type": "string",
                            "description": "operand to compare with"
                          }
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepNext.json",
                      "type": "object",
                      "required": [
                        "type",
                        "label",
                        "goto"
                      ],
                      "properties": {
                        "goto": {
                          "type": "string",
                          "description": "Step to move to",
                          "pattern": "^[a-z][a-z-]+[a-z]$"
                        },
                        "goto-fail": {
                          "type": "string",
                          "description": "Step to transition too if this step cannot be completed",
                          "pattern": "^[a-z][a-z-]+[a-z]$"
                        },
                        "context": {
                          "type": "array",
                          "description": "Values to set on the context",
                          "items": {
                            "type": "object",
                            "required": [
                              "key",
                              "value"
                            ],
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "The context key to set"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value to set"
                              },
                              "lock": {
                                "type": "boolean",
                                "description": "Prevents other steps from writing this value"
                              },
                              "ignore": {
                                "type": "boolean",
                                "description": "When trying to set a locked key, do not fail"
                              }
                            }
                          }
                        },
                        "onStart": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                          "type": "object",
                          "required": [
                            "retry",
                            "finally"
                          ],
                          "properties": {
                            "actions": {
                              "type": "array",
                              "description": "Actions to take on failure",
                              "maxItems": 10,
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "onError": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                          "type": "object",
                          "required": [
                            "retry",
                            "finally"
                          ],
                          "properties": {
                            "retry": {
                              "type": "integer",
                              "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                              "minimum": 0,
                              "maximum": 10,
                              "default": 0
                            },
                            "finally": {
                              "type": "object",
                              "description": "What to do after all retries",
                              "properties": {
                                "actions": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                  "type": "object",
                                  "required": [
                                    "retry",
                                    "finally"
                                  ],
                                  "properties": {
                                    "actions": {
                                      "type": "array",
                                      "description": "Actions to take on failure",
                                      "maxItems": 10,
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "onTimeout": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                          "type": "object",
                          "required": [
                            "retry",
                            "finally"
                          ],
                          "properties": {
                            "retry": {
                              "type": "integer",
                              "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                              "minimum": 0,
                              "maximum": 10,
                              "default": 0
                            },
                            "finally": {
                              "type": "object",
                              "description": "What to do after all retries",
                              "properties": {
                                "actions": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                  "type": "object",
                                  "required": [
                                    "retry",
                                    "finally"
                                  ],
                                  "properties": {
                                    "actions": {
                                      "type": "array",
                                      "description": "Actions to take on failure",
                                      "maxItems": 10,
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepFail.json",
                  "type": "object",
                  "description": "Finial step which is marked as failed",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for the step"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of workflow step",
                      "enum": [
                        "load",
                        "choice",
                        "function",
                        "machine",
                        "pass",
                        "fail",
                        "success",
                        "user",
                        "wait"
                      ]
                    },
                    "onComplete": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                      "type": "object",
                      "required": [
                        "retry",
                        "finally"
                      ],
                      "properties": {
                        "actions": {
                          "type": "array",
                          "description": "Actions to take on failure",
                          "maxItems": 10,
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepPass.json",
                  "type": "object",
                  "description": "Allows executing actions with out performing any function",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of workflow step",
                      "enum": [
                        "load",
                        "choice",
                        "function",
                        "machine",
                        "pass",
                        "fail",
                        "success",
                        "user",
                        "wait"
                      ]
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                      "type": "object",
                      "required": [
                        "type",
                        "label",
                        "goto"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of workflow step",
                          "enum": [
                            "load",
                            "choice",
                            "function",
                            "machine",
                            "pass",
                            "fail",
                            "success",
                            "user",
                            "wait"
                          ]
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "goto": {
                          "type": "string",
                          "description": "Step to move to",
                          "pattern": "^[a-z][a-z-]+[a-z]$"
                        },
                        "goto-fail": {
                          "type": "string",
                          "description": "Step to transition too if this step cannot be completed",
                          "pattern": "^[a-z][a-z-]+[a-z]$"
                        },
                        "onComplete": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                          "type": "object",
                          "required": [
                            "retry",
                            "finally"
                          ],
                          "properties": {
                            "actions": {
                              "type": "array",
                              "description": "Actions to take on failure",
                              "maxItems": 10,
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepSuccess.json",
                  "type": "object",
                  "description": "Finial step which is marked as completed successfully",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for the step"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of workflow step",
                      "enum": [
                        "load",
                        "choice",
                        "function",
                        "machine",
                        "pass",
                        "fail",
                        "success",
                        "user",
                        "wait"
                      ]
                    },
                    "onComplete": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                      "type": "object",
                      "required": [
                        "retry",
                        "finally"
                      ],
                      "properties": {
                        "actions": {
                          "type": "array",
                          "description": "Actions to take on failure",
                          "maxItems": 10,
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepWait.json",
                  "type": "object",
                  "description": "A step which run at certain times",
                  "required": [
                    "stop_at",
                    "time"
                  ],
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for the step"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "wait"
                      ]
                    },
                    "stop_at": {
                      "type": "integer",
                      "description": "Time in seconds to stop this task",
                      "maximum": 900,
                      "minimum": 1
                    },
                    "time": {
                      "type": "integer",
                      "description": "Time to wait before checking this step",
                      "maximum": 900,
                      "minimum": 1
                    },
                    "listen_for": {
                      "type": "array",
                      "description": "List of events and conditions to listen for to trigger",
                      "items": {
                        "type": "object",
                        "required": [
                          "event"
                        ],
                        "properties": {
                          "event": {
                            "type": "string",
                            "description": "Name of the event to listen for",
                            "allOf": [
                              {
                                "type": "string",
                                "description": "Possible entity events",
                                "enum": [
                                  "CON.attached",
                                  "CON.created",
                                  "CON.deleted",
                                  "CON.detached",
                                  "CON.removed",
                                  "CON.updated",
                                  "CUS.attached",
                                  "CUS.created",
                                  "CUS.deleted",
                                  "CUS.detached",
                                  "CUS.removed",
                                  "CUS.updated",
                                  "LOC.attached",
                                  "LOC.created",
                                  "LOC.deleted",
                                  "LOC.detached",
                                  "LOC.removed",
                                  "LOC.updated",
                                  "NOTE.attached",
                                  "NOTE.created",
                                  "NOTE.deleted",
                                  "NOTE.detached",
                                  "NOTE.removed",
                                  "NOTE.updated",
                                  "PART.attached",
                                  "PART.created",
                                  "PART.deleted",
                                  "PART.detached",
                                  "PART.removed",
                                  "PART.updated",
                                  "PGM.attached",
                                  "PGM.created",
                                  "PGM.deleted",
                                  "PGM.detached",
                                  "PGM.removed",
                                  "PGM.updated",
                                  "PRO.attached",
                                  "PRO.created",
                                  "PRO.deleted",
                                  "PRO.detached",
                                  "PRO.removed",
                                  "PRO.updated",
                                  "RES.attached",
                                  "RES.created",
                                  "RES.deleted",
                                  "RES.detached",
                                  "RES.removed",
                                  "RES.updated",
                                  "UNIT.attached",
                                  "UNIT.created",
                                  "UNIT.deleted",
                                  "UNIT.detached",
                                  "UNIT.removed",
                                  "UNIT.updated",
                                  "USER.attached",
                                  "USER.created",
                                  "USER.deleted",
                                  "USER.detached",
                                  "USER.removed",
                                  "USER.updated",
                                  "WKF.attached",
                                  "WKF.created",
                                  "WKF.deleted",
                                  "WKF.detached",
                                  "WKF.removed",
                                  "WKF.updated",
                                  "WOR.attached",
                                  "WOR.created",
                                  "WOR.deleted",
                                  "WOR.detached",
                                  "WOR.removed",
                                  "WOR.updated"
                                ]
                              }
                            ]
                          },
                          "event_value": {
                            "type": "object",
                            "description": "The event conditions that have to be met",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepChoice.json",
                                "type": "object",
                                "description": "A Step choice",
                                "maxProperties": 2,
                                "minProperties": 2,
                                "required": [
                                  "decision"
                                ],
                                "properties": {
                                  "decision": {
                                    "type": "array",
                                    "description": "Context variable to check",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "variable": {
                                          "type": "string",
                                          "description": "Variable or value"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "description": "Operator to perform",
                                          "enum": [
                                            "greater_than_equals",
                                            "less_than_equals",
                                            "greater_than",
                                            "less_than",
                                            "equals",
                                            "not_equals"
                                          ]
                                        },
                                        "operand": {
                                          "type": "string",
                                          "description": "operand to compare with"
                                        }
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepNext.json",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "label",
                                      "goto"
                                    ],
                                    "properties": {
                                      "goto": {
                                        "type": "string",
                                        "description": "Step to move to",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "goto-fail": {
                                        "type": "string",
                                        "description": "Step to transition too if this step cannot be completed",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "context": {
                                        "type": "array",
                                        "description": "Values to set on the context",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "value"
                                          ],
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "description": "The context key to set"
                                            },
                                            "value": {
                                              "type": "string",
                                              "description": "Value to set"
                                            },
                                            "lock": {
                                              "type": "boolean",
                                              "description": "Prevents other steps from writing this value"
                                            },
                                            "ignore": {
                                              "type": "boolean",
                                              "description": "When trying to set a locked key, do not fail"
                                            }
                                          }
                                        }
                                      },
                                      "onStart": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "actions": {
                                            "type": "array",
                                            "description": "Actions to take on failure",
                                            "maxItems": 10,
                                            "items": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      },
                                      "onError": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "retry": {
                                            "type": "integer",
                                            "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                            "minimum": 0,
                                            "maximum": 10,
                                            "default": 0
                                          },
                                          "finally": {
                                            "type": "object",
                                            "description": "What to do after all retries",
                                            "properties": {
                                              "actions": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                "type": "object",
                                                "required": [
                                                  "retry",
                                                  "finally"
                                                ],
                                                "properties": {
                                                  "actions": {
                                                    "type": "array",
                                                    "description": "Actions to take on failure",
                                                    "maxItems": 10,
                                                    "items": {
                                                      "type": "object"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "onTimeout": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "retry": {
                                            "type": "integer",
                                            "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                            "minimum": 0,
                                            "maximum": 10,
                                            "default": 0
                                          },
                                          "finally": {
                                            "type": "object",
                                            "description": "What to do after all retries",
                                            "properties": {
                                              "actions": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                "type": "object",
                                                "required": [
                                                  "retry",
                                                  "finally"
                                                ],
                                                "properties": {
                                                  "actions": {
                                                    "type": "array",
                                                    "description": "Actions to take on failure",
                                                    "maxItems": 10,
                                                    "items": {
                                                      "type": "object"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                      "type": "object",
                      "required": [
                        "type",
                        "label",
                        "goto"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of workflow step",
                          "enum": [
                            "load",
                            "choice",
                            "function",
                            "machine",
                            "pass",
                            "fail",
                            "success",
                            "user",
                            "wait"
                          ]
                        },
                        "label": {
                          "type": "string",
                          "description": "Label for the step"
                        },
                        "goto": {
                          "type": "string",
                          "description": "Step to move to",
                          "pattern": "^[a-z][a-z-]+[a-z]$"
                        },
                        "goto-fail": {
                          "type": "string",
                          "description": "Step to transition too if this step cannot be completed",
                          "pattern": "^[a-z][a-z-]+[a-z]$"
                        },
                        "onComplete": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                          "type": "object",
                          "required": [
                            "retry",
                            "finally"
                          ],
                          "properties": {
                            "actions": {
                              "type": "array",
                              "description": "Actions to take on failure",
                              "maxItems": 10,
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "workOrder": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://docs.nterprise.com/schemas/niagara/workOrder.json",
      "type": "object",
      "description": "Defines the properties for a unit",
      "additionalProperties": false,
      "required": [
        "label",
        "entity_id",
        "entity_type",
        "created",
        "updated",
        "part",
        "work_order_type"
      ],
      "properties": {
        "work_order_id": {
          "type": "string",
          "description": "The identifier for the unit",
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_id": {
          "x-no-api-doc": true,
          "type": "string",
          "description": "Customer identifier",
          "readOnly": true,
          "pattern": "^[0-9a-zA-Z-_]+$"
        },
        "entity_type": {
          "x-no-api-doc": true,
          "const": "WOR"
        },
        "label": {
          "type": "string",
          "description": "Label for the entity"
        },
        "slug": {
          "type": "string",
          "description": "Slug for the entity (Auto-generated from the label)",
          "readOnly": true,
          "deprecated": true,
          "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
        },
        "created": {
          "description": "Date the entity was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated": {
          "description": "Last date the entity was updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "start_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "description": "Start date"
        },
        "end_date": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time",
          "description": "End date"
        },
        "description": {
          "type": "string",
          "description": "Detailed description for the work order"
        },
        "work_order_type": {
          "type": "string",
          "description": "Type of work order",
          "enum": [
            "device"
          ]
        },
        "due_date": {
          "type": "string",
          "format": "date-time",
          "description": "End date"
        },
        "current_status": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
          "type": "object",
          "description": "Defines the properties for a status",
          "additionalProperties": false,
          "required": [
            "status",
            "category"
          ],
          "properties": {
            "status": {
              "type": "string",
              "description": "A Custom label for the status",
              "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
            },
            "category": {
              "type": "string",
              "description": "The classifier for the statues",
              "enum": [
                "PENDING",
                "IN_PROGRESS",
                "VERIFYING",
                "COMPLETE",
                "CANCELLED",
                "BLOCKED"
              ]
            }
          }
        },
        "project": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "$id": "https://docs.nterprise.com/schemas/niagara/project.json",
          "type": "object",
          "description": "Defines the properties for a project",
          "additionalProperties": false,
          "required": [
            "label",
            "entity_id",
            "entity_type",
            "created",
            "updated",
            "customer",
            "program",
            "allowed_statuses"
          ],
          "properties": {
            "project_id": {
              "type": "string",
              "description": "Unique identifier",
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_id": {
              "x-no-api-doc": true,
              "type": "string",
              "description": "Customer identifier",
              "readOnly": true,
              "pattern": "^[0-9a-zA-Z-_]+$"
            },
            "entity_type": {
              "x-no-api-doc": true,
              "const": "PRJ"
            },
            "label": {
              "type": "string",
              "description": "Label for the entity"
            },
            "slug": {
              "type": "string",
              "description": "Slug for the entity (Auto-generated from the label)",
              "readOnly": true,
              "deprecated": true,
              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
            },
            "created": {
              "description": "Date the entity was created",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated": {
              "description": "Last date the entity was updated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "customer": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
              "type": "object",
              "description": "Customer",
              "additionalProperties": false,
              "required": [
                "label",
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "allowed_statuses"
              ],
              "properties": {
                "customer_id": {
                  "description": "Customer identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "CUS"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "external_platform": {
                  "type": "object",
                  "description": "External Identifiers for the customer",
                  "deprecated": true,
                  "patternProperties": {
                    "^[A-Za-z][A-Za-z0-9_]*$": {
                      "type": "string"
                    }
                  }
                },
                "allowed_statuses": {
                  "type": "array",
                  "description": "List of allowed statuses",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                    "type": "object",
                    "description": "Defines the properties for a status",
                    "additionalProperties": false,
                    "required": [
                      "status",
                      "category"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "A Custom label for the status",
                        "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                      },
                      "category": {
                        "type": "string",
                        "description": "The classifier for the statues",
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "VERIFYING",
                          "COMPLETE",
                          "CANCELLED",
                          "BLOCKED"
                        ]
                      }
                    }
                  }
                },
                "total_programs": {
                  "type": "number",
                  "description": "Total programs under the customer"
                },
                "total_projects": {
                  "type": "number",
                  "description": "Total projects under the customer"
                }
              }
            },
            "program": {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/program.json",
              "type": "object",
              "description": "Defines the properties for a program",
              "additionalProperties": false,
              "required": [
                "entity_id",
                "entity_type",
                "created",
                "updated",
                "customer",
                "allowed_statuses"
              ],
              "properties": {
                "program_id": {
                  "description": "Unique identifier",
                  "type": "string",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_id": {
                  "x-no-api-doc": true,
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "entity_type": {
                  "x-no-api-doc": true,
                  "const": "PGM"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "start_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Start date"
                },
                "end_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "End date"
                },
                "customer": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/customer.json",
                  "type": "object",
                  "description": "Customer",
                  "additionalProperties": false,
                  "required": [
                    "label",
                    "entity_id",
                    "entity_type",
                    "created",
                    "updated",
                    "allowed_statuses"
                  ],
                  "properties": {
                    "customer_id": {
                      "description": "Customer identifier",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_id": {
                      "x-no-api-doc": true,
                      "type": "string",
                      "description": "Customer identifier",
                      "readOnly": true,
                      "pattern": "^[0-9a-zA-Z-_]+$"
                    },
                    "entity_type": {
                      "x-no-api-doc": true,
                      "const": "CUS"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the entity"
                    },
                    "slug": {
                      "type": "string",
                      "description": "Slug for the entity (Auto-generated from the label)",
                      "readOnly": true,
                      "deprecated": true,
                      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                    },
                    "created": {
                      "description": "Date the entity was created",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "updated": {
                      "description": "Last date the entity was updated",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "external_platform": {
                      "type": "object",
                      "description": "External Identifiers for the customer",
                      "deprecated": true,
                      "patternProperties": {
                        "^[A-Za-z][A-Za-z0-9_]*$": {
                          "type": "string"
                        }
                      }
                    },
                    "allowed_statuses": {
                      "type": "array",
                      "description": "List of allowed statuses",
                      "uniqueItems": true,
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                        "type": "object",
                        "description": "Defines the properties for a status",
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "category"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "A Custom label for the status",
                            "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                          },
                          "category": {
                            "type": "string",
                            "description": "The classifier for the statues",
                            "enum": [
                              "PENDING",
                              "IN_PROGRESS",
                              "VERIFYING",
                              "COMPLETE",
                              "CANCELLED",
                              "BLOCKED"
                            ]
                          }
                        }
                      }
                    },
                    "total_programs": {
                      "type": "number",
                      "description": "Total programs under the customer"
                    },
                    "total_projects": {
                      "type": "number",
                      "description": "Total projects under the customer"
                    }
                  }
                },
                "allowed_statuses": {
                  "type": "array",
                  "description": "List of allowed statuses",
                  "uniqueItems": true,
                  "items": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                    "type": "object",
                    "description": "Defines the properties for a status",
                    "additionalProperties": false,
                    "required": [
                      "status",
                      "category"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "A Custom label for the status",
                        "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                      },
                      "category": {
                        "type": "string",
                        "description": "The classifier for the statues",
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "VERIFYING",
                          "COMPLETE",
                          "CANCELLED",
                          "BLOCKED"
                        ]
                      }
                    }
                  }
                }
              },
              "allOf": [
                {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$id": "https://docs.nterprise.com/schemas/niagara/dateRange.json",
                  "type": "object",
                  "description": "Active date range for an entity",
                  "properties": {
                    "start_date": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "Start date"
                    },
                    "end_date": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "End date"
                    }
                  }
                }
              ]
            },
            "allowed_statuses": {
              "type": "array",
              "description": "List of allowed statuses",
              "uniqueItems": true,
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://docs.nterprise.com/schemas/niagara/status.json",
                "type": "object",
                "description": "Defines the properties for a status",
                "additionalProperties": false,
                "required": [
                  "status",
                  "category"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "A Custom label for the status",
                    "pattern": "^[A-Za-z][0-9a-zA-Z-_ ]+$"
                  },
                  "category": {
                    "type": "string",
                    "description": "The classifier for the statues",
                    "enum": [
                      "PENDING",
                      "IN_PROGRESS",
                      "VERIFYING",
                      "COMPLETE",
                      "CANCELLED",
                      "BLOCKED"
                    ]
                  }
                }
              }
            },
            "start_date": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time",
              "description": "Start date"
            },
            "end_date": {
              "type": [
                "string",
                "null"
              ],
              "format": "date-time",
              "description": "End date"
            }
          },
          "allOf": [
            {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "$id": "https://docs.nterprise.com/schemas/niagara/entityCommon.json",
              "type": "object",
              "description": "Common Properties to all entities",
              "required": [
                "label"
              ],
              "properties": {
                "entity_id": {
                  "type": "string",
                  "description": "Customer identifier",
                  "readOnly": true,
                  "pattern": "^[0-9a-zA-Z-_]+$"
                },
                "label": {
                  "type": "string",
                  "description": "Label for the entity"
                },
                "slug": {
                  "type": "string",
                  "description": "Slug for the entity (Auto-generated from the label)",
                  "readOnly": true,
                  "deprecated": true,
                  "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                },
                "created": {
                  "description": "Date the entity was created",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated": {
                  "description": "Last date the entity was updated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "work_flows": {
          "type": "array",
          "description": "Cycles of work flows needed to complete the work order",
          "items": {
            "type": "object",
            "required": [
              "cycles_needed",
              "work_flow"
            ],
            "properties": {
              "cycles_needed": {
                "type": "integer",
                "description": "The number of cycles needed",
                "minimum": 1
              },
              "work_flow": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow.json",
                "type": "object",
                "description": "Workflow",
                "additionalProperties": false,
                "required": [
                  "label",
                  "entity_id",
                  "entity_type",
                  "created",
                  "updated",
                  "steps",
                  "starts_at",
                  "applies_to",
                  "schema_version"
                ],
                "properties": {
                  "workflow_id": {
                    "type": "string",
                    "pattern": "^[0-9a-zA-Z-_]+$"
                  },
                  "entity_id": {
                    "x-no-api-doc": true,
                    "type": "string",
                    "description": "Customer identifier",
                    "readOnly": true,
                    "pattern": "^[0-9a-zA-Z-_]+$"
                  },
                  "entity_type": {
                    "x-no-api-doc": true,
                    "const": "WKF"
                  },
                  "label": {
                    "type": "string",
                    "description": "Label for the entity"
                  },
                  "slug": {
                    "type": "string",
                    "description": "Slug for the entity (Auto-generated from the label)",
                    "readOnly": true,
                    "deprecated": true,
                    "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                  },
                  "created": {
                    "description": "Date the entity was created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "updated": {
                    "description": "Last date the entity was updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "schema_version": {
                    "type": "string",
                    "description": "Version of the workflow schema used",
                    "enum": [
                      "1.0"
                    ]
                  },
                  "workflow_version": {
                    "type": "integer",
                    "description": "Version number for the work flows (the number of times it has been changed",
                    "readOnly": true
                  },
                  "applies_to": {
                    "type": "string",
                    "description": "The entity type this work flow applies too",
                    "enum": [
                      "unit",
                      "part",
                      "program",
                      "project",
                      "customer",
                      "contact"
                    ]
                  },
                  "starts_at": {
                    "type": "string",
                    "description": "Starting step"
                  },
                  "steps": {
                    "type": "object",
                    "description": "Steps for the workflow",
                    "uniqueItems": true,
                    "additionalProperties": true,
                    "patternProperties": {
                      "^[A-Za-z][A-Za-z0-9_]*$": {
                        "anyOf": [
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/function/allocateUnitsToProject.json",
                            "type": "object",
                            "description": "Require the user confirm an action. This is normally used when Niagara cannot automatically detect that a task or action has been performed.",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Label for the entity"
                              },
                              "options": {
                                "type": "object",
                                "required": [
                                  "function",
                                  "payload"
                                ],
                                "properties": {
                                  "function": {
                                    "type": "string",
                                    "enum": [
                                      "allocate-units-to-project"
                                    ]
                                  },
                                  "payload": {
                                    "type": "object",
                                    "required": [
                                      "part_id",
                                      "project_id",
                                      "qty"
                                    ],
                                    "properties": {
                                      "part_id": {
                                        "type": "string",
                                        "description": "Part ID of the to assign"
                                      },
                                      "program_id": {
                                        "type": "string",
                                        "description": "Program ID of the to assign"
                                      },
                                      "qty": {
                                        "type": "number",
                                        "minimum": 1,
                                        "description": "Number of units to assign to the project"
                                      },
                                      "allow_scarcity": {
                                        "type": "boolean",
                                        "description": "Allow the workflow to continue even if there are not enough units"
                                      },
                                      "force": {
                                        "type": "boolean",
                                        "description": "Assign the units even if the project already has units allocated"
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "Only assign units which are in this status"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/followPDFInstructions.json",
                            "type": "object",
                            "description": "Display a link or modal to a user which contains instructions from a PDF",
                            "required": [
                              "label",
                              "payload"
                            ],
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Label for the step"
                              },
                              "options": {
                                "type": "object",
                                "required": [
                                  "component",
                                  "payload"
                                ],
                                "properties": {
                                  "component": {
                                    "enum": [
                                      "follow-pds-instructions"
                                    ]
                                  },
                                  "payload": {
                                    "type": "object",
                                    "required": [
                                      "attachment_id"
                                    ],
                                    "properties": {
                                      "attachment_id": {
                                        "type": "string",
                                        "description": "UUID for the attachment",
                                        "format": "uuid"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                                "type": "object",
                                "description": "A step which requires a user to complete",
                                "required": [
                                  "type",
                                  "options"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Type of workflow step",
                                    "enum": [
                                      "load",
                                      "choice",
                                      "function",
                                      "machine",
                                      "pass",
                                      "fail",
                                      "success",
                                      "user",
                                      "wait"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "required": [
                                      "component",
                                      "payload"
                                    ],
                                    "properties": {
                                      "component": {
                                        "type": "string",
                                        "description": "Name of the function to invoke"
                                      },
                                      "payload": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "label",
                                      "goto"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of workflow step",
                                        "enum": [
                                          "load",
                                          "choice",
                                          "function",
                                          "machine",
                                          "pass",
                                          "fail",
                                          "success",
                                          "user",
                                          "wait"
                                        ]
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "Label for the step"
                                      },
                                      "goto": {
                                        "type": "string",
                                        "description": "Step to move to",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "goto-fail": {
                                        "type": "string",
                                        "description": "Step to transition too if this step cannot be completed",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "onComplete": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "actions": {
                                            "type": "array",
                                            "description": "Actions to take on failure",
                                            "maxItems": 10,
                                            "items": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/manualDataEntry.json",
                            "type": "object",
                            "description": "Ask the user to manually enter (or confirm) data for an entity",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Label for the step"
                              },
                              "options": {
                                "type": "object",
                                "required": [
                                  "component",
                                  "payload"
                                ],
                                "properties": {
                                  "component": {
                                    "enum": [
                                      "manual-data-entry"
                                    ]
                                  },
                                  "payload": {
                                    "type": "object",
                                    "required": [
                                      "fields"
                                    ],
                                    "properties": {
                                      "fields": {
                                        "type": "array",
                                        "description": "Configuration for each field",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "input_type",
                                            "label",
                                            "required",
                                            "entity_field"
                                          ],
                                          "properties": {
                                            "input_type": {
                                              "type": "string",
                                              "description": "The type of input field to display",
                                              "enum": [
                                                "textbox",
                                                "input"
                                              ]
                                            },
                                            "label": {
                                              "type": "string",
                                              "description": "Label to display for the field"
                                            },
                                            "required": {
                                              "type": "boolean",
                                              "description": "Display the field as required input. Note: this is a helper function. It singles that the user is required to input data at this step. If the field is required on the entity, the user will be presented with a validation message"
                                            },
                                            "entity_field": {
                                              "type": "string",
                                              "description": "JSON Path to the field on the entity. If the path does not start with '$' then the entity on the context is assumed. Otherwise the data will be set on the context path"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                                "type": "object",
                                "description": "A step which requires a user to complete",
                                "required": [
                                  "type",
                                  "options"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Type of workflow step",
                                    "enum": [
                                      "load",
                                      "choice",
                                      "function",
                                      "machine",
                                      "pass",
                                      "fail",
                                      "success",
                                      "user",
                                      "wait"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "required": [
                                      "component",
                                      "payload"
                                    ],
                                    "properties": {
                                      "component": {
                                        "type": "string",
                                        "description": "Name of the function to invoke"
                                      },
                                      "payload": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "label",
                                      "goto"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of workflow step",
                                        "enum": [
                                          "load",
                                          "choice",
                                          "function",
                                          "machine",
                                          "pass",
                                          "fail",
                                          "success",
                                          "user",
                                          "wait"
                                        ]
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "Label for the step"
                                      },
                                      "goto": {
                                        "type": "string",
                                        "description": "Step to move to",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "goto-fail": {
                                        "type": "string",
                                        "description": "Step to transition too if this step cannot be completed",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "onComplete": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "actions": {
                                            "type": "array",
                                            "description": "Actions to take on failure",
                                            "maxItems": 10,
                                            "items": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/user/taskList.json",
                            "type": "object",
                            "description": "Ask the user to follow a list and check off boxes",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Label for the step"
                              },
                              "options": {
                                "type": "object",
                                "required": [
                                  "component",
                                  "payload"
                                ],
                                "properties": {
                                  "component": {
                                    "enum": [
                                      "task-list"
                                    ]
                                  },
                                  "payload": {
                                    "type": "object",
                                    "required": [
                                      "items"
                                    ],
                                    "properties": {
                                      "is_qc": {
                                        "type": "boolean",
                                        "description": "Flags this list as a QC task list. This means that a different user can close the task to one previously on the context"
                                      },
                                      "items": {
                                        "type": "array",
                                        "description": "Configuration for each task list item",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "label",
                                            "help",
                                            "evaluated",
                                            "na_option"
                                          ],
                                          "properties": {
                                            "label": {
                                              "type": "string",
                                              "description": "Label to display for the field"
                                            },
                                            "slug": {
                                              "type": "string",
                                              "description": "Slug for the item (Auto-generated from the label)",
                                              "readOnly": true,
                                              "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
                                            },
                                            "help": {
                                              "type": "string",
                                              "description": "Message describing what is needed to be checked"
                                            },
                                            "evaluated": {
                                              "type": "boolean",
                                              "description": "When set to true, this will fail the step if the value for the item is false or N/A"
                                            },
                                            "na_field": {
                                              "type": "boolean",
                                              "description": "Allow the user to select the N/A option when checking off the list"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepUser.json",
                                "type": "object",
                                "description": "A step which requires a user to complete",
                                "required": [
                                  "type",
                                  "options"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Type of workflow step",
                                    "enum": [
                                      "load",
                                      "choice",
                                      "function",
                                      "machine",
                                      "pass",
                                      "fail",
                                      "success",
                                      "user",
                                      "wait"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "required": [
                                      "component",
                                      "payload"
                                    ],
                                    "properties": {
                                      "component": {
                                        "type": "string",
                                        "description": "Name of the function to invoke"
                                      },
                                      "payload": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                },
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "label",
                                      "goto"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of workflow step",
                                        "enum": [
                                          "load",
                                          "choice",
                                          "function",
                                          "machine",
                                          "pass",
                                          "fail",
                                          "success",
                                          "user",
                                          "wait"
                                        ]
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "Label for the step"
                                      },
                                      "goto": {
                                        "type": "string",
                                        "description": "Step to move to",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "goto-fail": {
                                        "type": "string",
                                        "description": "Step to transition too if this step cannot be completed",
                                        "pattern": "^[a-z][a-z-]+[a-z]$"
                                      },
                                      "onComplete": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                        "type": "object",
                                        "required": [
                                          "retry",
                                          "finally"
                                        ],
                                        "properties": {
                                          "actions": {
                                            "type": "array",
                                            "description": "Actions to take on failure",
                                            "maxItems": 10,
                                            "items": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/machine/aceIos.json",
                            "type": "object",
                            "description": "Run the ACE-IOS application to provision iOS devices or ",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "machine"
                                ]
                              },
                              "label": {
                                "type": "string",
                                "description": "Label for the step"
                              },
                              "options": {
                                "type": "object",
                                "required": [
                                  "application",
                                  "configuration"
                                ],
                                "properties": {
                                  "configuration": {
                                    "type": "object",
                                    "description": "ACE Configuration options",
                                    "properties": {
                                      "pairing_cert": {
                                        "type": "string",
                                        "description": "Contents of a *.crt file exported from Apple Configurator or MDM",
                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      },
                                      "pairing_key": {
                                        "type": "string",
                                        "description": "Contents of a *.der file exported from Apple Configurator or MDM",
                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                                      },
                                      "restore_device": {
                                        "type": "boolean",
                                        "description": "Restore device to factory defaults"
                                      },
                                      "automated_enrollment": {
                                        "type": "boolean",
                                        "description": "Automatically enroll the device to MDM"
                                      },
                                      "mdm": {
                                        "type": "object",
                                        "description": "The settings for the Customers MDM",
                                        "properties": {
                                          "vendor": {
                                            "type": "string",
                                            "description": "MDM vendor. Currently, supported values are AirWatch, JAMF, and Meraki.",
                                            "enum": [
                                              "AirWatch",
                                              "JAMF",
                                              "Meraki"
                                            ]
                                          },
                                          "console_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "Base URL for HTTP requests"
                                          },
                                          "user": {
                                            "type": "string",
                                            "description": "MDM User name"
                                          },
                                          "password": {
                                            "type": "string",
                                            "description": "MDM password"
                                          },
                                          "tenant_code": {
                                            "type": "string",
                                            "description": "MDM authentication key"
                                          },
                                          "set_asset_tag": {
                                            "type": "string",
                                            "description": "Sets the devices Asset tag based on a field from the unit"
                                          }
                                        }
                                      },
                                      "field_mappings": {
                                        "type": "array",
                                        "description": "List of fields to map to the device",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "from": {
                                              "type": "string",
                                              "description": "The field reported from ACE",
                                              "enum": [
                                                "serial_number",
                                                "name",
                                                "ecid",
                                                "udid",
                                                "configurator_serial",
                                                "ios",
                                                "model",
                                                "storage",
                                                "wifi_mac",
                                                "bt_mac",
                                                "ethernet_mac",
                                                "thundersync_serial",
                                                "iccid",
                                                "iccid2",
                                                "imei",
                                                "imei2",
                                                "missed_profiles",
                                                "missed_apps",
                                                "icon_list_regex",
                                                "icon_layout",
                                                "bat_capacity"
                                              ]
                                            },
                                            "to": {
                                              "type": "string",
                                              "description": "Field to set on the entity"
                                            }
                                          }
                                        }
                                      },
                                      "wait_for_apps": {
                                        "type": "array",
                                        "description": "A list of applications needed to be installed on the device. This will cause the extension to poll the device for installed applications. Once all the applications have been installed, this step can be completed",
                                        "items": {
                                          "type": "string",
                                          "format": "uri"
                                        }
                                      },
                                      "wait_for_battery_charge": {
                                        "type": "integer",
                                        "description": "The required battery percentage needed before this step can move on",
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepChoice.json",
                            "type": "object",
                            "description": "A Step choice",
                            "maxProperties": 2,
                            "minProperties": 2,
                            "required": [
                              "decision"
                            ],
                            "properties": {
                              "decision": {
                                "type": "array",
                                "description": "Context variable to check",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "variable": {
                                      "type": "string",
                                      "description": "Variable or value"
                                    },
                                    "operator": {
                                      "type": "string",
                                      "description": "Operator to perform",
                                      "enum": [
                                        "greater_than_equals",
                                        "less_than_equals",
                                        "greater_than",
                                        "less_than",
                                        "equals",
                                        "not_equals"
                                      ]
                                    },
                                    "operand": {
                                      "type": "string",
                                      "description": "operand to compare with"
                                    }
                                  }
                                }
                              }
                            },
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepNext.json",
                                "type": "object",
                                "required": [
                                  "type",
                                  "label",
                                  "goto"
                                ],
                                "properties": {
                                  "goto": {
                                    "type": "string",
                                    "description": "Step to move to",
                                    "pattern": "^[a-z][a-z-]+[a-z]$"
                                  },
                                  "goto-fail": {
                                    "type": "string",
                                    "description": "Step to transition too if this step cannot be completed",
                                    "pattern": "^[a-z][a-z-]+[a-z]$"
                                  },
                                  "context": {
                                    "type": "array",
                                    "description": "Values to set on the context",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "value"
                                      ],
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "The context key to set"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Value to set"
                                        },
                                        "lock": {
                                          "type": "boolean",
                                          "description": "Prevents other steps from writing this value"
                                        },
                                        "ignore": {
                                          "type": "boolean",
                                          "description": "When trying to set a locked key, do not fail"
                                        }
                                      }
                                    }
                                  },
                                  "onStart": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                    "type": "object",
                                    "required": [
                                      "retry",
                                      "finally"
                                    ],
                                    "properties": {
                                      "actions": {
                                        "type": "array",
                                        "description": "Actions to take on failure",
                                        "maxItems": 10,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  },
                                  "onError": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                    "type": "object",
                                    "required": [
                                      "retry",
                                      "finally"
                                    ],
                                    "properties": {
                                      "retry": {
                                        "type": "integer",
                                        "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                        "minimum": 0,
                                        "maximum": 10,
                                        "default": 0
                                      },
                                      "finally": {
                                        "type": "object",
                                        "description": "What to do after all retries",
                                        "properties": {
                                          "actions": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                            "type": "object",
                                            "required": [
                                              "retry",
                                              "finally"
                                            ],
                                            "properties": {
                                              "actions": {
                                                "type": "array",
                                                "description": "Actions to take on failure",
                                                "maxItems": 10,
                                                "items": {
                                                  "type": "object"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "onTimeout": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                    "type": "object",
                                    "required": [
                                      "retry",
                                      "finally"
                                    ],
                                    "properties": {
                                      "retry": {
                                        "type": "integer",
                                        "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                        "minimum": 0,
                                        "maximum": 10,
                                        "default": 0
                                      },
                                      "finally": {
                                        "type": "object",
                                        "description": "What to do after all retries",
                                        "properties": {
                                          "actions": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                            "type": "object",
                                            "required": [
                                              "retry",
                                              "finally"
                                            ],
                                            "properties": {
                                              "actions": {
                                                "type": "array",
                                                "description": "Actions to take on failure",
                                                "maxItems": 10,
                                                "items": {
                                                  "type": "object"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepFail.json",
                            "type": "object",
                            "description": "Finial step which is marked as failed",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Label for the step"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of workflow step",
                                "enum": [
                                  "load",
                                  "choice",
                                  "function",
                                  "machine",
                                  "pass",
                                  "fail",
                                  "success",
                                  "user",
                                  "wait"
                                ]
                              },
                              "onComplete": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                "type": "object",
                                "required": [
                                  "retry",
                                  "finally"
                                ],
                                "properties": {
                                  "actions": {
                                    "type": "array",
                                    "description": "Actions to take on failure",
                                    "maxItems": 10,
                                    "items": {
                                      "type": "object"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepPass.json",
                            "type": "object",
                            "description": "Allows executing actions with out performing any function",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Label for the entity"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of workflow step",
                                "enum": [
                                  "load",
                                  "choice",
                                  "function",
                                  "machine",
                                  "pass",
                                  "fail",
                                  "success",
                                  "user",
                                  "wait"
                                ]
                              }
                            },
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                "type": "object",
                                "required": [
                                  "type",
                                  "label",
                                  "goto"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Type of workflow step",
                                    "enum": [
                                      "load",
                                      "choice",
                                      "function",
                                      "machine",
                                      "pass",
                                      "fail",
                                      "success",
                                      "user",
                                      "wait"
                                    ]
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "goto": {
                                    "type": "string",
                                    "description": "Step to move to",
                                    "pattern": "^[a-z][a-z-]+[a-z]$"
                                  },
                                  "goto-fail": {
                                    "type": "string",
                                    "description": "Step to transition too if this step cannot be completed",
                                    "pattern": "^[a-z][a-z-]+[a-z]$"
                                  },
                                  "onComplete": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                    "type": "object",
                                    "required": [
                                      "retry",
                                      "finally"
                                    ],
                                    "properties": {
                                      "actions": {
                                        "type": "array",
                                        "description": "Actions to take on failure",
                                        "maxItems": 10,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepSuccess.json",
                            "type": "object",
                            "description": "Finial step which is marked as completed successfully",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Label for the step"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of workflow step",
                                "enum": [
                                  "load",
                                  "choice",
                                  "function",
                                  "machine",
                                  "pass",
                                  "fail",
                                  "success",
                                  "user",
                                  "wait"
                                ]
                              },
                              "onComplete": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                "type": "object",
                                "required": [
                                  "retry",
                                  "finally"
                                ],
                                "properties": {
                                  "actions": {
                                    "type": "array",
                                    "description": "Actions to take on failure",
                                    "maxItems": 10,
                                    "items": {
                                      "type": "object"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepWait.json",
                            "type": "object",
                            "description": "A step which run at certain times",
                            "required": [
                              "stop_at",
                              "time"
                            ],
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "Label for the step"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "wait"
                                ]
                              },
                              "stop_at": {
                                "type": "integer",
                                "description": "Time in seconds to stop this task",
                                "maximum": 900,
                                "minimum": 1
                              },
                              "time": {
                                "type": "integer",
                                "description": "Time to wait before checking this step",
                                "maximum": 900,
                                "minimum": 1
                              },
                              "listen_for": {
                                "type": "array",
                                "description": "List of events and conditions to listen for to trigger",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "event"
                                  ],
                                  "properties": {
                                    "event": {
                                      "type": "string",
                                      "description": "Name of the event to listen for",
                                      "allOf": [
                                        {
                                          "type": "string",
                                          "description": "Possible entity events",
                                          "enum": [
                                            "CON.attached",
                                            "CON.created",
                                            "CON.deleted",
                                            "CON.detached",
                                            "CON.removed",
                                            "CON.updated",
                                            "CUS.attached",
                                            "CUS.created",
                                            "CUS.deleted",
                                            "CUS.detached",
                                            "CUS.removed",
                                            "CUS.updated",
                                            "LOC.attached",
                                            "LOC.created",
                                            "LOC.deleted",
                                            "LOC.detached",
                                            "LOC.removed",
                                            "LOC.updated",
                                            "NOTE.attached",
                                            "NOTE.created",
                                            "NOTE.deleted",
                                            "NOTE.detached",
                                            "NOTE.removed",
                                            "NOTE.updated",
                                            "PART.attached",
                                            "PART.created",
                                            "PART.deleted",
                                            "PART.detached",
                                            "PART.removed",
                                            "PART.updated",
                                            "PGM.attached",
                                            "PGM.created",
                                            "PGM.deleted",
                                            "PGM.detached",
                                            "PGM.removed",
                                            "PGM.updated",
                                            "PRO.attached",
                                            "PRO.created",
                                            "PRO.deleted",
                                            "PRO.detached",
                                            "PRO.removed",
                                            "PRO.updated",
                                            "RES.attached",
                                            "RES.created",
                                            "RES.deleted",
                                            "RES.detached",
                                            "RES.removed",
                                            "RES.updated",
                                            "UNIT.attached",
                                            "UNIT.created",
                                            "UNIT.deleted",
                                            "UNIT.detached",
                                            "UNIT.removed",
                                            "UNIT.updated",
                                            "USER.attached",
                                            "USER.created",
                                            "USER.deleted",
                                            "USER.detached",
                                            "USER.removed",
                                            "USER.updated",
                                            "WKF.attached",
                                            "WKF.created",
                                            "WKF.deleted",
                                            "WKF.detached",
                                            "WKF.removed",
                                            "WKF.updated",
                                            "WOR.attached",
                                            "WOR.created",
                                            "WOR.deleted",
                                            "WOR.detached",
                                            "WOR.removed",
                                            "WOR.updated"
                                          ]
                                        }
                                      ]
                                    },
                                    "event_value": {
                                      "type": "object",
                                      "description": "The event conditions that have to be met",
                                      "allOf": [
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepChoice.json",
                                          "type": "object",
                                          "description": "A Step choice",
                                          "maxProperties": 2,
                                          "minProperties": 2,
                                          "required": [
                                            "decision"
                                          ],
                                          "properties": {
                                            "decision": {
                                              "type": "array",
                                              "description": "Context variable to check",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "variable": {
                                                    "type": "string",
                                                    "description": "Variable or value"
                                                  },
                                                  "operator": {
                                                    "type": "string",
                                                    "description": "Operator to perform",
                                                    "enum": [
                                                      "greater_than_equals",
                                                      "less_than_equals",
                                                      "greater_than",
                                                      "less_than",
                                                      "equals",
                                                      "not_equals"
                                                    ]
                                                  },
                                                  "operand": {
                                                    "type": "string",
                                                    "description": "operand to compare with"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepNext.json",
                                              "type": "object",
                                              "required": [
                                                "type",
                                                "label",
                                                "goto"
                                              ],
                                              "properties": {
                                                "goto": {
                                                  "type": "string",
                                                  "description": "Step to move to",
                                                  "pattern": "^[a-z][a-z-]+[a-z]$"
                                                },
                                                "goto-fail": {
                                                  "type": "string",
                                                  "description": "Step to transition too if this step cannot be completed",
                                                  "pattern": "^[a-z][a-z-]+[a-z]$"
                                                },
                                                "context": {
                                                  "type": "array",
                                                  "description": "Values to set on the context",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string",
                                                        "description": "The context key to set"
                                                      },
                                                      "value": {
                                                        "type": "string",
                                                        "description": "Value to set"
                                                      },
                                                      "lock": {
                                                        "type": "boolean",
                                                        "description": "Prevents other steps from writing this value"
                                                      },
                                                      "ignore": {
                                                        "type": "boolean",
                                                        "description": "When trying to set a locked key, do not fail"
                                                      }
                                                    }
                                                  }
                                                },
                                                "onStart": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                  "type": "object",
                                                  "required": [
                                                    "retry",
                                                    "finally"
                                                  ],
                                                  "properties": {
                                                    "actions": {
                                                      "type": "array",
                                                      "description": "Actions to take on failure",
                                                      "maxItems": 10,
                                                      "items": {
                                                        "type": "object"
                                                      }
                                                    }
                                                  }
                                                },
                                                "onError": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                                  "type": "object",
                                                  "required": [
                                                    "retry",
                                                    "finally"
                                                  ],
                                                  "properties": {
                                                    "retry": {
                                                      "type": "integer",
                                                      "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                                      "minimum": 0,
                                                      "maximum": 10,
                                                      "default": 0
                                                    },
                                                    "finally": {
                                                      "type": "object",
                                                      "description": "What to do after all retries",
                                                      "properties": {
                                                        "actions": {
                                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                          "type": "object",
                                                          "required": [
                                                            "retry",
                                                            "finally"
                                                          ],
                                                          "properties": {
                                                            "actions": {
                                                              "type": "array",
                                                              "description": "Actions to take on failure",
                                                              "maxItems": 10,
                                                              "items": {
                                                                "type": "object"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "onTimeout": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepError.json",
                                                  "type": "object",
                                                  "required": [
                                                    "retry",
                                                    "finally"
                                                  ],
                                                  "properties": {
                                                    "retry": {
                                                      "type": "integer",
                                                      "description": "Number of times to retry this step. Note: retry will only occur on steps which automatically failed. If the step was transitioned using the 'goto-fail' step, the actions will be fired but the step WILL NOT be re-tried",
                                                      "minimum": 0,
                                                      "maximum": 10,
                                                      "default": 0
                                                    },
                                                    "finally": {
                                                      "type": "object",
                                                      "description": "What to do after all retries",
                                                      "properties": {
                                                        "actions": {
                                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                                          "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                                          "type": "object",
                                                          "required": [
                                                            "retry",
                                                            "finally"
                                                          ],
                                                          "properties": {
                                                            "actions": {
                                                              "type": "array",
                                                              "description": "Actions to take on failure",
                                                              "maxItems": 10,
                                                              "items": {
                                                                "type": "object"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepCommon.json",
                                "type": "object",
                                "required": [
                                  "type",
                                  "label",
                                  "goto"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Type of workflow step",
                                    "enum": [
                                      "load",
                                      "choice",
                                      "function",
                                      "machine",
                                      "pass",
                                      "fail",
                                      "success",
                                      "user",
                                      "wait"
                                    ]
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "Label for the step"
                                  },
                                  "goto": {
                                    "type": "string",
                                    "description": "Step to move to",
                                    "pattern": "^[a-z][a-z-]+[a-z]$"
                                  },
                                  "goto-fail": {
                                    "type": "string",
                                    "description": "Step to transition too if this step cannot be completed",
                                    "pattern": "^[a-z][a-z-]+[a-z]$"
                                  },
                                  "onComplete": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "$id": "https://docs.nterprise.com/schemas/niagara/workFlow/steps/stepActions.json",
                                    "type": "object",
                                    "required": [
                                      "retry",
                                      "finally"
                                    ],
                                    "properties": {
                                      "actions": {
                                        "type": "array",
                                        "description": "Actions to take on failure",
                                        "maxItems": 10,
                                        "items": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}