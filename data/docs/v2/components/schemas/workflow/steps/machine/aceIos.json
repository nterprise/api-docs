{
  "type": "object",
  "description": "Run the ACE-IOS application to provision iOS devices or ",
  "properties": {
    "label": {
      "x-examples": [
        "Run Application"
      ]
    },
    "options": {
      "type": "object",
      "required": [
        "application",
        "configuration"
      ],
      "properties": {
        "configuration": {
          "type": "object",
          "description": "ACE Configuration options",
          "properties": {
            "pairing_cert": {
              "type": "string",
              "format": "base64",
              "description": "Contents of a *.crt file exported from Apple Configurator or MDM",
              "example": "dGhpcyBpcyBub3QgYSBjZXJ0IGZpbGUganVzdCBhbiBleGFtcGxl",
              "x-examples": [
                "dGhpcyBpcyBub3QgYSBjZXJ0IGZpbGUganVzdCBhbiBleGFtcGxl"
              ],
              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "pairing_key": {
              "type": "string",
              "format": "base64",
              "description": "Contents of a *.der file exported from Apple Configurator or MDM",
              "example": "dGhpcyBpcyBub3QgYSBjZXJ0IGZpbGUganVzdCBhbiBleGFtcGxl",
              "x-examples": [
                "dGhpcyBpcyBub3QgYSBjZXJ0IGZpbGUganVzdCBhbiBleGFtcGxl"
              ],
              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            },
            "restore_device": {
              "type": "boolean",
              "description": "Restore device to factory defaults"
            },
            "automated_enrollment": {
              "type": "boolean",
              "description": "Automatically enroll the device to MDM"
            },
            "mdm": {
              "type": "object",
              "format": "base64",
              "description": "The settings for the Customers MDM",
              "properties": {
                "vendor": {
                  "type": "string",
                  "description": "MDM vendor. Currently, supported values are AirWatch, JAMF, and Meraki.",
                  "enum": [
                    "AirWatch",
                    "JAMF",
                    "Meraki"
                  ]
                },
                "console_url": {
                  "type": "string",
                  "format": "uri",
                  "description": "Base URL for HTTP requests",
                  "example": "http://jamf.zones.com",
                  "x-examples": [
                    "http://jamf.zones.com"
                  ]
                },
                "user": {
                  "type": "string",
                  "description": "MDM User name",
                  "example": "NterpriseBob",
                  "x-examples": [
                    "NterpriseBob"
                  ]
                },
                "password": {
                  "type": "string",
                  "description": "MDM password"
                },
                "tenant_code": {
                  "type": "string",
                  "description": "MDM authentication key",
                  "example": "nterprise",
                  "x-examples": [
                    "nterprise"
                  ]
                },
                "set_asset_tag": {
                  "type": "string",
                  "description": "Sets the devices Asset tag based on a field from the unit",
                  "example": "$._entity.input_filter[?(@.key = 'asset-tag')]",
                  "x-examples": [
                    "$._entity.input_filter[?(@.key = 'asset-tag')]"
                  ]
                }
              }
            },
            "field_mappings": {
              "type": "array",
              "description": "List of fields to map to the device",
              "items": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "The field reported from ACE",
                    "enum": [
                      "serial_number",
                      "name",
                      "ecid",
                      "udid",
                      "configurator_serial",
                      "ios",
                      "model",
                      "storage",
                      "wifi_mac",
                      "bt_mac",
                      "ethernet_mac",
                      "thundersync_serial",
                      "iccid",
                      "iccid2",
                      "imei",
                      "imei2",
                      "missed_profiles",
                      "missed_apps",
                      "icon_list_regex",
                      "icon_layout",
                      "bat_capacity"
                    ]
                  },
                  "to": {
                    "type": "string",
                    "description": "Field to set on the entity",
                    "example": "$._entity.input_filter[?(@.key = 'serial-number')]",
                    "x-examples": [
                      "$._entity.input_filter[?(@.key = 'serial-number')]"
                    ]
                  }
                }
              }
            },
            "wait_for_apps": {
              "type": "array",
              "description": "A list of applications needed to be installed on the device. This will cause the extension to poll the device for installed applications. Once all the applications have been installed, this step can be completed",
              "items": {
                "type": "string",
                "format": "uri",
                "example": "com.apple.itunes",
                "x-examples": [
                  "com.apple.itunes"
                ]
              }
            },
            "wait_for_battery_charge": {
              "type": "integer",
              "description": "The required battery percentage needed before this step can move on",
              "minimum": 0,
              "maximum": 100
            }
          }
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "../stepMachine.json"
    }
  ]
}
